<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaoXuan</title>
  
  <subtitle>道宣的窝</subtitle>
  <link href="https://daoxuan.cc/atom.xml" rel="self"/>
  
  <link href="https://daoxuan.cc/"/>
  <updated>2025-08-18T05:39:33.430Z</updated>
  <id>https://daoxuan.cc/</id>
  
  <author>
    <name>道宣</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>waf.sb + github page + cloudflare hexo博客部署方案</title>
    <link href="https://daoxuan.cc/posts/30621/"/>
    <id>https://daoxuan.cc/posts/30621/</id>
    <published>2025-08-17T10:54:44.000Z</published>
    <updated>2025-08-18T05:39:33.430Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>博客放在自己的云服务器上面感觉不够稳，因此还是转回了github page</p><p>具体的github page如何配置网上一堆教程，具体需要注意的是Custom domain不需要设置，设置的话改变的也是一个回源主机名（host），因此不需要填东西。</p><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>由于cloudflare的顶级域名使用CNAME的时候会使用CNAME展平,相当于顶级域名还是A类型解析， 因此正常的CNAME记录检验会失效。</p><blockquote><ol><li><p><strong>正常CNAME 记录:</strong></p><p>当一个域名配置为CNAME 记录指向另一个域名时，DNS 解析器需要进行多次查询才能最终获取到目标域名的IP 地址。</p></li><li><p><strong>Cloudflare CNAME 展平:</strong></p><p>启用CNAME 展平后，Cloudflare 会在第一次DNS 查询时，直接将CNAME 记录解析为目标域名的IP 地址，而不是返回另一个CNAME 记录。这样客户端就只需要进行一次DNS 查询，从而提高效率。</p></li></ol></blockquote><p>所以我们不用顶级域名，使用blog.daoxuan.cc来部署博客。</p><p>然而之前我一直用的是顶级域名daoxuan.cc部署博客，所以需要配置一个自动跳转。</p><h3 id="解析记录"><a href="#解析记录" class="headerlink" title="解析记录"></a>解析记录</h3><div class="table-container"><table><thead><tr><th>类型</th><th>名称</th><th>内容</th><th>代理状态</th></tr></thead><tbody><tr><td>A</td><td>daoxuan(@)</td><td>185.199.110.153</td><td>已代理</td></tr><tr><td>CNAME</td><td>blog</td><td>xxxxx.onwaf.com</td><td>仅DNS</td></tr></tbody></table></div><p>@的内容无所谓，但是代理一定要开，因为我们需要用到cf的重定向功能。</p><p>blog配置的是CDN的CNAME记录。</p><h3 id="301重定向"><a href="#301重定向" class="headerlink" title="301重定向"></a>301重定向</h3><ol><li>进入 <strong>Rules</strong> &gt; <strong>Page Rules</strong>。</li><li>点击 <strong>Create Page Rule</strong>，填写以下规则：<ul><li><strong>URL matches</strong>: <code>daoxuan.cc/*</code>（匹配所有 <code>daoxuan.cc</code> 的请求）</li><li><strong>Then the settings are</strong>:<ul><li>选择 <strong>Forwarding URL</strong> &gt; <strong>301 - Permanent Redirect</strong></li><li>目标 URL 填写：<code>https://blog.daoxuan.cc/$1</code>（<code>$1</code> 会保留原始路径）</li></ul></li></ul></li><li>点击 <strong>Save and Deploy</strong> 保存规则。</li></ol><p><img src="https://image.daoxuan.cc/2025/08/71480d417c9d249ac5768aabf4da58bf.png" alt="image-20250818133720246"></p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>CDN使用的是waf.sb，速度非常可观。<a href="">白佬推荐</a></p><p>配置就按照blog.daoxuan.cc正常配置，需要注意的是源站使用github.io那个地址，回源主机名也使用这个名字（github的规则如此，如果在github page那里配置了Custom domain，这里的回源host也需要使用Custom domain，如果还使用github.io，github会重定向）</p><h2 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h2><p><img src="https://image.daoxuan.cc/2025/08/315507fd491f43a2ef23951815067de0.png" alt="image-20250818133857049"></p><p>速度非常可观。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h2 id=&quot;部署&quot;&gt;&lt;a href=&quot;#部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h2&gt;&lt;p&gt;博客放在自己的云服务器上面感觉不够稳，因此还是转回了github page&lt;/</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://daoxuan.cc/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>NAT的四种类型</title>
    <link href="https://daoxuan.cc/posts/58955/"/>
    <id>https://daoxuan.cc/posts/58955/</id>
    <published>2025-08-17T06:22:48.000Z</published>
    <updated>2025-08-17T07:42:18.785Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="NAT的四种类型"><a href="#NAT的四种类型" class="headerlink" title="NAT的四种类型"></a>NAT的四种类型</h1><p>参考文章：</p><p><a href="https://blog.csdn.net/s2603898260/article/details/11875547">NAT的四种分类：全锥形NAT,地址受限锥形NAT,端口受限锥形NAT,对称NAT</a></p><h2 id="Full-cone-NAT（全锥形NAT）"><a href="#Full-cone-NAT（全锥形NAT）" class="headerlink" title="Full cone NAT（全锥形NAT）"></a>Full cone NAT（全锥形NAT）</h2><blockquote><p><strong>所有从同一个内网的（IP，端口）发送出来的请求都会被映射到同一个外网（IP，端口），且任何一个外网主机都可以通过访问映射后的公网地址，实现访问位于内网的主机设备功能。</strong></p><p>外网主机可以主动连接内网主机。</p></blockquote><p><img src="https://image.daoxuan.cc/2025/08/1adccc807281c0afa142ce634a3c7a35.png" alt=""></p><h2 id="Restricted-Cone-NAT（地址受限锥形NAT）"><a href="#Restricted-Cone-NAT（地址受限锥形NAT）" class="headerlink" title="Restricted Cone NAT（地址受限锥形NAT）"></a>Restricted Cone NAT（地址受限锥形NAT）</h2><blockquote><p>所有从同一个内网的（IP，端口）发送出来的请求都会被映射到通过一个外网（IP，端口），但与全锥形不同点在于：生成的映射表项与目的IP有关，只有符合要求的目的IP(要访问的公网服务器IP)才可以通讯。此NAT还有个特点：不能主动连接内网中的主机地址，连接必须由内网地址发起。</p><p>限制比全锥形NAT多了：IP地址限制。</p></blockquote><p>此类型NAT除了与源IP和源端口相关外，还与目的IP有关，只有内网主机主动连接的公网IP才可以与内网中的主机通讯。</p><p><img src="https://image.daoxuan.cc/2025/08/8ae88aeed2b1916a9f759ab9aa812877.png" alt="在这里插入图片描述"></p><h2 id="Port-Restricted-Cone-NAT（端口受限锥形NAT）"><a href="#Port-Restricted-Cone-NAT（端口受限锥形NAT）" class="headerlink" title="Port Restricted Cone NAT（端口受限锥形NAT）"></a>Port Restricted Cone NAT（端口受限锥形NAT）</h2><blockquote><p>所有从同一个内网的（IP，端口）发送出来的请求都会被映射到通过一个外网（IP，端口），但是在地址受限锥形NAT基础上增加了端口的限制。</p><p>地址受限锥形NAT时，只有内网主机主动连接的公网主机才可与之进行通讯，而不用担心端口号是否与请求的端口相同。</p><p>但是端口受限锥形NAT除了IP限制外，增加了端口限制。意思是说：除了之前主动连接了主机的（IP，port1,）可以通讯，其他的（IP，port2）等都不可以与之通讯。此NAT映射与报文的三元组绑定</p></blockquote><p><img src="https://image.daoxuan.cc/2025/08/8543bc0f2da38172dac22217358ad06d.jpeg" alt="在这里插入图片描述"></p><h2 id="Symetric-NAT（对称NAT）"><a href="#Symetric-NAT（对称NAT）" class="headerlink" title="Symetric NAT（对称NAT）"></a>Symetric NAT（对称NAT）</h2><blockquote><p>所有从同一个内网（IP，端口）发送到同一个目的IP和端口的请求都会被映射到同一个IP和端口。换句话说（SIP，Sport, DIP, Dport）只要有一个发生变化都会使用不同的映射条目，即此NAT映射与报文四元组绑定。</p></blockquote><ul><li>SIP: Source IP，源IP地址</li><li>Sport: Source Port，源端口</li><li>DIP: Destination IP，目的IP地址</li><li>Dport: Destination Port，目的端口</li></ul><p><img src="https://image.daoxuan.cc/2025/08/5894c4f46833a9bd0e1c80fb1c1abb32.png" alt="在这里插入图片描述"></p><p><strong>“流量过滤的过程依赖 <code>conntrack</code> 维护的连接状态记录，但实际的过滤行为是由iptables/nftables规则或内核NAT模块根据这些状态执行的。”</strong></p><h4 id="具体流程示例"><a href="#具体流程示例" class="headerlink" title="具体流程示例"></a><strong>具体流程示例</strong></h4><ol><li><strong>内网主机</strong> <code>192.168.1.100</code> 访问 <code>8.8.8.8:80</code>，<code>conntrack</code> 记录状态为 <code>NEW</code>。</li><li><strong>iptables的NAT规则</strong> 在 <code>POSTROUTING</code> 链修改源IP为 <code>1.2.3.4:60000</code>，并更新 <code>conntrack</code>。</li><li><strong>返回包</strong> <code>8.8.8.8:80 → 1.2.3.4:60000</code> 到达时：<ul><li>内核查询 <code>conntrack</code>，发现匹配 <code>ESTABLISHED</code> 状态。</li><li><strong>如果是对称NAT</strong>：进一步检查端口是否匹配会话。</li><li><strong>如果是端口受限锥形NAT</strong>：检查 <code>8.8.8.8:80</code> 是否在记录中。</li></ul></li><li><strong>最终决策</strong>：<ul><li>通过 <code>conntrack</code> 验证后，内核决定是否转发或丢弃数据包。</li></ul></li></ol><h3 id="🌟-总结"><a href="#🌟-总结" class="headerlink" title="🌟 总结"></a>🌟 <strong>总结</strong></h3><ul><li><strong><code>conntrack</code> 是“账本”</strong>：记录谁在和谁通信。</li><li><strong>iptables/内核是“警察”</strong>：根据账本决定是否放行。</li></ul></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;NAT的四种类型&quot;&gt;&lt;a href=&quot;#NAT的四种类型&quot; class=&quot;headerlink&quot; title=&quot;NAT的四种类型&quot;&gt;&lt;/a&gt;NAT的四种类型&lt;/h1&gt;&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
      
    
    
    
    
    <category term="网络" scheme="https://daoxuan.cc/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>充电桩mqtt弃用后的使用透传的平替方案</title>
    <link href="https://daoxuan.cc/posts/59863/"/>
    <id>https://daoxuan.cc/posts/59863/</id>
    <published>2025-08-03T14:04:39.000Z</published>
    <updated>2025-08-03T14:10:36.012Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="充电桩mqtt弃用后的使用透传的平替方案"><a href="#充电桩mqtt弃用后的使用透传的平替方案" class="headerlink" title="充电桩mqtt弃用后的使用透传的平替方案"></a>充电桩mqtt弃用后的使用透传的平替方案</h1><blockquote><p>mqtt是原本的充电桩项目方案，本身具有按照主题发布消息订阅消息的能力，不过由于硬件方声称使用mqtt丢包率过高，需要更换为透传的方式，故而有了这个平替方案设计</p></blockquote><h2 id="MQTT协议工作原理"><a href="#MQTT协议工作原理" class="headerlink" title="MQTT协议工作原理"></a>MQTT协议工作原理</h2><p>在 MQTT 协议中有三种身份：发布者（Publish）、代理（Broker）（服务器）和订阅者（Subscribe）。其中消息的发布者和订阅者都是客户端，消息代理是服务器，消息发布者可以同时是订阅者，这三者的关系如下图所示：</p><p><img src="https://image.daoxuan.cc/2025/08/854b4fb9d5ea00afd6cb2187685b8a17.png" alt="mqtt_principle"></p><p>在 MQTT 协议的实际使用过程中，一般遵循以下流程：</p><ul><li>发布者通过代理服务器向指定的 Topic 发布消息。</li><li>订阅者通过代理服务器订阅所需要的 Topic。</li><li>订阅成功后如果有发布者向订阅者订阅的 Topic 发布消息，那么订阅者就会收到代理服务器的推送消息，通过这种方式可以进行高效的数据交换。</li></ul><p>在原本的工作逻辑中，Broker是docker部署的RMQX（一个开箱即用的mqtt代理），需要通信的三方：充电桩、后端服务器、微信小程序，都会同时作为发布者和订阅者，通过合理设置主题，实现充电流程的通信（细节不做说明）</p><p><strong>可以看出这里的Broker是核心</strong></p><p>然而透传便是去掉这个代理，让硬件客户端直接连接到服务器发送消息，也就是说直接使用<code>TCP</code>发送数据包。</p><h2 id="透传的工作原理"><a href="#透传的工作原理" class="headerlink" title="透传的工作原理"></a>透传的工作原理</h2><p>去掉Broker后，硬件客户端通过<code>TCP</code>协议连接到后端服务器，因为tcp是全双工的，因此，充电桩和后端服务器之前的通信算是打通了。然而微信客户端如何与硬件进行通信呢？</p><p>微信需要向充电桩下达充电指令，结束充电指令以及，状态查询指令，充电桩需要向微信回复指令的执行结果以及充电过程中的计费信息。两者也是需要双向通行的，然而两者都没有固定的ip，因此，需要借助后端服务器进行中转。</p><h3 id="小程序-——-后端服务器"><a href="#小程序-——-后端服务器" class="headerlink" title="小程序 —— 后端服务器"></a>小程序 —— 后端服务器</h3><p>由于前端吐槽ws协议连接起来也不稳定，因此小程序和后端通信使用http协议，为了确保及时性，采用http轮询。</p><h3 id="微信小程序→充电桩"><a href="#微信小程序→充电桩" class="headerlink" title="微信小程序→充电桩"></a>微信小程序→充电桩</h3><p>小程序通过http协议向后端服务器发送充电开始请求，携带充电桩编号，后端服务器接收到消息以后构建消息通过TCP发送到对应的充电桩。至此小程序到充电桩的消息发送成功。</p><h3 id="充电桩→微信小程序"><a href="#充电桩→微信小程序" class="headerlink" title="充电桩→微信小程序"></a>充电桩→微信小程序</h3><p>微信小程序需要通过http轮询获取到充电桩信息，因此后端需要记录充电桩回复，将其放回给小程序，由于使用mysql更新对应充电桩字段状态这种方式比较麻烦且性能有限，使用redis记录整个消息无法很好的区分充电桩和主题。因此我选择使用<code>rabbitmq</code>消息对列，将充电桩的回复都发送到rabbitmq中。</p><p>为了能够更好的区分不同充电桩的不同类型消息，使用充电桩的编号作为交换机的名称，使用消息主题作为channel的名称。</p><p>这样小程序查询对应充电桩回复时后端服务器可以通过充电桩编号以及消息主题作为索引，去对应的消息对列中取消息，解析过后按照json格式放回给小程序。</p><p>优点：相较于使用mysql保存字段状态，这个方式不需要改变以及建好的数据库表，可以复用mqtt协议时候的消息解析函数。</p><h2 id="图示流程"><a href="#图示流程" class="headerlink" title="图示流程"></a>图示流程</h2><p><img src="https://image.daoxuan.cc/2025/08/e4e00b6f1740a5d39cc4a957e06583ea.png" alt="image-20250803220315270"></p><p>注：pika是rabbitmq的python SDK</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;充电桩mqtt弃用后的使用透传的平替方案&quot;&gt;&lt;a href=&quot;#充电桩mqtt弃用后的使用透传的平替方案&quot; class=&quot;headerlink&quot; title=&quot;充电桩mqtt弃用后的使用透传的平替方案&quot;</summary>
      
    
    
    
    
    <category term="充电桩" scheme="https://daoxuan.cc/tags/%E5%85%85%E7%94%B5%E6%A1%A9/"/>
    
  </entry>
  
  <entry>
    <title>Python 包管理工具UV命令速记</title>
    <link href="https://daoxuan.cc/posts/39530/"/>
    <id>https://daoxuan.cc/posts/39530/</id>
    <published>2025-07-19T05:55:11.000Z</published>
    <updated>2025-07-19T05:58:49.869Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="Python-包管理工具UV命令速记"><a href="#Python-包管理工具UV命令速记" class="headerlink" title="Python 包管理工具UV命令速记"></a>Python 包管理工具UV命令速记</h1><blockquote><p>官方文档地址：<a href="https://docs.astral.sh/uv/">https://docs.astral.sh/uv/</a></p></blockquote><h2 id="安装UV"><a href="#安装UV" class="headerlink" title="安装UV"></a>安装UV</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># On macOS and Linux.</span></span><br><span class="line">curl -LsSf https://astral.sh/uv/install.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># On Windows.</span></span><br><span class="line">powershell -ExecutionPolicy ByPass -c <span class="string">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># With pip.</span></span><br><span class="line">pip install uv</span><br></pre></td></tr></table></figure><ul><li><code>pyproject.toml</code>：定义项目的主要依赖，包括项目名称、版本、描述、支持的 <code>Python</code> 版本等信息</li><li><code>uv.lock</code>：记录项目的所有依赖，包括依赖的依赖，且跨平台，确保在不同环境下安装的一致性。这个文件由 <code>uv</code> 自动管理，不要手动编辑</li></ul><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><ul><li>安装最新版python</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv python install</span><br></pre></td></tr></table></figure><ul><li>安装特定版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv python install 3.12</span><br></pre></td></tr></table></figure><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv venv</span><br></pre></td></tr></table></figure><p>可以指定python版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv venv --python 3.11</span><br></pre></td></tr></table></figure><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><ol><li>add</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uv add requests</span><br><span class="line"># ✅ 安装包到环境</span><br><span class="line"># ✅ 添加到 pyproject.toml</span><br><span class="line"># ✅ 更新 uv.lock</span><br><span class="line"># ✅ 其他人 uv sync 时会安装这个包</span><br></pre></td></tr></table></figure><ol><li>兼容pip</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uv pip install requests</span><br><span class="line"><span class="comment"># ✅ 安装包到环境</span></span><br><span class="line"><span class="comment"># ❌ 不修改 pyproject.toml</span></span><br><span class="line"><span class="comment"># ❌ 不更新 uv.lock</span></span><br><span class="line"><span class="comment"># ❌ 其他人 uv sync 时不会安装这个包</span></span><br></pre></td></tr></table></figure><blockquote><p>不推荐第二种</p></blockquote><h2 id="删除依赖"><a href="#删除依赖" class="headerlink" title="删除依赖"></a>删除依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv remove requests # 删除项目依赖</span><br></pre></td></tr></table></figure><p>同理不推荐</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv pip uninstall requests</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uv run main.py</span><br><span class="line"># uv run 会自动：</span><br><span class="line"># - 检查是否有虚拟环境，没有就创建</span><br><span class="line"># - 根据 pyproject.toml/uv.lock 安装依赖</span><br><span class="line"># - 在正确环境中运行脚本</span><br></pre></td></tr></table></figure><h2 id="项目迁移"><a href="#项目迁移" class="headerlink" title="项目迁移"></a>项目迁移</h2><h3 id="本地项目（待迁移）"><a href="#本地项目（待迁移）" class="headerlink" title="本地项目（待迁移）"></a>本地项目（待迁移）</h3><ul><li>如果确保依赖都是使用add安装的，更新uv.lock</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uv lock -U</span><br><span class="line">或者</span><br><span class="line">uv lock -upgrate</span><br></pre></td></tr></table></figure><ul><li>如果不确定uv.lock中依赖是全的，根据整理出requirements.txt</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv run pipreqs .</span><br></pre></td></tr></table></figure><h3 id="迁移项目"><a href="#迁移项目" class="headerlink" title="迁移项目"></a>迁移项目</h3><p>与上面同步</p><ul><li>根据uv.lock同步依赖</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv sync</span><br></pre></td></tr></table></figure><ul><li>根据requirements.txt同步</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv add -r requirements.txt</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;Python-包管理工具UV命令速记&quot;&gt;&lt;a href=&quot;#Python-包管理工具UV命令速记&quot; class=&quot;headerlink&quot; title=&quot;Python 包管理工具UV命令速记&quot;&gt;&lt;/a&gt;P</summary>
      
    
    
    
    
    <category term="python" scheme="https://daoxuan.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>中国海洋大学新版教务系统爬虫</title>
    <link href="https://daoxuan.cc/posts/48977/"/>
    <id>https://daoxuan.cc/posts/48977/</id>
    <published>2025-06-05T15:27:06.000Z</published>
    <updated>2025-06-05T15:28:37.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="中国海洋大学新版教务系统爬虫"><a href="#中国海洋大学新版教务系统爬虫" class="headerlink" title="中国海洋大学新版教务系统爬虫"></a>中国海洋大学新版教务系统爬虫</h1><blockquote><p>最近选课开始，咱们海大也是上线了花了大钱搞的新版选课系统，我们来简单看一下新版选课系统是否有之前的漏洞</p></blockquote><h2 id="教务系统官网"><a href="#教务系统官网" class="headerlink" title="教务系统官网"></a>教务系统官网</h2><p>首先是教务系统官网：<a href="http://jwgl2024.ouc.edu.cn/">http://jwgl2024.ouc.edu.cn/</a></p><p>点进去就会发现其实没有写完</p><p><img src="https://image.daoxuan.cc/2025/06/0b5368ecd49b3995b2fda281f64c5ce1.png" alt="image-20250605225430166"></p><p>我们抓包查看一下教务系统的登录接口加密：</p><p><img src="https://image.daoxuan.cc/2025/06/14a349db2c3d428a03aa8f621609b5ea.png" alt="image-20250605225632267"></p><p>发现参数中有一个encode显然是加密的密码，于是在js中寻在encode如何生成。</p><p>找到结果如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">&quot;#userAccount&quot;</span>).<span class="title function_">val</span>() == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            $(<span class="string">&quot;#showMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;请输入账号&quot;</span>);</span><br><span class="line">            $(<span class="string">&quot;#userAccount&quot;</span>).<span class="title function_">focus</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">&quot;#userPassword&quot;</span>).<span class="title function_">val</span>() == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            $(<span class="string">&quot;#showMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">            $(<span class="string">&quot;#userPassword&quot;</span>).<span class="title function_">focus</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> strUrl = <span class="string">&quot;/jsxsd/Logon.do?method=logon&amp;flag=sess&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> codeDogSequence = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;false&#x27;</span> === <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> res = <span class="title class_">GetSerialNumber</span>();</span><br><span class="line">                <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">                    codeDogSequence = res.<span class="property">data</span>.<span class="property">result</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">9001</span>) &#123;</span><br><span class="line">                    <span class="comment">// 加密狗设备未认证</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: strUrl,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">            <span class="attr">cache</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">dataStr</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dataStr == <span class="string">&quot;no&quot;</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> scode = dataStr.<span class="title function_">split</span>(<span class="string">&quot;#&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">var</span> sxh = dataStr.<span class="title function_">split</span>(<span class="string">&quot;#&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> code = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userAccount&quot;</span>).<span class="property">value</span> + <span class="string">&quot;%%%&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userPassword&quot;</span>).<span class="property">value</span> + <span class="string">&quot;%%%&quot;</span> + codeDogSequence;</span><br><span class="line">                    <span class="keyword">var</span> encoded = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; code.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (i &lt; <span class="number">55</span>) &#123;</span><br><span class="line">                            encoded = encoded + code.<span class="title function_">substring</span>(i, i + <span class="number">1</span>) + scode.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="built_in">parseInt</span>(sxh.<span class="title function_">substring</span>(i, i + <span class="number">1</span>)));</span><br><span class="line">                            scode = scode.<span class="title function_">substring</span>(<span class="built_in">parseInt</span>(sxh.<span class="title function_">substring</span>(i, i + <span class="number">1</span>)), scode.<span class="property">length</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            encoded = encoded + code.<span class="title function_">substring</span>(i, code.<span class="property">length</span>);</span><br><span class="line">                            i = code.<span class="property">length</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;encoded&quot;</span>).<span class="property">value</span> = encoded;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;LoginToXk&quot;</span> != <span class="string">&quot;logonLdap&quot;</span>) &#123;</span><br><span class="line">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userPassword&quot;</span>).<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;loginForm&quot;</span>).<span class="title function_">submit</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="title function_">qzAlert</span>(<span class="string">&quot;warning&quot;</span>, <span class="string">&quot;计算异常！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现encode由scode、sxh、codeDogSequence构成，scode、sxh通过请求<code>/jsxsd/Logon.do?method=logon&amp;flag=sess</code>获取。</p><p>整体逻辑到这里就很清晰了</p><p>整体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_encoded</span>(<span class="params">account, password, scode, sxh, codeDogSequence=<span class="string">&#x27; &#x27;</span></span>):</span><br><span class="line">    <span class="comment"># 按前端逻辑拼接明文</span></span><br><span class="line">    code = <span class="string">f&quot;<span class="subst">&#123;account&#125;</span>%%%<span class="subst">&#123;password&#125;</span>%%%<span class="subst">&#123;codeDogSequence&#125;</span>&quot;</span></span><br><span class="line">    encoded = <span class="string">&quot;&quot;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(code):</span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">55</span>:</span><br><span class="line">            encoded += code[i]</span><br><span class="line">            n = <span class="built_in">int</span>(sxh[i])</span><br><span class="line">            encoded += scode[:n]</span><br><span class="line">            scode = scode[n:]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            encoded += code[i:]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> encoded</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_scode_and_sxh</span>(<span class="params">base_url, session=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取 scode 和 sxh</span></span><br><span class="line"><span class="string">    :param base_url: 例如 http://jwgl2024.ouc.edu.cn</span></span><br><span class="line"><span class="string">    :param session: requests.Session() 对象（可选，建议带上以保持 cookie）</span></span><br><span class="line"><span class="string">    :return: (scode, sxh)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/Logon.do?method=logon&amp;flag=sess&quot;</span></span><br><span class="line">    sess = session <span class="keyword">or</span> requests.Session()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/plain, */*; q=0.01&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: base_url,</span><br><span class="line">        <span class="string">&quot;Pragma&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">        <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.post(url, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">        data = resp.text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;#&quot;</span> <span class="keyword">in</span> data:</span><br><span class="line">            scode, sxh = data.split(<span class="string">&quot;#&quot;</span>, <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> scode, sxh</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;返回内容格式不正确&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;请求失败，状态码: <span class="subst">&#123;resp.status_code&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_jwgl</span>(<span class="params">base_url, account, encoded, session=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    登录教务系统</span></span><br><span class="line"><span class="string">    :param base_url: 例如 http://jwgl2024.ouc.edu.cn</span></span><br><span class="line"><span class="string">    :param account: 用户账号</span></span><br><span class="line"><span class="string">    :param encoded: 加密后的encoded参数</span></span><br><span class="line"><span class="string">    :param session: requests.Session() 对象（可选）</span></span><br><span class="line"><span class="string">    :return: 登录后的响应内容</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/Logon.do?method=logon&quot;</span></span><br><span class="line">    sess = session <span class="keyword">or</span> requests.Session()</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: base_url,</span><br><span class="line">        <span class="string">&quot;Pragma&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;loginMethod&quot;</span>: <span class="string">&quot;logon&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userlanguage&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userAccount&quot;</span>: account,</span><br><span class="line">        <span class="string">&quot;userPassword&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;encoded&quot;</span>: encoded</span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.post(url, headers=headers, data=data)</span><br><span class="line">    <span class="comment"># 打印cookies</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Cookies after login:&quot;</span>, resp.cookies.get_dict())</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例用法</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    account = <span class="string">&quot;&quot;</span> <span class="comment"># 学号</span></span><br><span class="line">    password = <span class="string">&quot;&quot;</span> <span class="comment"># 密码</span></span><br><span class="line">    base_url = <span class="string">&quot;http://jwgl2024.ouc.edu.cn&quot;</span></span><br><span class="line">    <span class="comment"># 1. 先访问首页获取cookie</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    home_url = base_url + <span class="string">&quot;/&quot;</span></span><br><span class="line">    home_resp = session.get(home_url)</span><br><span class="line">    <span class="comment"># 2. 用同一个session获取scode和sxh</span></span><br><span class="line">    scode, sxh = get_scode_and_sxh(base_url, session=session)</span><br><span class="line">    <span class="comment"># 3. codeDogSequence 逻辑</span></span><br><span class="line">    codeDogSequence = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    <span class="comment"># 如需支持UKey，可在此处补充获取逻辑</span></span><br><span class="line">    encoded = get_encoded(account, password, scode, sxh, codeDogSequence)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Encoded Input:&quot;</span>, encoded)</span><br><span class="line">    <span class="comment"># 4. 用同一个session登录</span></span><br><span class="line">    resp = login_jwgl(base_url, account, encoded, session=session)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Login response status:&quot;</span>, resp.status_code)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当前会话所有cookie:&quot;</span>, session.cookies.get_dict())</span><br><span class="line">    <span class="comment"># print(&quot;Login response text:\n&quot;, resp.text)</span></span><br><span class="line">    <span class="comment"># 保存到html文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;login_result.html&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(resp.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;已保存到 login_result.html&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="选课系统官网"><a href="#选课系统官网" class="headerlink" title="选课系统官网"></a>选课系统官网</h2><p>选课系统是教务系统后面加上相对路径：<code>/jsxsd</code></p><p>本以为和教务系统官网认证方式一样，看了代码发现有些差异：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">function submitForm1() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        var xh = document.getElementById(&quot;userAccount&quot;).value;</span><br><span class="line">        var pwd = document.getElementById(&quot;userPassword&quot;).value;</span><br><span class="line">        if (xh == &quot;&quot;) &#123;</span><br><span class="line">            window.qzAlert(&quot;warning&quot;, &quot;用户名不能为空！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (pwd == &quot;&quot;) &#123;</span><br><span class="line">            window.qzAlert(&quot;warning&quot;, &quot;密码不能为空！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var account = encodeInp(xh);</span><br><span class="line"></span><br><span class="line">        var passwd = encodeInp(pwd);</span><br><span class="line"></span><br><span class="line">        var codeDogSequence = &#x27; &#x27;;</span><br><span class="line">        try &#123;</span><br><span class="line">            var res = GetSerialNumber();</span><br><span class="line">            if (res.code === 0) &#123;</span><br><span class="line">                codeDogSequence = res.data.result;</span><br><span class="line">            &#125; else if (res.code === 9001) &#123;</span><br><span class="line">                // 加密狗设备未认证</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (e) &#123; &#125;</span><br><span class="line"></span><br><span class="line">        codeDogSequence = encodeInp(codeDogSequence);</span><br><span class="line"></span><br><span class="line">        var code = account + &quot;%%%&quot; + passwd + &quot;%%%&quot; + codeDogSequence;</span><br><span class="line">        var scode = &quot;QN929X4k0nBGIFeq6246Af1aef5qmj9jS1Ly0b7S651o628M29i9bA5N047uD2uI37a87k4e1tA8674llKdjv9n3d39afxego4A02M89ZnO38f305nr&quot;;</span><br><span class="line">        var sxh = &quot;2311312233213321312123132323311133323211132123221331323&quot;;</span><br><span class="line">        var encoded = &quot;&quot;;</span><br><span class="line">        for (var i = 0; i &lt; code.length; i++) &#123;</span><br><span class="line">            if (i &lt; 55) &#123;</span><br><span class="line">                encoded = encoded + code.substring(i, i + 1) + scode.substring(0, parseInt(sxh.substring(i, i + 1)));</span><br><span class="line">                scode = scode.substring(parseInt(sxh.substring(i, i + 1)), scode.length);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                encoded = encoded + code.substring(i, code.length);</span><br><span class="line">                i = code.length;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        document.getElementById(&quot;encoded&quot;).value = encoded;</span><br><span class="line">        //    var jzmmid = document.getElementById(&quot;Form1&quot;).jzmmid;</span><br><span class="line">        //    alert(&#x27;=====sss=&#x27;);</span><br><span class="line">        if (&quot;LoginToXk&quot; != &quot;logonLdap&quot;) &#123;</span><br><span class="line">            document.getElementById(&quot;userPassword&quot;).value = &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var lang = document.getElementById(&quot;userlanguage&quot;).value;</span><br><span class="line">        sessionStorage.clear();</span><br><span class="line">        sessionStorage.setItem(&#x27;language&#x27;, lang);</span><br><span class="line">        document.loginForm.submit();</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">        alert(e);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是那几个变量，当时使用了一个名为<code>encodeInp</code>的函数对变量进行第一次对处理，追溯之后发现这个函数其实就是base64加密。也就是说其实只是多了一个base64加密，尝试按照上面的写法发现访问不通，细看之后发现scode、sxh和之前也不一样，之前是使用接口自己请求，这次是在请求整个页面的时候就直接附带了变量的值，因此我们通过正则表达式进行提取</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">encodeInp</span>(<span class="params">input_str</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(input_str, <span class="built_in">str</span>):</span><br><span class="line">        input_bytes = input_str.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        input_bytes = input_str</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(input_bytes).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_encoded</span>(<span class="params">account, password, codeDogSequence, scode, sxh</span>):</span><br><span class="line">    <span class="comment"># 按前端逻辑拼接加密后的账号、密码、加密狗</span></span><br><span class="line">    code = <span class="string">f&quot;<span class="subst">&#123;account&#125;</span>%%%<span class="subst">&#123;password&#125;</span>%%%<span class="subst">&#123;codeDogSequence&#125;</span>&quot;</span></span><br><span class="line">    encoded = <span class="string">&quot;&quot;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(code):</span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">55</span>:</span><br><span class="line">            encoded += code[i]</span><br><span class="line">            n = <span class="built_in">int</span>(sxh[i])</span><br><span class="line">            encoded += scode[:n]</span><br><span class="line">            scode = scode[n:]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            encoded += code[i:]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> encoded</span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_scode_sxh_from_html</span>(<span class="params">html</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    只匹配 var scode = &quot;...&quot;; var sxh = &quot;...&quot;; 这种静态字符串赋值，</span></span><br><span class="line"><span class="string">    跳过 dataStr.split(&quot;#&quot;) 这种动态赋值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只匹配静态字符串赋值的 scode/sxh，排除包含 split(&quot;#&quot;) 的行</span></span><br><span class="line">    scode_match = re.search(<span class="string">r&#x27;var scode\s*=\s*&quot;([^&quot;]+)&quot;;&#x27;</span>, html)</span><br><span class="line">    sxh_match = re.search(<span class="string">r&#x27;var sxh\s*=\s*&quot;([^&quot;]+)&quot;;&#x27;</span>, html)</span><br><span class="line">    <span class="comment"># 检查赋值语句前后是否包含 split(&quot;#&quot;)，如果有则跳过</span></span><br><span class="line">    <span class="keyword">if</span> scode_match <span class="keyword">and</span> sxh_match:</span><br><span class="line">        <span class="comment"># 检查是否为静态字符串赋值（前后20字符内不能有 split(&quot;#&quot;)）</span></span><br><span class="line">        scode_start = scode_match.start()</span><br><span class="line">        sxh_start = sxh_match.start()</span><br><span class="line">        context = html[<span class="built_in">max</span>(<span class="number">0</span>, scode_start-<span class="number">20</span>):scode_match.end()+<span class="number">20</span>] + html[<span class="built_in">max</span>(<span class="number">0</span>, sxh_start-<span class="number">20</span>):sxh_match.end()+<span class="number">20</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;split(&quot;#&quot;)&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> context <span class="keyword">and</span> <span class="string">&quot;.split(&#x27;#&#x27;)&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> context:</span><br><span class="line">            <span class="keyword">return</span> scode_match.group(<span class="number">1</span>), sxh_match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&quot;未找到静态 scode 或 sxh，请检查页面结构&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_xk</span>(<span class="params">base_url, account, password, session=<span class="literal">None</span></span>):</span><br><span class="line">    sess = session <span class="keyword">or</span> requests.Session()</span><br><span class="line">    <span class="comment"># 1. 获取首页HTML并提取scode和sxh</span></span><br><span class="line">    home_url = base_url + <span class="string">&quot;/jsxsd/&quot;</span></span><br><span class="line">    home_resp = sess.get(home_url)</span><br><span class="line">    html = home_resp.text</span><br><span class="line">    scode, sxh = extract_scode_sxh_from_html(html)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;scode:&quot;</span>, scode)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;sxh:&quot;</span>, sxh)</span><br><span class="line">    <span class="comment"># 2. base64加密</span></span><br><span class="line">    account_enc = encodeInp(account)</span><br><span class="line">    password_enc = encodeInp(password)</span><br><span class="line">    codeDogSequence = <span class="string">&#x27; &#x27;</span></span><br><span class="line">    codeDogSequence_enc = encodeInp(codeDogSequence)</span><br><span class="line">    <span class="comment"># 3. 生成encoded</span></span><br><span class="line">    encoded = get_encoded(account_enc, password_enc, codeDogSequence_enc, scode, sxh)</span><br><span class="line">    <span class="comment"># 4. 构造POST请求</span></span><br><span class="line">    url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/jsxsd/xk/LoginToXk&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: base_url,</span><br><span class="line">        <span class="string">&quot;Pragma&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/jsxsd/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;loginMethod&quot;</span>: <span class="string">&quot;LoginToXk&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userlanguage&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userAccount&quot;</span>: account,</span><br><span class="line">        <span class="string">&quot;userPassword&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;encoded&quot;</span>: encoded</span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.post(url, headers=headers, data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Login response status:&quot;</span>, resp.status_code)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;设置的cookie:&#x27;</span>, resp.cookies.get_dict())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当前会话所有cookie:&quot;</span>, sess.cookies.get_dict())</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;login_xk_result.html&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(resp.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;已保存到 login_xk_result.html&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure><p>到这里其实登录已经成功，但是我们想爬取一下自己的选课记录，由此看看有没有之前的漏洞</p><p><img src="https://image.daoxuan.cc/2025/06/cde93066772730776b0c2a542f9948b2.png" alt="image-20250605230947957"></p><p>发现这是一个get请求，那么到底是怎么识别身份的呢，我们看了一下cookie，发现cookie从访问首页到登录成功，再到这一步一自没有变化，说明认证逻辑是：</p><p>首页服务器发送随机cookie，登录成功之后将用户与cookie进行绑定</p><p>那么我便尝试一下使用脚本登录之后在使用cookie访问这个get请求，却收到了</p><blockquote><p>[!WARNING]</p><p>当前账号已在别处登录，请重新登录进入选课！</p></blockquote><p>这样的警告。</p><p>说明一定是某个环节出现了问题，重新看一下整个流程，发现：</p><p><img src="https://image.daoxuan.cc/2025/06/ff65118c9fe0a79c55bb029a77feb447.png" alt="image-20250605231647734"></p><p>选课之前有一个进入选课，这个button也是一个发送请求的按键</p><p><img src="https://image.daoxuan.cc/2025/06/d3ff3622869ed185d99d853d9217da0d.png" alt="image-20250605231801092"></p><p>在进入选课之前需要先访问一个创建选课的接口，然后才可以访问选课的url，有可能是处于某些性能方面的策略才这样设计的，通过下面的cookie字段也可以发现</p><div class="table-container"><table><thead><tr><th>name</th><th>value</th></tr></thead><tbody><tr><td>SERVERID</td><td>Jw4</td></tr></tbody></table></div><p>value从jw3到jw6不断变化，有可能jw1和jw2也有，这也许是多个服务器之间进行负载均衡了。</p><p>至此选课系统的爬虫告一段落。获取选课记录的函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_xsxk_tzsm</span>(<span class="params">base_url, session=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取学生选课通知说明页面</span></span><br><span class="line"><span class="string">    先请求mzlist.do接口，再请求newXsxkzx接口，再请求xsxk_tzsm</span></span><br><span class="line"><span class="string">    :param base_url: 例如 http://jwgl2024.ouc.edu.cn</span></span><br><span class="line"><span class="string">    :param session: requests.Session() 对象</span></span><br><span class="line"><span class="string">    :return: 响应对象</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    sess = session <span class="keyword">or</span> requests.Session()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 首先请求newXsxkzx接口（新增的关键步骤）</span></span><br><span class="line">    new_xsxk_url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/jsxsd/xsxk/newXsxkzx&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;jx0502zbid&#x27;</span>: <span class="string">&#x27;3CB5600F91374DE3895EF44E942970C0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;isallsc&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    new_headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;jwgl2024.ouc.edu.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">f&#x27;http://jwgl2024.ouc.edu.cn/jsxsd/xsxk/xklc_list?isallsc=&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 带参数请求（关键步骤）</span></span><br><span class="line">    new_resp = sess.get(</span><br><span class="line">        new_xsxk_url,</span><br><span class="line">        params=params,</span><br><span class="line">        headers=new_headers,</span><br><span class="line">        verify=<span class="literal">False</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;NewXsxkzx Status: <span class="subst">&#123;new_resp.status_code&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># 保存newXsxkzx响应为HTML</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;new_xsxkzx_result.html&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(new_resp.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;NewXsxkzx Response saved to new_xsxkzx_result.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 然后请求xsxk_tzsm接口（原逻辑）</span></span><br><span class="line">    tzsm_url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/jsxsd/xsxk/xsxk_tzsm&quot;</span></span><br><span class="line">    tzsm_headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>/jsxsd/xsxk/selectBottom?jx0502zbid=3CB5600F91374DE3895EF44E942970C0&amp;sfylxkstr=&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = sess.get(tzsm_url, headers=tzsm_headers, verify=<span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Status Code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;xsxk_tzsm_result.html&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(response.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;已保存到 xsxk_tzsm_result.html&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>总而言之，系统做的还行，我还没有发现什么漏洞，<del>当然我也发现不了太高明的漏洞</del>，但感觉不值传言中花费的300w。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;中国海洋大学新版教务系统爬虫&quot;&gt;&lt;a href=&quot;#中国海洋大学新版教务系统爬虫&quot; class=&quot;headerlink&quot; title=&quot;中国海洋大学新版教务系统爬虫&quot;&gt;&lt;/a&gt;中国海洋大学新版教务系统爬</summary>
      
    
    
    
    
    <category term="爬虫" scheme="https://daoxuan.cc/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>使用wireguard组网</title>
    <link href="https://daoxuan.cc/posts/25443/"/>
    <id>https://daoxuan.cc/posts/25443/</id>
    <published>2025-05-10T13:19:54.000Z</published>
    <updated>2025-05-10T13:47:59.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="使用wireguard组网"><a href="#使用wireguard组网" class="headerlink" title="使用wireguard组网"></a>使用wireguard组网</h1><blockquote><p>首先说一下我的使用的设备，一台阿里云的轻量服务器（debian内核、有公网ip），一台MacBook，一个位于校园网内的debian小主机</p></blockquote><h2 id="校园网"><a href="#校园网" class="headerlink" title="校园网"></a>校园网</h2><p>首先配置校园网内的debian小主机</p><ul><li>下载wireguard</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install wireguard</span><br></pre></td></tr></table></figure><ul><li>在/etc/wireguard生成公钥私钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成私钥</span></span><br><span class="line">$ wg genkey &gt; privatekey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成公钥</span></span><br><span class="line">$ wg pubkey &lt; privatekey &gt; publickey</span><br></pre></td></tr></table></figure><ul><li>编辑配置文件</li></ul><p>配置文件可以放在任何路径下，但必须通过绝对路径引用。默认路径是 <code>/etc/wireguard/wg0.conf</code></p><p>配置文件的命名形式必须为 <script type="math/tex">{WireGuard 接口的名称}.conf`。通常情况下 WireGuard 接口名称以 `wg` 为前缀，并从 `0` 开始编号，但你也可以使用其他名称，只要符合正则表达式 `^[a-zA-Z0-9_=+.-]{1,15}</script> 就行。</p><p>配置文件内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Interface]</span></span><br><span class="line"><span class="attr">PrivateKey</span> = 本机私钥</span><br><span class="line"><span class="attr">Address</span> = <span class="number">10.6</span>.<span class="number">0.6</span>/<span class="number">24</span></span><br><span class="line"><span class="attr">DNS</span> = <span class="number">1.1</span>.<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Peer]</span></span><br><span class="line"><span class="attr">PublicKey</span> = 阿里云服务器公钥</span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="number">10.6</span>.<span class="number">0.2</span>/<span class="number">32</span></span><br><span class="line"><span class="attr">Endpoint</span> = <span class="number">1</span>panel.daoxuan.cc:<span class="number">51820</span>  <span class="comment"># 阿里云服务器域名+端口</span></span><br><span class="line"><span class="attr">PersistentKeepalive</span> = <span class="number">25</span></span><br></pre></td></tr></table></figure><h2 id="阿里云服务器"><a href="#阿里云服务器" class="headerlink" title="阿里云服务器"></a>阿里云服务器</h2><p>下载流程和密钥生成流程同上</p><p>开启IP地址转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">$ echo &quot;net.ipv4.conf.all.proxy_arp = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">$ sysctl -p /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>下面是配置文件内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Interface]</span></span><br><span class="line"><span class="attr">Address</span> = <span class="number">10.6</span>.<span class="number">0.2</span>/<span class="number">24</span></span><br><span class="line"><span class="attr">ListenPort</span> = <span class="number">51820</span></span><br><span class="line"><span class="attr">PrivateKey</span> = </span><br><span class="line"><span class="attr">PostUp</span> = iptables -A FORWARD -i %i -j ACCEPT<span class="comment">; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span></span><br><span class="line"><span class="attr">PostDown</span> = iptables -D FORWARD -i %i -j ACCEPT<span class="comment">; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span></span><br><span class="line"><span class="section">[Peer]</span></span><br><span class="line"><span class="attr">PublicKey</span> = </span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="number">10.6</span>.<span class="number">0.6</span>/<span class="number">32</span></span><br></pre></td></tr></table></figure><p>这里的eth0需要根据自己的默认网络出口网卡进行配置</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>配置结束之后通过：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wg-quick up wg0</span><br></pre></td></tr></table></figure><p>启动！！</p><p>启动之后可以通过<code>wg show</code>查看连接状态</p><p>可以通过ping 内网地址查看是否互通</p><blockquote><p>至此实现校园网内网主机与阿里云轻量服务器组网</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;使用wireguard组网&quot;&gt;&lt;a href=&quot;#使用wireguard组网&quot; class=&quot;headerlink&quot; title=&quot;使用wireguard组网&quot;&gt;&lt;/a&gt;使用wireguard组网&lt;/h</summary>
      
    
    
    
    
    <category term="wireguard" scheme="https://daoxuan.cc/tags/wireguard/"/>
    
  </entry>
  
  <entry>
    <title>维吉尼亚密码破解python</title>
    <link href="https://daoxuan.cc/posts/48193/"/>
    <id>https://daoxuan.cc/posts/48193/</id>
    <published>2025-04-16T09:33:50.000Z</published>
    <updated>2025-04-16T09:38:09.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="维吉尼亚密码破解python"><a href="#维吉尼亚密码破解python" class="headerlink" title="维吉尼亚密码破解python"></a>维吉尼亚密码破解python</h1><blockquote><p>具体原理可以自行查看</p></blockquote><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-获取key的可能长度（使用重合指数攻击法）"><a href="#1-获取key的可能长度（使用重合指数攻击法）" class="headerlink" title="1. 获取key的可能长度（使用重合指数攻击法）"></a>1. 获取key的可能长度（使用重合指数攻击法）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">count_IC</span>(<span class="params">cipher</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算重合指数&quot;&quot;&quot;</span></span><br><span class="line">    freq = Counter(cipher)</span><br><span class="line">    L = <span class="built_in">len</span>(cipher)</span><br><span class="line">    IC = <span class="built_in">sum</span>(f * (f - <span class="number">1</span>) <span class="keyword">for</span> f <span class="keyword">in</span> freq.values()) / (L * (L - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> IC</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_key_length</span>(<span class="params">cipher, max_len=<span class="number">50</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;猜测密钥长度&quot;&quot;&quot;</span></span><br><span class="line">    best_lengths = []</span><br><span class="line">    <span class="keyword">for</span> key_len <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_len + <span class="number">1</span>):</span><br><span class="line">        groups = [<span class="string">&#x27;&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(key_len)]</span><br><span class="line">        <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(cipher):</span><br><span class="line">            groups[i % key_len] += char</span><br><span class="line">        avg_IC = np.mean([count_IC(group) <span class="keyword">for</span> group <span class="keyword">in</span> groups])</span><br><span class="line">        diff = <span class="built_in">abs</span>(avg_IC - <span class="number">0.0667</span>)  <span class="comment"># 英语文本的IC约为0.0667</span></span><br><span class="line">        best_lengths.append((diff, key_len))</span><br><span class="line">    best_lengths.sort()</span><br><span class="line">    <span class="keyword">return</span> [length <span class="keyword">for</span> _, length <span class="keyword">in</span> best_lengths]</span><br></pre></td></tr></table></figure><h3 id="2-猜测key的可能值（字母频率分析）"><a href="#2-猜测key的可能值（字母频率分析）" class="headerlink" title="2. 猜测key的可能值（字母频率分析）"></a>2. 猜测key的可能值（字母频率分析）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">frequency_analysis</span>(<span class="params">group, num_candidates=<span class="number">3</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;频率分析，找到最匹配的位移&quot;&quot;&quot;</span></span><br><span class="line">    R_list = []</span><br><span class="line">    group_len = <span class="built_in">len</span>(group)  <span class="comment"># 分组长度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> shift <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):  <span class="comment"># 遍历所有可能的位移（0 到 25）</span></span><br><span class="line">        <span class="comment"># 统计位移后字母的频率</span></span><br><span class="line">        shifted_freq = Counter(</span><br><span class="line">            <span class="built_in">chr</span>(((<span class="built_in">ord</span>(char) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) - shift) % <span class="number">26</span>) + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)) <span class="keyword">for</span> char <span class="keyword">in</span> group</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># 计算内积 R = ∑(P_i * Q_i)</span></span><br><span class="line">        R = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> ENGLISH_FREQ:</span><br><span class="line">            <span class="comment"># P_i: 英语字母频率</span></span><br><span class="line">            <span class="comment"># Q_i: 分组中字母频率</span></span><br><span class="line">            Q_i = shifted_freq.get(char, <span class="number">0</span>) / group_len</span><br><span class="line">            R += ENGLISH_FREQ[char] * Q_i</span><br><span class="line">        R_list.append((shift, R))</span><br><span class="line">    R_list.sort(key=<span class="keyword">lambda</span> x: -x[<span class="number">1</span>])  <span class="comment"># 按R值从大到小排序</span></span><br><span class="line">    <span class="comment"># 返回前num_candidates个位移及其R值</span></span><br><span class="line">    <span class="keyword">return</span> [(<span class="built_in">chr</span>(shift + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)), R) <span class="keyword">for</span> shift, R <span class="keyword">in</span> R_list[:num_candidates]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_key</span>(<span class="params">cipher, key_len</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;猜测密钥，按照优先级列出所有可能的密钥&quot;&quot;&quot;</span></span><br><span class="line">    groups = [cipher[i::key_len] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(key_len)]  <span class="comment"># 按密钥长度分组</span></span><br><span class="line">    candidates = []</span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">        <span class="comment"># 对每个分组进行频率分析，获取第一个可能的位移及其R值</span></span><br><span class="line">        shifts = frequency_analysis(group, num_candidates=<span class="number">1</span>)</span><br><span class="line">        candidates.append(shifts)</span><br><span class="line">    <span class="comment"># 生成所有可能的密钥组合，并计算其总R值</span></span><br><span class="line">    keys_with_score = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> product(*candidates):</span><br><span class="line">        key_str = <span class="string">&#x27;&#x27;</span>.join([k[<span class="number">0</span>] <span class="keyword">for</span> k <span class="keyword">in</span> key])  <span class="comment"># 密钥字符串</span></span><br><span class="line">        total_R = <span class="built_in">sum</span>(k[<span class="number">1</span>] <span class="keyword">for</span> k <span class="keyword">in</span> key)  <span class="comment"># 密钥的总R值</span></span><br><span class="line">        keys_with_score.append((key_str, total_R))</span><br><span class="line">    <span class="comment"># 按总R值从大到小排序</span></span><br><span class="line">    keys_with_score.sort(key=<span class="keyword">lambda</span> x: -x[<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 返回按优先级排序的密钥列表</span></span><br><span class="line">    <span class="keyword">return</span> [key <span class="keyword">for</span> key, _ <span class="keyword">in</span> keys_with_score]</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"></span><br><span class="line">KEYLENGTHNUM = <span class="number">5</span>  <span class="comment"># 密钥长度候选数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 英语字母频率表</span></span><br><span class="line">ENGLISH_FREQ = &#123;</span><br><span class="line">    <span class="string">&#x27;A&#x27;</span>: <span class="number">0.08167</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">0.01492</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">0.02782</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">0.04253</span>,</span><br><span class="line">    <span class="string">&#x27;E&#x27;</span>: <span class="number">0.12702</span>, <span class="string">&#x27;F&#x27;</span>: <span class="number">0.02228</span>, <span class="string">&#x27;G&#x27;</span>: <span class="number">0.02015</span>, <span class="string">&#x27;H&#x27;</span>: <span class="number">0.06094</span>,</span><br><span class="line">    <span class="string">&#x27;I&#x27;</span>: <span class="number">0.06966</span>, <span class="string">&#x27;J&#x27;</span>: <span class="number">0.00153</span>, <span class="string">&#x27;K&#x27;</span>: <span class="number">0.00772</span>, <span class="string">&#x27;L&#x27;</span>: <span class="number">0.04025</span>,</span><br><span class="line">    <span class="string">&#x27;M&#x27;</span>: <span class="number">0.02406</span>, <span class="string">&#x27;N&#x27;</span>: <span class="number">0.06749</span>, <span class="string">&#x27;O&#x27;</span>: <span class="number">0.07507</span>, <span class="string">&#x27;P&#x27;</span>: <span class="number">0.01929</span>,</span><br><span class="line">    <span class="string">&#x27;Q&#x27;</span>: <span class="number">0.00095</span>, <span class="string">&#x27;R&#x27;</span>: <span class="number">0.05987</span>, <span class="string">&#x27;S&#x27;</span>: <span class="number">0.06327</span>, <span class="string">&#x27;T&#x27;</span>: <span class="number">0.09056</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>: <span class="number">0.02758</span>, <span class="string">&#x27;V&#x27;</span>: <span class="number">0.00978</span>, <span class="string">&#x27;W&#x27;</span>: <span class="number">0.0236</span>, <span class="string">&#x27;X&#x27;</span>: <span class="number">0.0015</span>,</span><br><span class="line">    <span class="string">&#x27;Y&#x27;</span>: <span class="number">0.01974</span>, <span class="string">&#x27;Z&#x27;</span>: <span class="number">0.00074</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">alpha</span>(<span class="params">cipher</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;提取密文中的字母并统一转换为大写&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([char.upper() <span class="keyword">for</span> char <span class="keyword">in</span> cipher <span class="keyword">if</span> char.isalpha()])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_IC</span>(<span class="params">cipher</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算重合指数&quot;&quot;&quot;</span></span><br><span class="line">    freq = Counter(cipher)</span><br><span class="line">    L = <span class="built_in">len</span>(cipher)</span><br><span class="line">    IC = <span class="built_in">sum</span>(f * (f - <span class="number">1</span>) <span class="keyword">for</span> f <span class="keyword">in</span> freq.values()) / (L * (L - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> IC</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_key_length</span>(<span class="params">cipher, max_len=<span class="number">50</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;猜测密钥长度&quot;&quot;&quot;</span></span><br><span class="line">    best_lengths = []</span><br><span class="line">    <span class="keyword">for</span> key_len <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_len + <span class="number">1</span>):</span><br><span class="line">        groups = [<span class="string">&#x27;&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(key_len)]</span><br><span class="line">        <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(cipher):</span><br><span class="line">            groups[i % key_len] += char</span><br><span class="line">        avg_IC = np.mean([count_IC(group) <span class="keyword">for</span> group <span class="keyword">in</span> groups])</span><br><span class="line">        diff = <span class="built_in">abs</span>(avg_IC - <span class="number">0.0667</span>)  <span class="comment"># 英语文本的IC约为0.0667</span></span><br><span class="line">        best_lengths.append((diff, key_len))</span><br><span class="line">    best_lengths.sort()</span><br><span class="line">    <span class="keyword">return</span> [length <span class="keyword">for</span> _, length <span class="keyword">in</span> best_lengths]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">frequency_analysis</span>(<span class="params">group, num_candidates=<span class="number">3</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;频率分析，找到最匹配的位移&quot;&quot;&quot;</span></span><br><span class="line">    R_list = []</span><br><span class="line">    group_len = <span class="built_in">len</span>(group)  <span class="comment"># 分组长度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> shift <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):  <span class="comment"># 遍历所有可能的位移（0 到 25）</span></span><br><span class="line">        <span class="comment"># 统计位移后字母的频率</span></span><br><span class="line">        shifted_freq = Counter(</span><br><span class="line">            <span class="built_in">chr</span>(((<span class="built_in">ord</span>(char) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) - shift) % <span class="number">26</span>) + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)) <span class="keyword">for</span> char <span class="keyword">in</span> group</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># 计算内积 R = ∑(P_i * Q_i)</span></span><br><span class="line">        R = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> ENGLISH_FREQ:</span><br><span class="line">            <span class="comment"># P_i: 英语字母频率</span></span><br><span class="line">            <span class="comment"># Q_i: 分组中字母频率</span></span><br><span class="line">            Q_i = shifted_freq.get(char, <span class="number">0</span>) / group_len</span><br><span class="line">            R += ENGLISH_FREQ[char] * Q_i</span><br><span class="line">        R_list.append((shift, R))</span><br><span class="line">    R_list.sort(key=<span class="keyword">lambda</span> x: -x[<span class="number">1</span>])  <span class="comment"># 按R值从大到小排序</span></span><br><span class="line">    <span class="comment"># 返回前num_candidates个位移及其R值</span></span><br><span class="line">    <span class="keyword">return</span> [(<span class="built_in">chr</span>(shift + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)), R) <span class="keyword">for</span> shift, R <span class="keyword">in</span> R_list[:num_candidates]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guess_key</span>(<span class="params">cipher, key_len</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;猜测密钥，按照优先级列出所有可能的密钥&quot;&quot;&quot;</span></span><br><span class="line">    groups = [cipher[i::key_len] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(key_len)]  <span class="comment"># 按密钥长度分组</span></span><br><span class="line">    candidates = []</span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">        <span class="comment"># 对每个分组进行频率分析，获取第一个可能的位移及其R值</span></span><br><span class="line">        shifts = frequency_analysis(group, num_candidates=<span class="number">1</span>)</span><br><span class="line">        candidates.append(shifts)</span><br><span class="line">    <span class="comment"># 生成所有可能的密钥组合，并计算其总R值</span></span><br><span class="line">    keys_with_score = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> product(*candidates):</span><br><span class="line">        key_str = <span class="string">&#x27;&#x27;</span>.join([k[<span class="number">0</span>] <span class="keyword">for</span> k <span class="keyword">in</span> key])  <span class="comment"># 密钥字符串</span></span><br><span class="line">        total_R = <span class="built_in">sum</span>(k[<span class="number">1</span>] <span class="keyword">for</span> k <span class="keyword">in</span> key)  <span class="comment"># 密钥的总R值</span></span><br><span class="line">        keys_with_score.append((key_str, total_R))</span><br><span class="line">    <span class="comment"># 按总R值从大到小排序</span></span><br><span class="line">    keys_with_score.sort(key=<span class="keyword">lambda</span> x: -x[<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 返回按优先级排序的密钥列表</span></span><br><span class="line">    <span class="keyword">return</span> [key <span class="keyword">for</span> key, _ <span class="keyword">in</span> keys_with_score]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vigenere_decrypt</span>(<span class="params">cipher, key</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;维吉尼亚解密&quot;&quot;&quot;</span></span><br><span class="line">    decrypted = []</span><br><span class="line">    key_length = <span class="built_in">len</span>(key)</span><br><span class="line">    key_as_int = [<span class="built_in">ord</span>(k) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) <span class="keyword">for</span> k <span class="keyword">in</span> key]</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> cipher:</span><br><span class="line">        <span class="keyword">if</span> char.isalpha():</span><br><span class="line">            offset = key_as_int[index % key_length]</span><br><span class="line">            <span class="keyword">if</span> char.isupper():</span><br><span class="line">                value = (<span class="built_in">ord</span>(char) - offset - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)) % <span class="number">26</span></span><br><span class="line">                decrypted.append(<span class="built_in">chr</span>(value + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                value = (<span class="built_in">ord</span>(char) - offset - <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)) % <span class="number">26</span></span><br><span class="line">                decrypted.append(<span class="built_in">chr</span>(value + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            decrypted.append(char)  <span class="comment"># 保留标点和空格</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(decrypted)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 密文</span></span><br><span class="line">    cipher = <span class="string">&quot;&quot;&quot;Zs vxb fxcnz evm enare usca tvdcs wgkduhtytero xjwmato xpjb jqjl krth bhzl tk hcbb nvb aolmb. Xhase</span></span><br><span class="line"><span class="string">jsb bw zcah plm vigmpiwp ib bum gdaet, owe qbewpa jtbvc ijzmbb yqde smbq urilijk iwl nzc ob</span></span><br><span class="line"><span class="string">ivmceqlg sszcp. Nlb lkzm cw n pmuoi iwl lws hwzm j pbuc. Azh zroubcoqwvnaf bm a ymbh ial woq</span></span><br><span class="line"><span class="string">liem n kmmiyvrbl. Ibd pvccp gw y pepm xn emb bnmkt ial woq liem n aahkst. Jlq zclekqxv gw rha</span></span><br><span class="line"><span class="string">lcktrar ob ilrnvkcs wrl hwh pyva e ajvpbsanc. &quot;&quot;&quot;</span></span><br><span class="line">    alpha_cipher = alpha(cipher)</span><br><span class="line">    key_len = guess_key_length(alpha_cipher)[:KEYLENGTHNUM]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;候选密钥长度:&quot;</span>, key_len)</span><br><span class="line">    <span class="keyword">for</span> length <span class="keyword">in</span> key_len:</span><br><span class="line">        keys = guess_key(alpha_cipher, length)</span><br><span class="line">        <span class="comment"># keys = guess_key(alpha_cipher, length)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n密钥长度 <span class="subst">&#123;length&#125;</span> 的可能密钥（按优先级排序）:&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">            decrypted_text = vigenere_decrypt(cipher, key)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;密钥: <span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;解密结果: <span class="subst">&#123;decrypted_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原理参考文章：</p><p>重合指数攻击：</p><p><a href="https://blog.csdn.net/forest_LL/article/details/135300302">https://blog.csdn.net/forest_LL/article/details/135300302</a></p><p>字母频率分析：</p><p><a href="https://www.cnblogs.com/ISGuXing/p/9665904.html">https://www.cnblogs.com/ISGuXing/p/9665904.html</a></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;维吉尼亚密码破解python&quot;&gt;&lt;a href=&quot;#维吉尼亚密码破解python&quot; class=&quot;headerlink&quot; title=&quot;维吉尼亚密码破解python&quot;&gt;&lt;/a&gt;维吉尼亚密码破解pytho</summary>
      
    
    
    
    
    <category term="网络安全" scheme="https://daoxuan.cc/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>使用云服务器部署hexo博客</title>
    <link href="https://daoxuan.cc/posts/12233/"/>
    <id>https://daoxuan.cc/posts/12233/</id>
    <published>2025-03-26T11:35:01.000Z</published>
    <updated>2025-03-26T11:44:32.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="使用云服务器部署hexo博客"><a href="#使用云服务器部署hexo博客" class="headerlink" title="使用云服务器部署hexo博客"></a>使用云服务器部署hexo博客</h1><p>我最开始的方案是用hexo的hexo server来跑我的博客，蛮方便的，只需要反向代理一下默认的4000端口即可。</p><p>最近感觉速度不是很客观，而且如果想要一直跑这个hexo s本地预览的话，无论是使用screen来跑还是使用docker来跑都很麻烦，所以还是采用了hexo d改为静态网站部署</p><p>下面是安装步骤记录：</p><h2 id="1-安装-hexo-deployer-git-插件"><a href="#1-安装-hexo-deployer-git-插件" class="headerlink" title="1. 安装 hexo-deployer-git 插件"></a>1. 安装 <code>hexo-deployer-git</code> 插件</h2><p>Hexo 默认不包含 Git 部署功能，需要手动安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装后，Hexo 就能识别 <code>git</code> 部署方式。</p><h2 id="2-创建存放网站的目录"><a href="#2-创建存放网站的目录" class="headerlink" title="2. 创建存放网站的目录"></a>2. 创建存放网站的目录</h2><p>由于我使用的是1panel的OpenResty代理网站，所以创建静态网站之后自动创建了一个网络地址，对于我来讲就是</p><p>/opt/1panel/apps/openresty/openresty/www/sites/daoxuan.cc/index</p><h2 id="3-创建Git裸仓库"><a href="#3-创建Git裸仓库" class="headerlink" title="3. 创建Git裸仓库"></a>3. 创建Git裸仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /var/repo/hexo.git</span><br><span class="line"><span class="built_in">cd</span> /var/repo/hexo.git</span><br><span class="line"><span class="built_in">sudo</span> git init --bare</span><br></pre></td></tr></table></figure><h2 id="4-创建Git钩子"><a href="#4-创建Git钩子" class="headerlink" title="4. 创建Git钩子"></a>4. 创建Git钩子</h2><p>在服务器上创建post-receive钩子来自动部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑post-receive文件</span></span><br><span class="line"><span class="built_in">sudo</span> vim /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/opt/1panel/apps/openresty/openresty/www/sites/daoxuan.cc/index --git-dir=/var/repo/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>—work-tree后面的地址就是你打算部署网站的地址，OpenResty会去这里找网站的index.html</p><p>然后设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h2 id="5-本地Hexo配置"><a href="#5-本地Hexo配置" class="headerlink" title="5. 本地Hexo配置"></a>5. 本地Hexo配置</h2><p>在Hexo博客目录中，修改<code>_config.yml</code>文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">username@your-server-ip:/var/repo/hexo.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>分支master还是main无所谓</p><h2 id="6-将公钥上传到云服务器"><a href="#6-将公钥上传到云服务器" class="headerlink" title="6. 将公钥上传到云服务器"></a>6. 将公钥上传到云服务器</h2><p>生成公钥私钥这里就省略了</p><p>使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@your-server-ip</span><br></pre></td></tr></table></figure><p>将本地公钥添加到服务器的<code>~/.ssh/authorized_keys</code></p><h2 id="7-部署"><a href="#7-部署" class="headerlink" title="7. 部署"></a>7. 部署</h2><p>在你使用hexo三件套（hexo clean、hexo g、hexo d）之后就可以查看你的博客了</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;使用云服务器部署hexo博客&quot;&gt;&lt;a href=&quot;#使用云服务器部署hexo博客&quot; class=&quot;headerlink&quot; title=&quot;使用云服务器部署hexo博客&quot;&gt;&lt;/a&gt;使用云服务器部署hexo博</summary>
      
    
    
    
    <category term="网站" scheme="https://daoxuan.cc/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="hexo" scheme="https://daoxuan.cc/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>debian安装mysqlclient报错subprocess-exited-with-error</title>
    <link href="https://daoxuan.cc/posts/8583/"/>
    <id>https://daoxuan.cc/posts/8583/</id>
    <published>2025-03-12T14:03:31.000Z</published>
    <updated>2025-03-24T06:48:29.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="debian安装mysqlclient报错subprocess-exited-with-error"><a href="#debian安装mysqlclient报错subprocess-exited-with-error" class="headerlink" title="debian安装mysqlclient报错subprocess-exited-with-error"></a>debian安装mysqlclient报错subprocess-exited-with-error</h1><p>报错细节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">  Downloading mysqlclient-2.2.7.tar.gz (91 kB)</span><br><span class="line">  Installing build dependencies ... <span class="keyword">done</span></span><br><span class="line">  Getting requirements to build wheel ... error</span><br><span class="line">  error: subprocess-exited-with-error</span><br><span class="line">  × Getting requirements to build wheel did not run successfully.</span><br><span class="line">  │ <span class="built_in">exit</span> code: 1</span><br><span class="line">  ╰─&gt; [29 lines of output]</span><br><span class="line">      Trying pkg-config --exists mysqlclient</span><br><span class="line">      Command <span class="string">&#x27;pkg-config --exists mysqlclient&#x27;</span> returned non-zero <span class="built_in">exit</span> status 1.</span><br><span class="line">      Trying pkg-config --exists mariadb</span><br><span class="line">      Command <span class="string">&#x27;pkg-config --exists mariadb&#x27;</span> returned non-zero <span class="built_in">exit</span> status 1.</span><br><span class="line">      Trying pkg-config --exists libmariadb</span><br><span class="line">      Command <span class="string">&#x27;pkg-config --exists libmariadb&#x27;</span> returned non-zero <span class="built_in">exit</span> status 1.</span><br><span class="line">      Trying pkg-config --exists perconaserverclient</span><br><span class="line">      Command <span class="string">&#x27;pkg-config --exists perconaserverclient&#x27;</span> returned non-zero <span class="built_in">exit</span> status 1.</span><br><span class="line">      Traceback (most recent call last):</span><br><span class="line">        File <span class="string">&quot;/home/dx2331lxz/data/python/Editor/.venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;</span>, line 389, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">          main()</span><br><span class="line">        File <span class="string">&quot;/home/dx2331lxz/data/python/Editor/.venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;</span>, line 373, <span class="keyword">in</span> main</span><br><span class="line">          json_out[<span class="string">&quot;return_val&quot;</span>] = hook(**hook_input[<span class="string">&quot;kwargs&quot;</span>])</span><br><span class="line">                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">        File <span class="string">&quot;/home/dx2331lxz/data/python/Editor/.venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py&quot;</span>, line 143, <span class="keyword">in</span> get_requires_for_build_wheel</span><br><span class="line">          <span class="built_in">return</span> hook(config_settings)</span><br><span class="line">                 ^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">        File <span class="string">&quot;/tmp/pip-build-env-_i08rk3h/overlay/lib/python3.11/site-packages/setuptools/build_meta.py&quot;</span>, line 334, <span class="keyword">in</span> get_requires_for_build_wheel</span><br><span class="line">          <span class="built_in">return</span> self._get_build_requires(config_settings, requirements=[])</span><br><span class="line">                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">        File <span class="string">&quot;/tmp/pip-build-env-_i08rk3h/overlay/lib/python3.11/site-packages/setuptools/build_meta.py&quot;</span>, line 304, <span class="keyword">in</span> _get_build_requires</span><br><span class="line">          self.run_setup()</span><br><span class="line">        File <span class="string">&quot;/tmp/pip-build-env-_i08rk3h/overlay/lib/python3.11/site-packages/setuptools/build_meta.py&quot;</span>, line 320, <span class="keyword">in</span> run_setup</span><br><span class="line">          <span class="built_in">exec</span>(code, locals())</span><br><span class="line">        File <span class="string">&quot;&lt;string&gt;&quot;</span>, line 156, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">        File <span class="string">&quot;&lt;string&gt;&quot;</span>, line 49, <span class="keyword">in</span> get_config_posix</span><br><span class="line">        File <span class="string">&quot;&lt;string&gt;&quot;</span>, line 28, <span class="keyword">in</span> find_package_name</span><br><span class="line">      Exception: Can not find valid pkg-config name.</span><br><span class="line">      Specify MYSQLCLIENT_CFLAGS and MYSQLCLIENT_LDFLAGS <span class="built_in">env</span> vars manually</span><br><span class="line">      [end of output]</span><br><span class="line">  </span><br><span class="line">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: subprocess-exited-with-error</span><br><span class="line"></span><br><span class="line">× Getting requirements to build wheel did not run successfully.</span><br><span class="line">│ <span class="built_in">exit</span> code: 1</span><br><span class="line">╰─&gt; See above <span class="keyword">for</span> output.</span><br></pre></td></tr></table></figure><p>快速解决方案：</p><h3 id="安装-MySQL-客户端库"><a href="#安装-MySQL-客户端库" class="headerlink" title="安装 MySQL 客户端库"></a><strong>安装 MySQL 客户端库</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install libmariadb-dev</span><br></pre></td></tr></table></figure><h3 id="安装-pkg-config"><a href="#安装-pkg-config" class="headerlink" title="安装 pkg-config"></a><strong>安装 <code>pkg-config</code></strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install pkg-config</span><br></pre></td></tr></table></figure><h3 id="安装-gcc-和构建工具"><a href="#安装-gcc-和构建工具" class="headerlink" title="安装 gcc 和构建工具"></a><strong>安装 <code>gcc</code> 和构建工具</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install build-essential</span><br></pre></td></tr></table></figure><h3 id="安装-Python-开发头文件"><a href="#安装-Python-开发头文件" class="headerlink" title="安装 Python 开发头文件"></a><strong>安装 Python 开发头文件</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-dev</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;debian安装mysqlclient报错subprocess-exited-with-error&quot;&gt;&lt;a href=&quot;#debian安装mysqlclient报错subprocess-exited-w</summary>
      
    
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>软件性能工程--多角度讨论性能优化</title>
    <link href="https://daoxuan.cc/posts/13888/"/>
    <id>https://daoxuan.cc/posts/13888/</id>
    <published>2025-03-11T14:21:16.000Z</published>
    <updated>2025-03-24T06:46:17.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="软件性能工程—多角度讨论性能优化"><a href="#软件性能工程—多角度讨论性能优化" class="headerlink" title="软件性能工程—多角度讨论性能优化"></a>软件性能工程—多角度讨论性能优化</h1><blockquote><p>[!NOTE]</p><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2></blockquote><p>Ben尝试优化以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The elements of A and B are known to be nonnegative and not</span></span><br><span class="line"><span class="comment">aliased */</span></span><br><span class="line"><span class="comment">/* k is known only at runtime */</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">A[i] = k * B[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>他优化后的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The elements of A and B are known to be nonnegative and not</span></span><br><span class="line"><span class="comment">aliased */</span></span><br><span class="line"><span class="comment">/* k is known only at runtime */</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>);</span><br><span class="line">A[N - <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> *a = A , *b = B;</span><br><span class="line"><span class="keyword">while</span> (*a &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">*(a++) = k * *(b++) ;</span><br><span class="line">&#125;</span><br><span class="line">*a = k * *b;</span><br></pre></td></tr></table></figure><p>他使用 gcc -O3 模式分别编译两段代码，竟然发现优化后代码比未优化的代码还要慢😭，为什么❓</p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>提到了<code>gcc -o3</code>，我们首先探究一下, <code>gcc</code>的不同级别优化</p><h3 id="1-O0（无优化）"><a href="#1-O0（无优化）" class="headerlink" title="1. -O0（无优化）"></a>1. <strong><code>-O0</code>（无优化）</strong></h3><ul><li><strong>目标</strong>：不进行任何优化，保持代码的原始结构。</li><li>特点：<ul><li>编译速度最快。</li><li>生成的代码与源代码几乎一一对应，适合调试。</li></ul></li><li><strong>适用场景</strong>：开发阶段，尤其是调试代码时。</li><li>具体优化：<ul><li>无优化，保留所有调试信息。</li></ul></li></ul><hr><h3 id="2-O1（基本优化）"><a href="#2-O1（基本优化）" class="headerlink" title="2. -O1（基本优化）"></a>2. <strong><code>-O1</code>（基本优化）</strong></h3><ul><li><strong>目标</strong>：在减少代码大小和执行时间的同时，保持编译速度。</li><li>特点：<ul><li>优化程度较低，编译时间较短。</li><li>生成的代码仍然易于调试。</li></ul></li><li><strong>适用场景</strong>：对性能和编译时间有平衡需求的场景。</li><li>具体优化：<ul><li><strong>常量传播</strong>：将常量值直接替换到表达式中。</li><li><strong>死代码消除</strong>：移除不会被执行的代码。</li><li><strong>简单函数内联</strong>：将小函数直接内联到调用处。</li><li><strong>跳转优化</strong>：优化跳转指令，减少不必要的跳转。</li></ul></li></ul><hr><h3 id="3-O2（中等优化）"><a href="#3-O2（中等优化）" class="headerlink" title="3. -O2（中等优化）"></a>3. <strong><code>-O2</code>（中等优化）</strong></h3><ul><li><strong>目标</strong>：显著提高程序性能，同时保持合理的编译时间。</li><li>特点：<ul><li>优化程度较高，生成的代码性能显著提升。</li><li>编译时间较长，但生成的代码仍然可靠。</li></ul></li><li><strong>适用场景</strong>：生产环境中的大多数应用。</li><li>具体优化：<ul><li>循环优化：<ul><li>循环展开（Loop Unrolling）：将循环体展开，减少循环控制的开销。</li><li>循环不变代码外提（Loop Invariant Code Motion）：将循环中不变的代码移到循环外。</li></ul></li><li><strong>指令调度</strong>：重新排列指令，以充分利用 CPU 的流水线。</li><li><strong>函数克隆</strong>：为不同的调用场景生成特定版本的函数。</li><li><strong>分支预测优化</strong>：优化分支指令，减少分支预测错误。</li><li><strong>全局优化</strong>：跨函数优化，例如跨过程常量传播。</li></ul></li></ul><hr><h3 id="4-O3（最高级别优化）"><a href="#4-O3（最高级别优化）" class="headerlink" title="4. -O3（最高级别优化）"></a>4. <strong><code>-O3</code>（最高级别优化）</strong></h3><ul><li><strong>目标</strong>：最大限度地提高程序性能，即使以增加代码大小为代价。</li><li>特点：<ul><li>优化程度最高，生成的代码性能最优。</li><li>编译时间最长，生成的代码可能较大。</li></ul></li><li><strong>适用场景</strong>：对性能要求极高的场景，如科学计算、游戏引擎、高性能计算等。</li><li>具体优化：<ul><li><strong>循环向量化</strong>：将循环中的操作转换为 SIMD（单指令多数据）指令，利用 CPU 的向量寄存器。</li><li><strong>自动并行化</strong>：尝试将循环中的操作并行化。</li><li><strong>过程间优化（IPA）</strong>：跨函数进行更激进的优化。</li><li><strong>更激进的函数内联</strong>：将更多函数直接内联到调用处。</li><li><strong>内存访问优化</strong>：优化内存访问模式，减少缓存未命中的情况。</li></ul></li></ul><hr><p>因此我们可以针对 -o3对于不同代码的优化效果谈谈</p><h3 id="1-循环展开"><a href="#1-循环展开" class="headerlink" title="1. 循环展开"></a>1. 循环展开</h3><p><strong>对于第一种可能会是：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= N - <span class="number">4</span>; i += <span class="number">4</span>) &#123;</span><br><span class="line">    A[i] = k * B[i];</span><br><span class="line">    A[i + <span class="number">1</span>] = k * B[i + <span class="number">1</span>];</span><br><span class="line">    A[i + <span class="number">2</span>] = k * B[i + <span class="number">2</span>];</span><br><span class="line">    A[i + <span class="number">3</span>] = k * B[i + <span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (; i &lt; N; i++) &#123;</span><br><span class="line">    A[i] = k * B[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>减少循环控制开销</strong>：循环变量更新和条件检查的次数减少为原来的 1/4。</li><li><strong>提高指令级并行性</strong>：展开后的循环体可以更好地利用 CPU 的流水线。</li><li><strong>减少分支预测错误</strong>：循环条件检查的次数减少，分支预测错误的概率降低。</li></ul><p><strong>对于第二种则是：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    a[<span class="number">0</span>] = k * b[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">1</span>] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    a[<span class="number">1</span>] = k * b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    a[<span class="number">2</span>] = k * b[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">3</span>] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    a[<span class="number">3</span>] = k * b[<span class="number">3</span>];</span><br><span class="line">    a += <span class="number">4</span>;</span><br><span class="line">    b += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (*a &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    *a = k * *b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>第一种循环（固定次数）</strong>：GCC 可以完全自动展开，展开效果显著。</li><li><strong>第二种循环（动态终止条件）</strong>：GCC 也可以尝试展开，但由于循环次数动态确定，展开的难度较大，优化效果可能不如固定次数循环明显。<h3 id="2-循环向量化"><a href="#2-循环向量化" class="headerlink" title="2. 循环向量化"></a>2. 循环向量化</h3></li></ul></blockquote><p>这是o3对于循环展开的进一步优化</p><ul><li>对于第一种代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;immintrin.h&gt;</span> <span class="comment">// AVX2 头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>); <span class="comment">// N = 2^30</span></span><br><span class="line">__m256i vec_k = _mm256_set1_epi32(k); <span class="comment">// 将 k 广播到向量寄存器</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= N - <span class="number">8</span>; i += <span class="number">8</span>) &#123;</span><br><span class="line">    __m256i vec_b = _mm256_loadu_si256((__m256i*)&amp;B[i]); <span class="comment">// 加载 B 的 8 个元素</span></span><br><span class="line">    __m256i vec_a = _mm256_mullo_epi32(vec_b, vec_k);    <span class="comment">// 并行乘法</span></span><br><span class="line">    _mm256_storeu_si256((__m256i*)&amp;A[i], vec_a);         <span class="comment">// 存储结果到 A</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (; i &lt; N; i++) &#123;</span><br><span class="line">    A[i] = k * B[i]; <span class="comment">// 处理剩余元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以注意到之前串行运行的乘法运算可以并行计算了</p><ul><li>对于第二种代码，想要进行并行乘法计算就需要多很多代码量：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;immintrin.h&gt;</span> <span class="comment">// AVX2 头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">int</span> N = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>); <span class="comment">// N = 2^30</span></span><br><span class="line">A[N - <span class="number">1</span>] = <span class="number">-1</span>; <span class="comment">// 设置哨兵值</span></span><br><span class="line"><span class="type">int</span> *a = A, *b = B;</span><br><span class="line">__m256i vec_k = _mm256_set1_epi32(k); <span class="comment">// 将 k 广播到向量寄存器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 检查是否满足终止条件</span></span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">1</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        a[<span class="number">0</span>] = k * b[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        a[<span class="number">0</span>] = k * b[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">1</span>] = k * b[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">3</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        a[<span class="number">0</span>] = k * b[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">1</span>] = k * b[<span class="number">1</span>];</span><br><span class="line">        a[<span class="number">2</span>] = k * b[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理 4 个元素</span></span><br><span class="line">    __m256i vec_b = _mm256_loadu_si256((__m256i*)b); <span class="comment">// 加载 B 的 8 个元素</span></span><br><span class="line">    __m256i vec_a = _mm256_mullo_epi32(vec_b, vec_k); <span class="comment">// 并行乘法</span></span><br><span class="line">    _mm256_storeu_si256((__m256i*)a, vec_a);         <span class="comment">// 存储结果到 A</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新指针</span></span><br><span class="line">    a += <span class="number">4</span>;</span><br><span class="line">    b += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理剩余元素</span></span><br><span class="line"><span class="keyword">if</span> (*a &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    *a = k * *b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当然这也只是大概的样子，不过可以看出其复杂性，并且并没有第一种优化程度大。</p></blockquote><h3 id="3-分支预测"><a href="#3-分支预测" class="headerlink" title="3. 分支预测"></a>3. 分支预测</h3><ul><li>对于第一种代码：</li></ul><p>在循环展开后，判断次数减少，分支预测次数减少；由于循环条件 <code>i &lt; N</code> 是一个简单的比较操作，且 <code>N</code> 是常量，GCC 会生成高效的机器指令。</p><p>用T表示判断正确F表示判断错误的话，循环条件的判断应该是：TTTTTTTTTTTTF这种，分支预测的错误率会很低。</p><ul><li>对于第二种代码：</li></ul><p>虽然每次判断的结果也是TTTTTTTTTTF这种，但是由于：</p><h4 id="1-内存访问的延迟"><a href="#1-内存访问的延迟" class="headerlink" title="(1) 内存访问的延迟"></a><strong>(1) 内存访问的延迟</strong></h4><ul><li><code>*a &gt;= 0</code> 需要从内存中加载 <code>*a</code> 的值，而内存访问的延迟较高。</li><li>在加载 <code>*a</code> 的值之前，分支预测器无法确定条件的结果，因此可能只能基于历史行为进行预测。</li></ul><h4 id="2-数据依赖性的不确定性"><a href="#2-数据依赖性的不确定性" class="headerlink" title="(2) 数据依赖性的不确定性"></a><strong>(2) 数据依赖性的不确定性</strong></h4><ul><li><code>*a</code> 的值可能受到其他因素的影响（如其他线程的修改），导致分支预测器难以准确预测。</li><li>即使 <code>*a &gt;= 0</code> 在结束之前总是 <code>T</code>，分支预测器也无法确定何时会变为 <code>F</code>。</li></ul><h4 id="3-分支预测器的局限性"><a href="#3-分支预测器的局限性" class="headerlink" title="(3) 分支预测器的局限性"></a><strong>(3) 分支预测器的局限性</strong></h4><ul><li>分支预测器通常基于局部历史记录进行预测，而 <code>*a &gt;= 0</code> 的行为可能不够规律，导致预测失败。</li><li>如果 <code>*a</code> 的值在循环过程中变化较大，分支预测器的准确率会进一步降低。</li></ul><blockquote><p><strong>因此第二种分支预测准确率没有第一种高</strong></p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">条件类型</th><th style="text-align:center">规律性</th><th style="text-align:center">内存访问延迟</th><th style="text-align:center">数据依赖性</th><th style="text-align:center">预测准确率</th></tr></thead><tbody><tr><td style="text-align:center"><code>i &lt; N</code></td><td style="text-align:center">高度规律</td><td style="text-align:center">无</td><td style="text-align:center">无</td><td style="text-align:center">非常高（接近 100%）</td></tr><tr><td style="text-align:center"><code>*a &gt;= 0</code></td><td style="text-align:center">可能不规律</td><td style="text-align:center">有</td><td style="text-align:center">有</td><td style="text-align:center">较低（取决于数据）</td></tr></tbody></table></div><blockquote><p>[!NOTE]</p><p>以上三种分析方向为gcc优化方向，以下为cpu执行角度分析</p></blockquote><h3 id="缓存预取"><a href="#缓存预取" class="headerlink" title="缓存预取"></a>缓存预取</h3><p>对于第一种代码</p><ul><li>数组 <code>A</code> 和 <code>B</code> 是<strong>顺序访问</strong>的，即每次迭代访问 <code>A[i]</code> 和 <code>B[i]</code>。</li><li><p>这种顺序访问模式非常容易被硬件预取器预测。</p></li><li><p>硬件预取器会检测到顺序访问模式，并自动预取 <code>A</code> 和 <code>B</code> 的后续数据。</p></li><li>由于访问模式简单且规律，硬件预取器可以非常有效地工作，从而减少内存访问的延迟。</li></ul><p>而对于第二种，</p><ul><li>数组 <code>A</code> 和 <code>B</code> 仍然是<strong>顺序访问</strong>的，但循环条件 <code>*a &gt;= 0</code> 依赖于内存中的值。</li><li>由于 <code>A[N - 1]</code> 被设置为 <code>-1</code>，循环会在访问到 <code>A[N - 1]</code> 时结束。</li><li>硬件预取器仍然可以检测到顺序访问模式，并自动预取 <code>A</code> 和 <code>B</code> 的后续数据。</li><li>但由于循环条件依赖于内存中的值，硬件预取器可能无法准确预测循环的结束位置。</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">特性</th><th style="text-align:center">第一种代码</th><th style="text-align:center">第二种代码</th></tr></thead><tbody><tr><td style="text-align:center"><strong>数据访问模式</strong></td><td style="text-align:center">顺序访问，规律性强</td><td style="text-align:center">顺序访问，但循环条件依赖内存中的值</td></tr><tr><td style="text-align:center"><strong>硬件预取器的适用性</strong></td><td style="text-align:center">非常适用，预取效果好</td><td style="text-align:center">适用，但预取效果可能受限</td></tr><tr><td style="text-align:center"><strong>显式预取的必要性</strong></td><td style="text-align:center">通常不需要</td><td style="text-align:center">可能无效，甚至导致缓存污染</td></tr><tr><td style="text-align:center"><strong>缓存性能</strong></td><td style="text-align:center">缓存命中率高，内存延迟低</td><td style="text-align:center">缓存命中率较高，但可能略低</td></tr></tbody></table></div><ul><li>由于循环条件依赖于内存中的值，硬件预取器可能无法完全有效地工作。</li><li>缓存命中率可能略低于第一种代码，尤其是在循环结束附近。</li></ul><blockquote><p>所以从缓存预取的角度看，第一种代码效果略好</p></blockquote><h3 id="触发缓存写回"><a href="#触发缓存写回" class="headerlink" title="触发缓存写回"></a>触发缓存写回</h3><p>对于第二种代码：</p><ul><li>在每次迭代中，<code>*a</code> 的值会被加载到缓存中。</li><li>由于 <code>A</code> 是顺序访问的，硬件预取器会将 <code>A</code> 的后续数据预取到缓存中。</li><li><p>因此，在大多数情况下，<code>*a</code> 的值会从缓存中命中，而不是从内存中加载。</p></li><li><p>在循环中，<code>*a</code> 的值会被修改，因此对应的缓存行会被标记为脏的。</p></li><li>如果缓存行被替换时是脏的，则需要写回主存。</li><li><p>由于 <code>A</code> 是顺序访问的，缓存行的替换频率较低，缓存写回的次数也较少。</p></li><li><p>由于 <code>A</code> 和 <code>B</code> 是顺序访问的，硬件预取器可以有效地预取数据，减少内存访问的延迟。</p></li><li>循环条件 <code>*a &gt;= 0</code> 的值通常会从缓存中命中，因此不会显著增加内存访问的延迟。</li></ul><blockquote><p>因此从缓存写回的角度看差距不大。</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;软件性能工程—多角度讨论性能优化&quot;&gt;&lt;a href=&quot;#软件性能工程—多角度讨论性能优化&quot; class=&quot;headerlink&quot; title=&quot;软件性能工程—多角度讨论性能优化&quot;&gt;&lt;/a&gt;软件性能工程—</summary>
      
    
    
    
    
    <category term="性能" scheme="https://daoxuan.cc/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>两招解决Mac安装软件提示,</title>
    <link href="https://daoxuan.cc/posts/9118/"/>
    <id>https://daoxuan.cc/posts/9118/</id>
    <published>2025-03-06T04:15:03.000Z</published>
    <updated>2025-03-24T06:49:15.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="两招解决Mac安装软件提示已损坏无法打开-请移到废纸篓"><a href="#两招解决Mac安装软件提示已损坏无法打开-请移到废纸篓" class="headerlink" title="两招解决Mac安装软件提示已损坏无法打开,请移到废纸篓"></a>两招解决Mac安装软件提示<code>已损坏无法打开</code>,<code>请移到废纸篓</code></h1><blockquote><p>作者：Hardy<br>链接：<a href="https://juejin.cn/post/7239589685975121980">https://juejin.cn/post/7239589685975121980</a><br>来源：稀土掘金</p></blockquote><h2 id="一、在mac上安装一些软件时，会提示如下弹框（已损坏，无法打开。你应该推出磁盘映像），导致无法安装。"><a href="#一、在mac上安装一些软件时，会提示如下弹框（已损坏，无法打开。你应该推出磁盘映像），导致无法安装。" class="headerlink" title="一、在mac上安装一些软件时，会提示如下弹框（已损坏，无法打开。你应该推出磁盘映像），导致无法安装。"></a>一、在mac上安装一些软件时，会提示如下弹框（已损坏，无法打开。你应该推出磁盘映像），导致无法安装。</h2><p><img src="https://easyimage.daoxuan.cc/i/2025/03/06/rc7lqn.webp" alt="image.png"></p><h3 id="解决办法↓↓↓"><a href="#解决办法↓↓↓" class="headerlink" title="解决办法↓↓↓"></a>解决办法↓↓↓</h3><p>在终端或控制台输入如下命令，然后回车，就会弹出提示输入密码，输入开机密码回车。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure><p>以上操作是为了打开：系统偏好设置 – 安全性与隐私 – 通用 ，中的“任何来源”选项。</p><p><img src="https://easyimage.daoxuan.cc/i/2025/03/06/rci00i.webp" alt="image.png"></p><h2 id="二、将应用移入应用程序中后，打开提示已损坏，无法打开。你应该将它移到废纸篓。或你应该推出磁盘映像。"><a href="#二、将应用移入应用程序中后，打开提示已损坏，无法打开。你应该将它移到废纸篓。或你应该推出磁盘映像。" class="headerlink" title="二、将应用移入应用程序中后，打开提示已损坏，无法打开。你应该将它移到废纸篓。或你应该推出磁盘映像。"></a>二、将应用移入应用程序中后，打开提示<code>已损坏，无法打开。你应该将它移到废纸篓。</code>或<code>你应该推出磁盘映像</code>。</h2><p><img src="https://easyimage.daoxuan.cc/i/2025/03/06/rcye2r.webp" alt="image.png"></p><h3 id="解决办法↓↓↓-1"><a href="#解决办法↓↓↓-1" class="headerlink" title="解决办法↓↓↓"></a>解决办法↓↓↓</h3><p>在终端中输入<code>xattr -cr</code>,(这里要注意后面有个空格)。</p><p>将提示已损坏，无法打开的程序图标拖到命令栏中。</p><p><img src="https://easyimage.daoxuan.cc/i/2025/03/06/rdddd4.webp" alt="image.png"></p><p>拖入命令行后， 拖入程序图标后类似显示<code>xattr -cr /Applications/XXX.app</code>，然后回车，再去打开程序即可正常运行。</p><p>提示：在macOS Ventura 13系统上操作之后如果还是提示损坏，就右键软件，选择打开，再点击打开。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;两招解决Mac安装软件提示已损坏无法打开-请移到废纸篓&quot;&gt;&lt;a href=&quot;#两招解决Mac安装软件提示已损坏无法打开-请移到废纸篓&quot; class=&quot;headerlink&quot; title=&quot;两招解决Mac</summary>
      
    
    
    
    
    <category term="mac" scheme="https://daoxuan.cc/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>super()调用逻辑</title>
    <link href="https://daoxuan.cc/posts/50029/"/>
    <id>https://daoxuan.cc/posts/50029/</id>
    <published>2025-02-16T14:27:08.000Z</published>
    <updated>2025-03-24T06:50:43.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="super-调用逻辑"><a href="#super-调用逻辑" class="headerlink" title="super()调用逻辑"></a>super()调用逻辑</h1><blockquote><ul><li>super 和父类没有实质性的关联。</li><li>super(cls, inst) 获得的是 cls 在 inst 的 MRO 列表中的下一个类</li></ul></blockquote><h2 id="MRO列表"><a href="#MRO列表" class="headerlink" title="MRO列表"></a>MRO列表</h2><p>方法解析顺序（Method Resolution Order, MRO）</p><p>一个类的 MRO 列表就是合并所有父类的 MRO 列表，并遵循以下三条原则：</p><ul><li>子类永远在父类前面</li><li>如果有多个父类，会根据它们在列表中的顺序被检查</li><li>如果对下一个类存在两个合法的选择，选择第一个父类</li></ul><p>举例说明：</p><p>继承关系：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">O = <span class="built_in">object</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">E</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(D,F): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(D,E): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(B,C): <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>检索顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">                          6</span><br><span class="line">                         ---</span><br><span class="line">Level 3                 | O |                  (more general)</span><br><span class="line">                      /  ---  \</span><br><span class="line">                     /    |    \                      |</span><br><span class="line">                    /     |     \                     |</span><br><span class="line">                   /      |      \                    |</span><br><span class="line">                  ---    ---    ---                   |</span><br><span class="line">Level 2        3 | D | 4| E |  | F | 5                |</span><br><span class="line">                  ---    ---    ---                   |</span><br><span class="line">                   \  \ _ /       |                   |</span><br><span class="line">                    \    / \ _    |                   |</span><br><span class="line">                     \  /      \  |                   |</span><br><span class="line">                      ---      ---                    |</span><br><span class="line">Level 1            1 | B |    | C | 2                 |</span><br><span class="line">                      ---      ---                    |</span><br><span class="line">                        \      /                      |</span><br><span class="line">                         \    /                      \ /</span><br><span class="line">                           ---</span><br><span class="line">Level 0                 0 | A |                (more specialized)</span><br><span class="line">                           ---</span><br></pre></td></tr></table></figure><p>继承关系：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">O = <span class="built_in">object</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">F</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">E</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(<span class="title class_ inherited__">O</span>): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(D,F): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(E,D): <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(B,C): <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>检索顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">                           6</span><br><span class="line">                          ---</span><br><span class="line">Level 3                  | O |</span><br><span class="line">                       /  ---  \</span><br><span class="line">                      /    |    \</span><br><span class="line">                     /     |     \</span><br><span class="line">                    /      |      \</span><br><span class="line">                  ---     ---    ---</span><br><span class="line">Level 2        2 | E | 4 | D |  | F | 5</span><br><span class="line">                  ---     ---    ---</span><br><span class="line">                   \      / \     /</span><br><span class="line">                    \    /   \   /</span><br><span class="line">                     \  /     \ /</span><br><span class="line">                      ---     ---</span><br><span class="line">Level 1            1 | B |   | C | 3</span><br><span class="line">                      ---     ---</span><br><span class="line">                       \       /</span><br><span class="line">                        \     /</span><br><span class="line">                          ---</span><br><span class="line">Level 0                0 | A |</span><br><span class="line">                          ---</span><br></pre></td></tr></table></figure><p><a href="https://docs.python.org/3/howto/mro.html">mro使用算法说明官方文章</a></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;super-调用逻辑&quot;&gt;&lt;a href=&quot;#super-调用逻辑&quot; class=&quot;headerlink&quot; title=&quot;super()调用逻辑&quot;&gt;&lt;/a&gt;super()调用逻辑&lt;/h1&gt;&lt;blockqu</summary>
      
    
    
    
    
    <category term="python" scheme="https://daoxuan.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>go channel在何时关闭</title>
    <link href="https://daoxuan.cc/posts/20760/"/>
    <id>https://daoxuan.cc/posts/20760/</id>
    <published>2024-12-27T13:40:49.000Z</published>
    <updated>2025-03-25T01:29:17.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="go-channel在何时关闭"><a href="#go-channel在何时关闭" class="headerlink" title="go channel在何时关闭"></a>go channel在何时关闭</h1><blockquote><p> go语言的channel关闭方式只有一种，那就是使用内建<code>close</code>方法关闭，如果不进行显示关闭的话，消费者就一直会等待</p></blockquote><p>不过在使用for等待channel的时候，需要在channel中的所有数据弹出来之后才会彻底关闭channel，收回channel的资源, 例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">10</span>)</span><br><span class="line">c &lt;- <span class="number">1</span></span><br><span class="line">c &lt;- <span class="number">2</span></span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> c &#123;</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种情况下，还是会打印出1、2之后才结束for循环。</p><h2 id="如何判断channel是否已经关闭"><a href="#如何判断channel是否已经关闭" class="headerlink" title="如何判断channel是否已经关闭"></a>如何判断channel是否已经关闭</h2><p>可以通过如下方式读取到channel状态：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i, ok := &lt;- channel</span><br></pre></td></tr></table></figure><p><code>i</code>是channel中读取到的值，<code>ok</code>是bool值，表示channel是否关闭，只有一种情况<code>ok</code>为false，就是channel被显示close并且channel内没有数据可以被读取的时候<code>ok</code>才为false</p><p>如果channel内的没有值的话，读取获得的i为空，具体为那种数据类型的空主要看channel最开始怎么声明的，例如：（ch := make(chan int)，空值为0）</p><p><strong>那么我们可不可以通过i的值来判断是否channel已经关闭了呢？</strong></p><p>当然不可以，因为空值也可能是生产者主动发的，所以要使用<code>ok</code>来判断。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;go-channel在何时关闭&quot;&gt;&lt;a href=&quot;#go-channel在何时关闭&quot; class=&quot;headerlink&quot; title=&quot;go channel在何时关闭&quot;&gt;&lt;/a&gt;go channel</summary>
      
    
    
    
    <category term="后端" scheme="https://daoxuan.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://daoxuan.cc/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go map并发读写问题</title>
    <link href="https://daoxuan.cc/posts/45899/"/>
    <id>https://daoxuan.cc/posts/45899/</id>
    <published>2024-12-27T13:07:34.000Z</published>
    <updated>2025-03-25T01:31:27.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="go-map并发读写问题"><a href="#go-map并发读写问题" class="headerlink" title="go map并发读写问题"></a>go map并发读写问题</h1><h2 id="问题引入"><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h2><p>go语言的map是不允许并发读写的，例如下面这段程序：</p><ul><li><strong>并发写入</strong></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// 启动两个协程序同时写入 map</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++ &#123;</span><br><span class="line">m[i] = i <span class="comment">// 写入</span></span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++ &#123;</span><br><span class="line">m[i] = i <span class="comment">// 写入</span></span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行便会报错：<code>fatal error: concurrent map writes</code></p><ul><li><strong>并发读写</strong></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// 启动两个协程序同时写入 map</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++ &#123;</span><br><span class="line">m[i] = i <span class="comment">// 写入</span></span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++ &#123;</span><br><span class="line">fmt.Println(m[i]) <span class="comment">// 读取</span></span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行会报错：<code>fatal error: concurrent map read and map write</code></p><h2 id="为什么go语言的map允许并发读写呢？"><a href="#为什么go语言的map允许并发读写呢？" class="headerlink" title="为什么go语言的map允许并发读写呢？"></a>为什么go语言的map允许并发读写呢？</h2><blockquote><p>这跟 <code>map</code> 的实现有关，根本原因是：<code>map</code> 的底层是支持自动扩容的，在添加元素的时候，如果发现容量不够，就会自动扩容。 如果允许扩容和访问操作同时发生，那么访问到的数据就不一定就是我们之前存放进去的了，所以 Go 从设计上就禁止了这种操作。 也就是 <code>fail fast</code> 的原则。</p></blockquote><h2 id="还有一种不会报错的map读写错误："><a href="#还有一种不会报错的map读写错误：" class="headerlink" title="还有一种不会报错的map读写错误："></a>还有一种不会报错的map读写错误：</h2><p>下面用一个有趣的例子去复现一个由于迭代过程中修改map而引发的问题：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line"></span><br><span class="line">m[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> m &#123;</span><br><span class="line">m[i+<span class="number">100</span>] = i + <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(m)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，我们只给map赋了一个初值，然后在迭代过程中进行修改，让map进行扩充，多跑几次查看允许结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">map[0:0 100:100 200:200 300:300]</span><br><span class="line">4</span><br><span class="line">map[0:0 100:100 200:200 300:300 400:400 500:500 600:600 700:700]</span><br><span class="line">8</span><br><span class="line">map[0:0 100:100 200:200 300:300 400:400 500:500]</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>我们发现每次不只是只迭代一次，并且每次迭代次数不同，这就是在迭代map的时候扩充map而导致的不确定性。</p><h2 id="下面我们看一下我在写项目时候写出来的一个并发读写错误"><a href="#下面我们看一下我在写项目时候写出来的一个并发读写错误" class="headerlink" title="下面我们看一下我在写项目时候写出来的一个并发读写错误"></a>下面我们看一下我在写项目时候写出来的一个并发读写错误</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取整合的倒排索引字符串</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getIntegrateInvertedIndexString</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span> &#123;</span><br><span class="line">indexStrings := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)</span><br><span class="line"></span><br><span class="line">channel := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并部分结果</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> partIndex := <span class="keyword">range</span> channel &#123;</span><br><span class="line"><span class="comment">// 锁定访问共享的 map</span></span><br><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> partIndex &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := indexStrings[key]; !ok &#123;</span><br><span class="line">indexStrings[key] = value</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">indexStrings[key] += <span class="string">&quot;-&quot;</span> + value</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动多个goroutine来计算部分结果</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">indexString := integrateInvertedIndexString()</span><br><span class="line"><span class="keyword">if</span> indexString != <span class="literal">nil</span> &#123;</span><br><span class="line">channel &lt;- indexString</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line"><span class="built_in">close</span>(channel)</span><br><span class="line"><span class="keyword">return</span> indexStrings</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">integrateInvertedIndexString</span><span class="params">()</span></span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;</span><br><span class="line"><span class="string">&quot;key&quot;</span>: <span class="string">&quot;value&quot;</span>, <span class="string">&quot;key2&quot;</span>: <span class="string">&quot;value2&quot;</span>, <span class="string">&quot;key3&quot;</span>: <span class="string">&quot;value3&quot;</span>, <span class="string">&quot;key4&quot;</span>: <span class="string">&quot;value4&quot;</span>, <span class="string">&quot;key5&quot;</span>: <span class="string">&quot;value5&quot;</span>,</span><br><span class="line"><span class="string">&quot;key6&quot;</span>: <span class="string">&quot;value6&quot;</span>, <span class="string">&quot;key7&quot;</span>: <span class="string">&quot;value7&quot;</span>, <span class="string">&quot;key8&quot;</span>: <span class="string">&quot;value8&quot;</span>, <span class="string">&quot;key9&quot;</span>: <span class="string">&quot;value9&quot;</span>, <span class="string">&quot;key10&quot;</span>: <span class="string">&quot;value10&quot;</span>,</span><br><span class="line"><span class="string">&quot;key11&quot;</span>: <span class="string">&quot;value11&quot;</span>, <span class="string">&quot;key12&quot;</span>: <span class="string">&quot;value12&quot;</span>, <span class="string">&quot;key13&quot;</span>: <span class="string">&quot;value13&quot;</span>, <span class="string">&quot;key14&quot;</span>: <span class="string">&quot;value14&quot;</span>, <span class="string">&quot;key15&quot;</span>: <span class="string">&quot;value15&quot;</span>,</span><br><span class="line"><span class="string">&quot;key16&quot;</span>: <span class="string">&quot;value16&quot;</span>, <span class="string">&quot;key17&quot;</span>: <span class="string">&quot;value17&quot;</span>, <span class="string">&quot;key18&quot;</span>: <span class="string">&quot;value18&quot;</span>, <span class="string">&quot;key19&quot;</span>: <span class="string">&quot;value19&quot;</span>, <span class="string">&quot;key20&quot;</span>: <span class="string">&quot;value20&quot;</span>,</span><br><span class="line"><span class="string">&quot;key21&quot;</span>: <span class="string">&quot;value21&quot;</span>, <span class="string">&quot;key22&quot;</span>: <span class="string">&quot;value22&quot;</span>, <span class="string">&quot;key23&quot;</span>: <span class="string">&quot;value23&quot;</span>, <span class="string">&quot;key24&quot;</span>: <span class="string">&quot;value24&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">IndexMap := getIntegrateInvertedIndexString(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> IndexMap &#123;</span><br><span class="line"><span class="built_in">println</span>(key, value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>报错：<code>fatal error: concurrent map iteration and map write</code></p><p>这个错误其实一度让我非常困惑，为了更快的整理发送到通道的哈希表，我预先跑了一个协程，目的是让生产者和消费者同时工作，然而，程序结束之后发生如上报错。</p><p>要解释这个错误还要从channel的关闭时间以及引用变量的生命周期说起，具体我会在其他文章细说。</p><p>实际上，由于getIntegrateInvertedIndexString结束的时候，读取channel信息的生产者还没有结束运行，还在修改<code>indexStrings</code>，而于此同时我们在迭代<code>IndexMap</code>，因为<code>IndexMap</code>是<code>indexStrings</code>的引用，所以两者操作的是同一个map, 这样就造成了在迭代map时候修改map的错误。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>至于如何解决这个问题，网上也有很多方案说明，我认为用锁，或者在逻辑上保证map不会发生并发读取就好了。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;go-map并发读写问题&quot;&gt;&lt;a href=&quot;#go-map并发读写问题&quot; class=&quot;headerlink&quot; title=&quot;go map并发读写问题&quot;&gt;&lt;/a&gt;go map并发读写问题&lt;/h1&gt;&lt;h</summary>
      
    
    
    
    <category term="后端" scheme="https://daoxuan.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://daoxuan.cc/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>cron的任务堆积问题</title>
    <link href="https://daoxuan.cc/posts/31606/"/>
    <id>https://daoxuan.cc/posts/31606/</id>
    <published>2024-12-24T17:20:13.000Z</published>
    <updated>2025-03-24T06:50:28.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="cron的任务堆积问题"><a href="#cron的任务堆积问题" class="headerlink" title="cron的任务堆积问题"></a>cron的任务堆积问题</h1><blockquote><p>本篇为记录<a href="https://github.com/dx2331lxz/OUCSearcher">搜索引擎项目</a>遇到的问题</p></blockquote><h2 id="cron是什么？"><a href="#cron是什么？" class="headerlink" title="cron是什么？"></a>cron是什么？</h2><p>Cron是一个实用程序，用于在特定的时间自动执行重复任务。在Linux中，常用 cron 服务器来完成这项工作，以下是Cron的工作原理：</p><p>如果想稍后执行特定任务一次，可以使用其他命令。但是，对于重复性任务，cron是完美的解决方案。Cron是一个守护进程，这意味着它在后台运行以执行非交互式任务。类似Windows后台进程中的服务。</p><h2 id="cron的运行机制"><a href="#cron的运行机制" class="headerlink" title="cron的运行机制"></a>cron的运行机制</h2><p>不过，<strong>Cron 不会自动等待上一个任务完成后再执行下一个任务</strong>。Cron 仅负责按计划触发任务，不会管理任务之间的依赖关系或执行状态。</p><p>这也就导致我们不得不注意在使用cron重复运行任务的时候，会出现的任务堆积的问题。</p><p>如果上一次的任务在时间间隔内没有执行完成的话，cron不会等待，会再次启动一个任务。时间长了之后便会造成程序的崩溃。</p><h2 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h2><p><strong>我们最先想到的最简单粗暴的方式便是延长等待时间：</strong></p><p>这种方式看起来不是很优雅，因为我们不能清除的知道任务会执行多久，意味的延长过多的时间影响任务执行效率。那么我们是否可以通过多次运行程序衡量时间呢，正常情况是可以的，不过在我写的搜索引擎项目中，任务有访问数据库的部分，这部分会因为锁的占用而延迟，这是一种动态的时间不好估计，因此这个方案不是很好</p><p><strong>那么对于任务设置超时时间怎么样呢？</strong></p><p>如果我们的循环时间间隔是10s，而一个任务的超时时间也是10s的话就不会出现任务堆积的情况，不过问题仍然没有改变，我们无法确定一个任务的执行时间。因此这个方法也不是很优雅。</p><p><strong>所以我最终的解决方案是：</strong></p><p>在每次任务开始之前检查这个任务是否在运行，如果在运行就跳过本次任务的启动。</p><p>通过一个bool变量<code>taskInProgress</code>表示任务的运行状态，运行开始时候<code>taskInProgress</code>置为true，运行结束时候改为false，需要注意考虑程序崩溃的情况，确保崩溃也可以将<code>taskInProgress</code>状态改为false。</p><p>在每次程序运行时候检查<code>taskInProgress</code>变量的值，如果为true则跳过本次任务，如果为false则开始任务。</p><p>这样的话其实间隔时间可以设置的小一点，通过<code>taskInProgress</code>确保了始终只有一个任务在运行。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;cron的任务堆积问题&quot;&gt;&lt;a href=&quot;#cron的任务堆积问题&quot; class=&quot;headerlink&quot; title=&quot;cron的任务堆积问题&quot;&gt;&lt;/a&gt;cron的任务堆积问题&lt;/h1&gt;&lt;block</summary>
      
    
    
    
    <category term="后端" scheme="https://daoxuan.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="https://daoxuan.cc/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>go变量初始化逻辑</title>
    <link href="https://daoxuan.cc/posts/54641/"/>
    <id>https://daoxuan.cc/posts/54641/</id>
    <published>2024-12-23T02:02:17.000Z</published>
    <updated>2025-03-25T02:11:14.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="go变量初始化逻辑"><a href="#go变量初始化逻辑" class="headerlink" title="go变量初始化逻辑"></a>go变量初始化逻辑</h1><p>Go 的变量初始化采用 <strong>静态依赖解析</strong> 和 <strong>顺序初始化</strong> 模型：</p><p>​    1.    <strong>静态依赖解析</strong>：在编译期间解析变量和包的依赖关系。</p><p>​    2.    <strong>顺序初始化</strong>：根据依赖关系的拓扑排序来初始化变量或包。</p><h2 id="包的初始化"><a href="#包的初始化" class="headerlink" title="包的初始化"></a><strong>包的初始化</strong></h2><h3 id="包初始化的职责"><a href="#包初始化的职责" class="headerlink" title="包初始化的职责"></a><strong>包初始化的职责</strong></h3><p>​    1.    <strong>依赖加载</strong>：按照包的导入顺序加载依赖的其他包。</p><p>​    2.    <strong>初始化全局变量</strong>：对包级别的全局变量进行初始化。</p><p>​    3.    <strong>执行</strong> init <strong>函数</strong>：如果包中定义了 init 函数，则会在全局变量初始化完成后自动执行。</p><h3 id="包初始化的流程"><a href="#包初始化的流程" class="headerlink" title="包初始化的流程"></a><strong>包初始化的流程</strong></h3><p>​    1.    <strong>导入依赖的包</strong></p><p>按照包依赖的拓扑排序加载其他包。依赖包会优先初始化，避免依赖未初始化的问题。</p><p>​    2.    <strong>初始化包中的全局变量</strong></p><p>包中声明的所有全局变量按照声明顺序依次初始化。</p><p>​    3.    <strong>执行</strong> init <strong>函数</strong></p><p>如果有多个 init 函数（可以分布在多个文件中），它们会按照文件顺序依次执行。</p><h3 id="包初始化的特点"><a href="#包初始化的特点" class="headerlink" title="包初始化的特点"></a><strong>包初始化的特点</strong></h3><p>​    •    每个包只初始化一次，无论被导入多少次。</p><p>​    •    初始化顺序由依赖关系决定，依赖链越靠近底层的包越早初始化。</p><h2 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a><strong>变量的初始化</strong></h2><p><strong>变量初始化的职责</strong></p><p>​    1.    <strong>分配存储空间</strong>：为变量分配内存。</p><p>​    2.    <strong>设置默认值</strong>：为未显式初始化的变量设置默认值（如整型为 0，字符串为 “”，指针为 nil）。</p><p>​    3.    <strong>执行显式初始化逻辑</strong>：对变量赋予开发者定义的初始值。</p><p><strong>变量初始化的流程</strong></p><p>​    1.    首先执行<strong>常量的初始化</strong>。</p><p>​    2.    然后是<strong>全局变量的初始化</strong>。</p><p>1.<strong>默认初始化</strong></p><p>声明变量时，如果没有显式赋值，变量会被初始化为零值。例如：</p><p>​    •    整型：0</p><p>​    •    浮点型：0.0</p><p>​    •    布尔型：false</p><p>​    •    字符串：””</p><p>​    •    指针/引用类型：nil</p><p>​    2.<strong>显式初始化</strong></p><p>如果声明变量时有赋值，则直接应用赋值逻辑。</p><p>​    3.<strong>计算依赖关系</strong></p><p>如果初始化值依赖于其他变量，Go 会按拓扑排序的依赖顺序先初始化依赖的变量。</p><h2 id="循环依赖的解决"><a href="#循环依赖的解决" class="headerlink" title="循环依赖的解决"></a>循环依赖的解决</h2><h3 id="包级循环依赖（发生在不同包之间）"><a href="#包级循环依赖（发生在不同包之间）" class="headerlink" title="包级循环依赖（发生在不同包之间）"></a><strong>包级循环依赖</strong>（发生在不同包之间）</h3><blockquote><p>不能通过延迟初始化来解决，因为 import 阶段已经会检测到依赖关系，无法通过运行时推迟初始化来避免循环依赖。</p></blockquote><p><strong>解决方案：</strong></p><p>接口解耦：通过引入接口来解除直接的包级依赖，解决循环依赖问题。</p><p>重构设计：通过重新设计包的结构，将共同依赖的部分提取到一个新的包中，消除循环依赖。</p><h3 id="变量级循环依赖（发生在同一个包之中）"><a href="#变量级循环依赖（发生在同一个包之中）" class="headerlink" title="变量级循环依赖（发生在同一个包之中）"></a><strong>变量级循环依赖</strong>（发生在同一个包之中）</h3><p>可以使用延迟初始化来解决</p><blockquote><p><strong>延迟初始化</strong>（Lazy Initialization）是一种程序设计模式，指变量的初始化推迟到实际使用时才进行，而不是在程序启动或变量声明时立即完成。这种方式可以优化资源使用，避免不必要的初始化，并解决某些循环依赖或执行顺序的问题。</p></blockquote><p><strong>推迟初始化的核心机制</strong></p><ol><li><strong>声明阶段不初始化</strong></li></ol><p>变量在声明时只分配存储空间，保留默认的零值（如 0、”” 或 nil），而实际的值赋予逻辑被推迟到后续的某个运行时阶段。</p><ol><li><strong>运行时完成初始化</strong></li></ol><p>借助函数或 init 函数，在运行时动态地设置变量的值。这可以确保变量的初始化顺序在运行时被明确控制，避免依赖尚未初始化的值。</p><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> A <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getA</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> A == <span class="string">&quot;&quot;</span> &#123; <span class="comment">// 检查是否已初始化</span></span><br><span class="line">        A = <span class="string">&quot;Hello from A&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(getA()) <span class="comment">// 第一次调用时初始化 A</span></span><br><span class="line">    fmt.Println(getA()) <span class="comment">// 之后直接返回已初始化的值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A的初始化会发生在第一次调用A的时候，这样可以避免编译时候初始化变量时出现的循环依赖</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;go变量初始化逻辑&quot;&gt;&lt;a href=&quot;#go变量初始化逻辑&quot; class=&quot;headerlink&quot; title=&quot;go变量初始化逻辑&quot;&gt;&lt;/a&gt;go变量初始化逻辑&lt;/h1&gt;&lt;p&gt;Go 的变量初始化采用</summary>
      
    
    
    
    <category term="后端" scheme="https://daoxuan.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://daoxuan.cc/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>快速迁移go项目</title>
    <link href="https://daoxuan.cc/posts/63511/"/>
    <id>https://daoxuan.cc/posts/63511/</id>
    <published>2024-12-22T15:19:43.000Z</published>
    <updated>2025-03-24T06:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="快速迁移go项目"><a href="#快速迁移go项目" class="headerlink" title="快速迁移go项目"></a>快速迁移go项目</h1><ul><li>在本地项目中，使用<code>go mod tidy</code>整理模块依赖</li></ul><blockquote><p>go mod tidy 是 Go 语言中用于整理模块依赖关系的命令。它会确保你的项目的 go.mod 和 go.sum 文件保持干净和准确。</p></blockquote><ul><li>将项目迁移到新的主机上之后在项目跟目录运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build</span><br></pre></td></tr></table></figure><p>这个时候如果卡在了那里，更换go代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>重新运行<code>go build</code></p><p>这时会将go项目所需要的依赖自动下载并安装，之后直接运行可执行文件开启项目就可以了</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;快速迁移go项目&quot;&gt;&lt;a href=&quot;#快速迁移go项目&quot; class=&quot;headerlink&quot; title=&quot;快速迁移go项目&quot;&gt;&lt;/a&gt;快速迁移go项目&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在本地项目中，使用</summary>
      
    
    
    
    <category term="后端" scheme="https://daoxuan.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="https://daoxuan.cc/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="go" scheme="https://daoxuan.cc/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>博客rss更新记录</title>
    <link href="https://daoxuan.cc/posts/14505/"/>
    <id>https://daoxuan.cc/posts/14505/</id>
    <published>2024-12-14T07:57:16.000Z</published>
    <updated>2025-03-24T06:45:13.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="博客rss更新记录"><a href="#博客rss更新记录" class="headerlink" title="博客rss更新记录"></a>博客rss更新记录</h1><blockquote><p>使用<a href="https://docs.rsshub.app/">rsshub</a>编写了该博客的rss订阅</p></blockquote><h2 id="订阅方式"><a href="#订阅方式" class="headerlink" title="订阅方式"></a>订阅方式</h2><p>可以通过<code>/daoxuan</code>来订阅本博客，如果<code>https://rsshub.app/daoxuan</code>这个地址不通的话可以<a href="https://docs.rsshub.app/zh/deploy/">自建一个rsshub</a>或者<a href="https://docs.rsshub.app/zh/guide/instances">使用公共实例</a></p><h2 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h2><p>可以在<code>https://docs.rsshub.app/zh/routes/blog#道宣的窝</code>这里找到订阅路由</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>没有写抓取全部文章的逻辑，只是抓取了首页最新的10篇文章。</p><p>如果不知道rss订阅是什么的话，可以看下这个文章<br><a href="https://blog.zhheo.com/p/9158a43c.html">RSS上手教程：聚合自己的信息收集渠道，RSSHub、FreshRSS、NetNewsWir</a></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>跟朋友交流突然发现原来hexo有rss订阅插件，也搞了一下订阅地址为<code>https://daoxuan.cc/atom.xml</code></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;博客rss更新记录&quot;&gt;&lt;a href=&quot;#博客rss更新记录&quot; class=&quot;headerlink&quot; title=&quot;博客rss更新记录&quot;&gt;&lt;/a&gt;博客rss更新记录&lt;/h1&gt;&lt;blockquote&gt;
&lt;</summary>
      
    
    
    
    
    <category term="博客" scheme="https://daoxuan.cc/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>fatal: unable to access &#39;https://github.com/username/repo.git/&#39;: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</title>
    <link href="https://daoxuan.cc/posts/27467/"/>
    <id>https://daoxuan.cc/posts/27467/</id>
    <published>2024-12-12T15:26:52.000Z</published>
    <updated>2025-03-25T01:38:29.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="fatal-unable-to-access-‘https-github-com-username-repo-git-‘-GnuTLS-recv-error-110-The-TLS-connection-was-non-properly-terminated"><a href="#fatal-unable-to-access-‘https-github-com-username-repo-git-‘-GnuTLS-recv-error-110-The-TLS-connection-was-non-properly-terminated" class="headerlink" title="fatal: unable to access ‘https://github.com/username/repo.git/‘: GnuTLS recv error (-110): The TLS connection was non-properly terminated."></a>fatal: unable to access ‘<a href="https://github.com/username/repo.git/">https://github.com/username/repo.git/</a>‘: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</h1><p>解决方案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gnutls-bin</span><br><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br><span class="line">git config --global http.postBuffer 1048576000</span><br></pre></td></tr></table></figure><ol><li>安装gnutls-bin</li><li>禁用全局SSL验证</li><li>增大 http.postBuffer 的大小，http.postBuffer 决定了 Git 向远程服务器发送数据时的缓冲区大小，默认值为 1MB。将缓冲区大小增大到 1GB（1048576000 字节）可以解决因数据量大导致的推送中断问题。</li></ol></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;fatal-unable-to-access-‘https-github-com-username-repo-git-‘-GnuTLS-recv-error-110-The-TLS-connection</summary>
      
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/categories/%E6%8A%A5%E9%94%99/"/>
    
    
    <category term="报错" scheme="https://daoxuan.cc/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>情侣之间，对与错真的重要么？</title>
    <link href="https://daoxuan.cc/posts/5430/"/>
    <id>https://daoxuan.cc/posts/5430/</id>
    <published>2024-12-11T11:08:51.000Z</published>
    <updated>2025-03-24T06:46:41.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="情侣之间，对与错真的重要么？"><a href="#情侣之间，对与错真的重要么？" class="headerlink" title="情侣之间，对与错真的重要么？"></a>情侣之间，对与错真的重要么？</h1><blockquote><p>昨天和女朋友突然发生了矛盾，其实冲突时间总体也不到两分钟，起因是因为我说了一句话女朋友刚开始没有听清，后续在我多次强调之后，她继续按照她听错的词讲话，而我大声的质问她到底有没有听清我说话。</p><p>之后说了几句话记不清了，不过随后她挂断了电话。</p><p>我在微信里面回复了一句有病吧</p><p><img src="https://easyimage.daoxuan.cc/i/2024/12/11/u905lz.png" alt="" style="zoom: 67%;" /></p><p>然后我们一晚上没有发消息，直到第二天的下午四点</p><p><img src="https://easyimage.daoxuan.cc/i/2024/12/11/uarbr7.png" alt="" style="zoom:50%;" /></p></blockquote><p>事情经过便是如此，当时我正在上课，所以没有选择回复，因为一句两句说不清。</p><p>下课后便给她打了电话，她开口的第一句话是为什么偷偷取了她给我买的袜子，挺可爱的，能看出来她并不想和我有矛盾，也没有很生气。</p><p>不过很快我们就对昨天的事情进行了论证，论证过程便不再赘述，总之是理性辩论与感性辩论的复杂交织，理性角度不沾道理便会从感性角度去说，这很正常。</p><p>结果我并没有道歉，我不想道歉，在这种两人都有点问题的局面。</p><p>这通电话其实不了了之算是。</p><p>但是很快她像平时一样给我发消息</p><p><img src="https://easyimage.daoxuan.cc/i/2024/12/11/ugc9yg.jpg" alt=""></p><p>当然，这并不代表她低头了，或者是在感情中卑微的一方，我们在一起还有十多天就4周年了，这也是一种磨合后的结果，我们都知道这件事情没什么，所以我们为什么要去争？</p><p>正如题目所言，我开始思考，情侣之前，对与错真的重要么？在这种都认为自己有点道理的情况下。</p><p>说重要的话有它的道理：</p><p>一方面，先承认错误的那一方，便有一种在感情中地位低下的感觉，一次两次当然没有什么问题，可以说明这是一个温柔大度的人，先进行让步，希望感情不会出现问题，但问题是我们总要一起生活，一直一起生活，每次都是同一个人让步的话也总会不对劲的。所以我在考虑让步的时候，也会考虑到以后是否也需要这样，于是坚持自己的立场。</p><p>另一方面，每次矛盾的出现都说明了一定的问题，我们是需要去深究其真正的原因的，然后进行改正，这样感情才能长久。</p><p>如果说不重要的话：</p><p>感觉，当真的是争论出来的对错的话，失败的那一方不会很舒服，而胜利的一方也不会很开心（当然如果辩论胜利就洋洋得意的话，其实就很不对劲了），本来就是相爱的两个人，干嘛要像竞争对手一样去争论呢？看似分出胜负，实则两败俱伤。</p><p>人是复杂的动物，感情则更是复杂，我可以花四年时间摸透女朋友的性格，我清楚的知道怎么做可以快速结束这件小事，但是我没有去做。因为我知道感情与做题不同，不能如同做题一般：“有公式，秒了！”，</p><p>我察觉到自己很矛盾，因此便有了这篇文章，我需要理一理自己的思路，需要思考，以一个认真的态度去思考，</p><p>所以，情侣之前，对与错真的重要么？</p><p>我觉得，恋爱的两个人的事情，观念统一才是最重要的，因此“对与错重不重要”并不重要，我们两个都觉得重要的话，它便是重要的，都觉得无所谓的话，它便不重要。</p><p>所以还是静下心来一起聊个天吧</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;情侣之间，对与错真的重要么？&quot;&gt;&lt;a href=&quot;#情侣之间，对与错真的重要么？&quot; class=&quot;headerlink&quot; title=&quot;情侣之间，对与错真的重要么？&quot;&gt;&lt;/a&gt;情侣之间，对与错真的重要么</summary>
      
    
    
    
    <category term="恋爱" scheme="https://daoxuan.cc/categories/%E6%81%8B%E7%88%B1/"/>
    
    
    <category term="恋爱" scheme="https://daoxuan.cc/tags/%E6%81%8B%E7%88%B1/"/>
    
  </entry>
  
  <entry>
    <title>butterfly魔改时候报错</title>
    <link href="https://daoxuan.cc/posts/51950/"/>
    <id>https://daoxuan.cc/posts/51950/</id>
    <published>2024-12-08T16:00:49.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="tip "><p>对于一个前端知识全靠用的时候学的后端菜菜，最头疼的莫过于仿照大佬更改源码之后<code>hexo g</code>报错</p></div><blockquote><p>今天分享一个错误</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Only named blocks and mixins can appear at the top level of an extending template</span><br></pre></td></tr></table></figure><h1 id="这个错误的正规解答是这样的"><a href="#这个错误的正规解答是这样的" class="headerlink" title="这个错误的正规解答是这样的"></a>这个错误的正规解答是这样的</h1><p>Pug的模板继承是一项强大的功能，可让您将复杂的页面模板结构拆分为更小，更简单的文件。 但是，如果将许多模板链接在一起，则可能会使页面复杂得不可维护。</p><p>请注意，只有命名块<code>(block)</code>和混合定义可以出现在子模板的顶层（未缩进），顶层不能出现其他内容，如<code>lin()</code>，<code>script</code>，和普通的标签如<code>div(class=&quot;content&quot;)</code>。 这个很重要！ 否则会报错：<code>Only named blocks and mixins can appear at the top level of an extending template</code>。父模板定义页面的整体结构，子模板只能附加，添加或替换特定的标记和逻辑块。 如果子模板试图在块外添加内容，Pug将无法知道将其放置在最终页面的何处。</p><p>使用未缓冲的代码，如果需要在子模块中使用变量，则可以使用下面几种不同的方法：</p><ul><li>将变量添加到Pug选项对象，或在父模板的未缓冲代码中定义它们。 子模板将继承这些变量。</li><li>在子模板的块中定义变量。 扩展模板必须至少包含一个块，否则将为空-只需在此处定义变量即可。</li></ul><p>出于同样的原因，Pug的缓冲注释不能出现在扩展模板的顶层：它们产生的HTML注释在生成的HTML中无处渲染。 （但是，无缓冲的Pug注释仍然可以）</p><blockquote><p>我的一个愚蠢的错误是：在做备份方面自以为是了。</p></blockquote><p>鉴于以往做Django项目的使用习惯，我以为<code>\\</code>这种注释在什么格式的文件都行得通，只用简单快捷键<kbd>Ctrl</kbd> + <kbd>/</kbd>就可以大功告成，成功备份，事实上在<code>png</code>格式的文本中我吃了亏</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>每种文件的注释方式不同，一定不要自以为是。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;tip &quot;&gt;&lt;p&gt;对于一个前端知识全靠用的时候学的后端菜菜，最头疼的莫过于仿照大佬更改源码之后&lt;code&gt;hexo g&lt;/code&gt;报错&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;今</summary>
      
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/categories/%E6%8A%A5%E9%94%99/"/>
    
    
    <category term="butterfly" scheme="https://daoxuan.cc/tags/butterfly/"/>
    
    <category term="报错" scheme="https://daoxuan.cc/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>Beego启动！！！</title>
    <link href="https://daoxuan.cc/posts/3200/"/>
    <id>https://daoxuan.cc/posts/3200/</id>
    <published>2024-10-28T12:48:56.000Z</published>
    <updated>2025-03-24T06:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="beego启动！！！"><a href="#beego启动！！！" class="headerlink" title="beego启动！！！"></a>beego启动！！！</h1><h2 id="Beego核心包"><a href="#Beego核心包" class="headerlink" title="Beego核心包"></a>Beego核心包</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/beego/beego/v2</span><br></pre></td></tr></table></figure><h2 id="bee工具"><a href="#bee工具" class="headerlink" title="bee工具"></a>bee工具</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> install github.com/beego/bee/v2@latest</span><br></pre></td></tr></table></figure><h2 id="把-GOPATH-bin-添加到环境变量中"><a href="#把-GOPATH-bin-添加到环境变量中" class="headerlink" title="把 $GOPATH/bin 添加到环境变量中"></a>把 <code>$GOPATH/bin</code> 添加到环境变量中</h2><p>mac：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:$GOPATH/bin</span><br></pre></td></tr></table></figure><h2 id="使用bee创建项目"><a href="#使用bee创建项目" class="headerlink" title="使用bee创建项目"></a>使用bee创建项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee new [项目名称]</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee run</span><br></pre></td></tr></table></figure><h2 id="app-conf"><a href="#app-conf" class="headerlink" title="app.conf"></a>app.conf</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">appname = beego</span><br><span class="line">httpport = 8080</span><br><span class="line">runmode = dev</span><br><span class="line"></span><br><span class="line"># 处理JSON请求参数</span><br><span class="line">copyrequestbody = true</span><br><span class="line"></span><br><span class="line"># 禁止自动渲染模板</span><br><span class="line">autorender = false</span><br><span class="line">#包含MySQL配置文件</span><br><span class="line">include &quot;mysql.conf&quot;</span><br><span class="line"></span><br><span class="line">sessionon = true # 开启session</span><br><span class="line">sessionname = &quot;beegosessionID&quot; # beegosessionID</span><br><span class="line">sessiongcmaxlifetime = 3600 # session过期时间</span><br><span class="line">SessionCookieLifeTime = 3600 # session id 的过期时间，因为其保存在cookie中</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;beego启动！！！&quot;&gt;&lt;a href=&quot;#beego启动！！！&quot; class=&quot;headerlink&quot; title=&quot;beego启动！！！&quot;&gt;&lt;/a&gt;beego启动！！！&lt;/h1&gt;&lt;h2 id=&quot;Be</summary>
      
    
    
    
    
    <category term="Beego" scheme="https://daoxuan.cc/tags/Beego/"/>
    
  </entry>
  
  <entry>
    <title>Windows远程连接方案（公网）</title>
    <link href="https://daoxuan.cc/posts/26473/"/>
    <id>https://daoxuan.cc/posts/26473/</id>
    <published>2024-09-26T17:06:20.000Z</published>
    <updated>2025-03-25T01:34:21.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>自从入了MacBook之后，我的Windows就长期入住在宿舍了，平时使用远程连接使用，不过正直国庆节，出去玩自然是带着MacBook而不是我的Windows板砖游戏本，真够沉的。在外面不能通过内网连接Windows（没有建代理），因此搜索了一下内网穿透方案。</p><h2 id="入手cpolar"><a href="#入手cpolar" class="headerlink" title="入手cpolar"></a>入手<code>cpolar</code></h2><p>地址：<a href="https://www.cpolar.com/"><code>cpolar</code>官网</a></p><p>对于Windows来说步骤复杂：</p><ol><li>登录官网，注册账号</li><li>下载Windows版本的<code>cpolar</code></li><li>解压安装</li><li>在本地浏览器访问127.0.0.1:9200登录web UI界面（使用的就是刚刚注册的账号）</li><li>根据自己需求创建隧道就好（默认会创建一个名称为<code>remoteDesktop</code>的隧道，直接启动就行）</li><li>启动隧道</li></ol><p>分配的随机域名可以通过官网登录查看，不需要特意去记忆</p><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>mac端我使用的是Windows App这个软件（最近刚刚更新），之前叫Microsoft remote desktop</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>体验上来讲还是蛮流畅的，之前用过樱花<code>frp</code>内网穿透，那个也不错。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;自从入了MacBook之后，我的Windows就长期入住在宿舍了，平时使用远程</summary>
      
    
    
    
    
    <category term="工作流" scheme="https://daoxuan.cc/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>解决在remoteapp中edge打不开的问题</title>
    <link href="https://daoxuan.cc/posts/52000/"/>
    <id>https://daoxuan.cc/posts/52000/</id>
    <published>2024-06-16T16:55:01.000Z</published>
    <updated>2025-03-24T06:50:01.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>在remoteapp中点击edge打不开</p><p><strong>分析原因：</strong></p><p>remoteapp连接服务端机器时会使用一个用户对服务端进行登录</p><p>远程桌面连接中重复使用同一用户登录时，默认情况下新连接会顶掉旧连接。如果允许同一用户多重登陆，则会建立多个 session，并存。但多个 session 之间内容并不共享。<br>我们称之为Session Shadowing Mode（会话重影模式）</p><p>然而无论有多少个session，我们使用的机子始终是同一个，也就是说，对于不可以多开的应用例如微信，如果已经在一个session中打开了，那么在另一个session中便无法打开。</p><blockquote><p>所以我推测是因为edge始终在后台运行并且开机自启，因为关键重启之后依然无法使用<code>remoteapp</code>打开</p></blockquote><p>查看edge设置：edge://settings/system</p><p>发现有一个：启动增强配置项，阅读原理后发现，因为这个配置导致edge有进程开机自启。</p><p><strong>解决方案：</strong></p><p>所以我们只需要关闭启动增强即可。</p><p>PS：总结起来就是不允许多开的应用开机自启的话就无法使用<code>remoteapp</code>连接。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;在remoteapp中点击edge打不开&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分析原因：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;remoteapp连接服务端机器时会使用一个用户对服务端进行登录&lt;/p&gt;
&lt;p&gt;远程桌面连接中重</summary>
      
    
    
    
    
    <category term="remoteapp" scheme="https://daoxuan.cc/tags/remoteapp/"/>
    
  </entry>
  
  <entry>
    <title>检验密码强度python</title>
    <link href="https://daoxuan.cc/posts/16342/"/>
    <id>https://daoxuan.cc/posts/16342/</id>
    <published>2024-06-03T07:59:56.000Z</published>
    <updated>2025-03-24T06:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_password</span>(<span class="params">self, password</span>):</span><br><span class="line">    score = <span class="number">0</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    一、密码长度:</span></span><br><span class="line"><span class="string">        5 分: 小于等于 4 个字符</span></span><br><span class="line"><span class="string">        10 分: 5 到 7 字符</span></span><br><span class="line"><span class="string">        25 分: 大于等于 8 个字符</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        二、字母:</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        0 分: 没有字母</span></span><br><span class="line"><span class="string">        10 分: 全都是小（大）写字母20 分: 大小写混合字母</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        三、数字:</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        0分: 没有数字</span></span><br><span class="line"><span class="string">        10分: 1 个数字</span></span><br><span class="line"><span class="string">        20分: 大于等于 3个数字</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        四、符号:</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        0分: 没有符号</span></span><br><span class="line"><span class="string">        10分: 1个符号</span></span><br><span class="line"><span class="string">        25分: 大于1个符号</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        五、奖励:</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        2分: 字母和数字</span></span><br><span class="line"><span class="string">        3分: 字母、数字和符号</span></span><br><span class="line"><span class="string">        5分: 大小写字母、数字和符号</span></span><br><span class="line"><span class="string">    :param password: 密码</span></span><br><span class="line"><span class="string">    :return: 分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 长度</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(password) &lt;= <span class="number">4</span>:</span><br><span class="line">        score += <span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">5</span> &lt;= <span class="built_in">len</span>(password) &lt;= <span class="number">7</span>:</span><br><span class="line">        score += <span class="number">10</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        score += <span class="number">25</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字母</span></span><br><span class="line">    <span class="keyword">if</span> password.isalpha():</span><br><span class="line">        score += <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> password.islower() <span class="keyword">or</span> password.isupper():</span><br><span class="line">        score += <span class="number">10</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        score += <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数字</span></span><br><span class="line">    <span class="keyword">if</span> password.isdigit():</span><br><span class="line">        score += <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isdigit()]) &gt;= <span class="number">3</span>:</span><br><span class="line">        score += <span class="number">20</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        score += <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 符号</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isalnum()]) == <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> <span class="keyword">not</span> i.isalnum()]) == <span class="number">1</span>:</span><br><span class="line">        score += <span class="number">10</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        score += <span class="number">25</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 奖励</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isalpha()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isdigit()]) &gt; <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isalpha()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isdigit()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>(</span><br><span class="line">            [i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> <span class="keyword">not</span> i.isalnum()]) &gt; <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">3</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.islower()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isupper()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>(</span><br><span class="line">            [i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> i.isdigit()]) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> password <span class="keyword">if</span> <span class="keyword">not</span> i.isalnum()]) &gt; <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> score</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="python" scheme="https://daoxuan.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>六级笔记</title>
    <link href="https://daoxuan.cc/posts/44613/"/>
    <id>https://daoxuan.cc/posts/44613/</id>
    <published>2024-06-02T16:10:18.000Z</published>
    <updated>2024-12-09T17:21:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p><strong>is vital to 对至关重要</strong></p><p>overall 全体的</p><p>overlook 忽视</p><p>affect 影响</p><p>regardless of 不管</p><p>have a great impact on 对 ··· 有巨大影响</p><p>productivity 生产率</p><p>motivated 有积极性的</p><p><strong>cope with 对付</strong></p><p>gratitude 感谢</p><p>contentment 满足</p><p>resilient 有适应力的 make sb. resilient to stress and adversity 逆境</p><p>empathetic 有同感的 </p><p>compassionate 富有同情心的</p><p>conflict 冲突</p><p>pay more attention to 重视</p><p>society 社会</p><p>regret 后悔</p><p>forgive 原谅</p><p>terrible可怕的</p><p>up to now 直到现在</p><p>surpass超过胜过</p><p>previously 以前地</p><p>volume 量</p><p>affirm 证明，证实</p><p>formidable 令人惊叹的</p><p>distinct 不同的</p><p>overstate 夸大</p><p>domain 领域</p><p>prospect 期盼</p><p>correspond 一致，联系</p><p>impact 影响</p><p>be anything but  绝对不是</p><p>conversely 相反地</p><p>evident明显的</p><p>evidence 证明，迹象</p><p>virtue 美德</p><p>thus 因此</p><p>cultural 文化的</p><p>global 全球的</p><p>market 超市，市场</p><p>increasingly渐渐地</p><p>overseas 在海外</p><p>abroad 在国外</p><p>rapid 迅速的</p><p>consumer 消费者</p><p>foreign 外国的</p><p>trade 贸易</p><p>export 出口</p><p>import 进口</p><p>a number of 一批</p><p>enterprise企业</p><p>brand 品牌</p><p>international 国际的</p><p>influence 影响 v or n</p><p>sale 销售量</p><p>publication 出版物</p><p>literature 文学</p><p>animation 动漫</p><p>government 政府</p><p>introduce 推行</p><p>a series of 一系列</p><p>policy 政策</p><p>enhance 加强</p><p>promote 促进</p><p>essential 重要</p><p>harmonious 和谐的</p><p>conflict 冲突</p><p>perspective视角</p><p>outcome 结果</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;&lt;strong&gt;is vital to 对至关重要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;overall 全体的&lt;/p&gt;
&lt;p&gt;overlook 忽视&lt;/p&gt;
&lt;p&gt;affect 影响&lt;/p&gt;
&lt;p&gt;regardles</summary>
      
    
    
    
    
    <category term="英语" scheme="https://daoxuan.cc/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>观影最佳位置</title>
    <link href="https://daoxuan.cc/posts/9815/"/>
    <id>https://daoxuan.cc/posts/9815/</id>
    <published>2024-02-22T13:21:50.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><blockquote><p>以下内容选取自青春山东公众号</p></blockquote><p><strong>2D电影</strong></p><p>根据美国电影电视工程师协会公布的最佳观影位置准则，观看2D电影，<strong>首先需要画面尽量占满视野，观众与屏幕两侧的视线夹角至少要≥36°，</strong>示意图如下。</p><p><img src="https://picture.daoxuan.cc/image/202402222156676.png" alt="图片"></p><p>其次，为避免造成颈椎疲劳，<strong>观众与银幕水平线之间的仰角不宜超过35°，</strong>示意图如下。</p><p><img src="https://picture.daoxuan.cc/image/202402222156076.png" alt="图片"></p><p>基于这两条原则，与银幕一侧水平夹角过小的偏两侧的座位、仰角过大的最前排座位、离屏幕太远且离后置音响过近的最后排座位，都会影响观影视听效果体验，所以要想获得较好的观影体验，就不宜选择这几种座位。</p><p>综合视听效果来考虑，为方便大家快速作出选择，我们将不同规格的影厅对应的位置总结如下。</p><p><strong>·</strong> 如果是8~14排的小厅，最好选择第五、六排前后居中位置；</p><p><strong>·</strong> 如果是15~20排的中厅，最好选择第七、八排前后居中位置；</p><p><strong>·</strong> 如果是21~25排的大厅或者IMAX厅，最好选择第九、十排前后居中位置。</p><p><strong>3D电影</strong></p><p>由于3D眼镜会将银幕亮度削弱40%左右，所以观看3D电影时，为了更好的视觉效果，<strong>应该坐在银幕与放映窗口间1/2的位置，</strong>示意图如下。</p><p><img src="https://picture.daoxuan.cc/image/202402222156510.png" alt="图片"></p><p>电影院中同一放映厅不同位置的票价不同，也是根据观影效果决定的，不过，由于每个人的观影需求不尽相同，具体该怎么选择还要结合自身需求来决定。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;以下内容选取自青春山东公众号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2D电影&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据美国电影电视工程师协会公布的最佳观影位置准则，观看2</summary>
      
    
    
    
    
    <category term="有趣的知识" scheme="https://daoxuan.cc/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>django如何将jwt的token作为参数传递验证身份</title>
    <link href="https://daoxuan.cc/posts/64064/"/>
    <id>https://daoxuan.cc/posts/64064/</id>
    <published>2024-01-29T14:05:06.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><blockquote><p>有些时候，我们需要将access_token作为参数传递，而不是携带请求头中</p><p>这个时候，我们可以先豁免将jwt验证，然后将参数中的token放到请求头中，</p><p>然后使用官方函数手动验证。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">from rest_framework_simplejwt.authentication import JWTAuthentication</span><br><span class="line"> # 豁免验证</span><br><span class="line"> permission_classes = [AllowAny]</span><br><span class="line"></span><br><span class="line"> def parse(self, request, token):</span><br><span class="line">     authentication = JWTAuthentication()</span><br><span class="line">     request.META[&#x27;HTTP_AUTHORIZATION&#x27;] = &#x27;Bearer &#x27; + token</span><br><span class="line">     user, token = authentication.authenticate(request)</span><br><span class="line">     return user</span><br><span class="line">    </span><br><span class="line"> def get(self, request):</span><br><span class="line">     # 获取到get方法的参数</span><br><span class="line">     params = request.query_params</span><br><span class="line">     # id = request.user.id</span><br><span class="line">     # print(id)</span><br><span class="line">     if not params.get(&#x27;token&#x27;):</span><br><span class="line">         return Response(&#123;&#x27;msg&#x27;: &#x27;token未传入&#x27;, &#x27;code&#x27;: 403&#125;, status=status.HTTP_403_FORBIDDEN)</span><br><span class="line">     else:</span><br><span class="line">         token = params.get(&#x27;token&#x27;)</span><br><span class="line">         # 为请求头添加token</span><br><span class="line">         user = self.parse(request, token)</span><br><span class="line"></span><br><span class="line">         # 利用jwt解析token函数进行登录验证并且得到用户id</span><br><span class="line">         if not user:</span><br><span class="line">             return Response(&#123;&#x27;msg&#x27;: &#x27;token无效&#x27;, &#x27;code&#x27;: 403&#125;, status=status.HTTP_403_FORBIDDEN)</span><br></pre></td></tr></table></figure><h2 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h2><p>parse的主要作用便是在请求头中添加token并且进行验证，这也是整个流程的关键。</p><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><p>下面的get是drf中get请求处理函数，算是使用实例，无需在意。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;有些时候，我们需要将access_token作为参数传递，而不是携带请求头中&lt;/p&gt;
&lt;p&gt;这个时候，我们可以先豁免将jwt验证，然后将参数中的token放到请求头中，&lt;/p&gt;
&lt;p&gt;然</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>python蓝桥杯刷题笔记</title>
    <link href="https://daoxuan.cc/posts/55779/"/>
    <id>https://daoxuan.cc/posts/55779/</id>
    <published>2024-01-28T15:06:04.000Z</published>
    <updated>2024-12-08T16:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><blockquote><p>未完待续</p></blockquote><h1 id="python蓝桥杯刷题备忘录"><a href="#python蓝桥杯刷题备忘录" class="headerlink" title="python蓝桥杯刷题备忘录"></a>python蓝桥杯刷题备忘录</h1><h2 id="1-字符逆序"><a href="#1-字符逆序" class="headerlink" title="1.  字符逆序"></a>1.  字符逆序</h2><p>字符串切割：[-1::-1]</p><blockquote><p>[起始位置:结束位置:步幅]  PS：负号表示倒序</p></blockquote><h2 id="2-水仙花数"><a href="#2-水仙花数" class="headerlink" title="2. 水仙花数"></a>2. 水仙花数</h2><p><code>//</code>表示整除, <code>/</code>表示正常除法，<code>%</code>表示求余数</p><h2 id="3-Python内置的map函数"><a href="#3-Python内置的map函数" class="headerlink" title="3. Python内置的map函数"></a>3. Python内置的map函数</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>map() 会根据提供的函数对指定序列做映射。</p><p>第一个参数 function 以参数序列中的每一个元素调用 function 函数，返回包含每次 function 函数返回值的新列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; def square(x) :         # 计算平方数</span><br><span class="line">...     return x ** 2</span><br><span class="line">... </span><br><span class="line">&gt;&gt;&gt; map(square, [1,2,3,4,5])    # 计算列表各个元素的平方</span><br><span class="line">&lt;map object at 0x100d3d550&gt;     # 返回迭代器</span><br><span class="line">&gt;&gt;&gt; list(map(square, [1,2,3,4,5]))   # 使用 list() 转换为列表</span><br><span class="line">[1, 4, 9, 16, 25]</span><br><span class="line">&gt;&gt;&gt; list(map(lambda x: x ** 2, [1, 2, 3, 4, 5]))   # 使用 lambda 匿名函数</span><br><span class="line">[1, 4, 9, 16, 25]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如果两个参数就两个序列，按照对应位置输入前面的函数</p></blockquote><h2 id="4-字符串格式化输出"><a href="#4-字符串格式化输出" class="headerlink" title="4. 字符串格式化输出"></a>4. 字符串格式化输出</h2><p>print(“格式化字符串”%变量1)<br>print(“格式化字符串”%(变量1,变量2，…))</p><p><strong>%d 用0补齐</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">student_no = 1</span><br><span class="line">print(&#x27;学生的序号为:%03d&#x27; %student_no</span><br><span class="line">学生的序号为:001</span><br></pre></td></tr></table></figure><p><strong>%f 四舍五入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pi = 3.1415926</span><br><span class="line">print(&#x27;圆周率为：%f&#x27; % pi) #默认输出小数点后面6位</span><br><span class="line">print(&#x27;圆周率为：%.0f&#x27; % pi) </span><br><span class="line">print(&#x27;圆周率为：%.2f&#x27; % pi) </span><br><span class="line">print(&#x27;圆周率为：%.3f&#x27; % pi) </span><br><span class="line">print(&#x27;圆周率为：%.8f&#x27; % pi) #不足位用0补足</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">圆周率为：3.141593圆周率为：3圆周率为：3.14圆周率为：3.142圆周率为：3.1415960</script><h2 id="5-字符串是否相等"><a href="#5-字符串是否相等" class="headerlink" title="5. 字符串是否相等"></a>5. 字符串是否相等</h2><p>可以直接用<code>==</code>来判断是否完全相同，可以使用<code>.lower()</code>来使字符串变成小写，用<code>.upper()</code>把字符串变成大写。</p><h2 id="6-Python在方括号中使用for循环"><a href="#6-Python在方括号中使用for循环" class="headerlink" title="6. Python在方括号中使用for循环"></a>6. Python在方括号中使用for循环</h2><p><strong>1、[expression for iter_val in iterable]</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">传统写法：</span><br><span class="line"></span><br><span class="line">L = []</span><br><span class="line">for i in range(1,11):</span><br><span class="line">    L.append(i**2)</span><br><span class="line">print(L)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">列表解析：</span><br><span class="line"></span><br><span class="line">L = [i**2 for i in range(1,11)]</span><br><span class="line">print(L)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2、[expression for iter_val in iterable if cond_expr]</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">传统写法：</span><br><span class="line"></span><br><span class="line">L = []</span><br><span class="line">for i in range(1,11):</span><br><span class="line">    if i**2 &gt; 50:</span><br><span class="line">        L.append(i**2)</span><br><span class="line">print(L)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">[64, 81, 100]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">列表解析：</span><br><span class="line"></span><br><span class="line">L = [i**2 for i in range(1,11) if i**2 &gt;50]</span><br><span class="line">print(L)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">[64, 81, 100]</span><br></pre></td></tr></table></figure><h2 id="7-合并列表"><a href="#7-合并列表" class="headerlink" title="7. 合并列表"></a>7. 合并列表</h2><blockquote><p>将列表中元素合并为一个字符串</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot; &quot;</span>, <span class="string">&quot;World&quot;</span>]</span><br><span class="line">result_string = <span class="string">&#x27;&#x27;</span>.join(my_list)</span><br><span class="line"><span class="built_in">print</span>(result_string)</span><br></pre></td></tr></table></figure><p>得到的是字符串，不是列表</p><blockquote><p>将多个列表合并为一个列表</p></blockquote><p>直接相加即可</p><h2 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h2><p><strong>子序列不同于子串，子串要求元素在原序列中是连续的，而子序列不要求连续。</strong></p><h2 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h2><p>在 Python 中，<code>round()</code> 是一个内置函数，用于对数字进行四舍五入。<code>round()</code> 函数接受两个参数：要四舍五入的数字和保留的小数位数。</p><p>语法如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">round</span>(number, ndigits)</span><br></pre></td></tr></table></figure></p><ul><li><code>number</code> 是要四舍五入的数字</li><li><code>ndigits</code> 是要保留的小数位数（可以为负数，表示要四舍五入到小数点左边的位数）</li></ul><p>如果 <code>ndigits</code> 参数被省略，<code>round()</code> 函数会将 <code>number</code> 四舍五入为最接近的整数。</p><p>以下是一些示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">number1 = <span class="number">3.14159</span></span><br><span class="line">rounded_number1 = <span class="built_in">round</span>(number1, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(rounded_number1)  <span class="comment"># 输出: 3.14</span></span><br><span class="line"></span><br><span class="line">number2 = <span class="number">10.6789</span></span><br><span class="line">rounded_number2 = <span class="built_in">round</span>(number2)</span><br><span class="line"><span class="built_in">print</span>(rounded_number2)  <span class="comment"># 输出: 11</span></span><br><span class="line"></span><br><span class="line">number3 = <span class="number">1234.5678</span></span><br><span class="line">rounded_number3 = <span class="built_in">round</span>(number3, -<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(rounded_number3)  <span class="comment"># 输出: 1200</span></span><br></pre></td></tr></table></figure><p>在这些示例中，<code>round()</code> 函数根据提供的 <code>ndigits</code> 参数四舍五入了不同的数字，并返回结果。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;未完待续&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;python蓝桥杯刷题备忘录&quot;&gt;&lt;a href=&quot;#python蓝桥杯刷题备忘录&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    
    <category term="python" scheme="https://daoxuan.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>大英三翻译</title>
    <link href="https://daoxuan.cc/posts/16961/"/>
    <id>https://daoxuan.cc/posts/16961/</id>
    <published>2024-01-02T15:09:55.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="Unit1"><a href="#Unit1" class="headerlink" title="Unit1"></a>Unit1</h1><p>中国有一句话，叫“人贵有自知之明”。这个观念的 最早提出者是老子。老子在《道德经》里说“知人者智，自知者明”。有“自知之明”是指人应该对自己有正确的认识，了解自身的优点和缺点，清醒地知道自己能做什么。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">As the Chinese saying goes, it is important to know oneself. The first person to put forward this idea was Laozi, who wrote in his book DaoDe jing :&quot;A person who knows others is intelligent, but a person who knows himself is insightful.&quot; To know oneself is to have a corret understanding of oneself, including one&#x27;s strengths and limitations, and to be clear-minded about what one can do.</span><br></pre></td></tr></table></figure><p>我们把人的自知视为“贵”，可见做到“自知”是多么的不易。“自知之明”是一种人生哲学，也是一种品德。它可以帮助我们不断地修正自己，朝着更高的人生目标迈进。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">we cherish this virtue so much precisely, because it is hard for people to know themselves. Knowing oneself is both part of a philosophy of life and a virtue that can improve oneself and attainment of a higher life goal.</span><br></pre></td></tr></table></figure><h1 id="Unit2"><a href="#Unit2" class="headerlink" title="Unit2"></a>Unit2</h1><p>与父辈相比，现在的孩子在物质生活上要丰富得多，但在精神上则略有欠缺。他们不太可能和伙伴们一起玩，玩具取代伙伴成了他们最忠实的朋友。他们的父母从不缺钱给他们买各种贵重玩具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Compared to their parents, children now do enjoy a far better material life, but their emotional life seems less satisfying. They are less likely to play with their peers, for toys have replaced their playments as their most loyal friends. Their parents can always afford to buy them all kinds of expensive toys.</span><br></pre></td></tr></table></figure><p>这样的好处是：他们不再整天缠着父母，因为玩具和电子游戏减轻了他们的孤独感。但也有负面影响：沉迷于玩具和电子游戏会让孩子视力下降或者让他们不愿意与别人交流。这种现象应引起家长和学校的关注。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The good things about this is that they no longer pester their parents to play with them all day long, because toys and video games have lessened their feelings of loneliness. But there are alse negetive effects: The addiction to toys and video games may cause a child&#x27;s eyesight to deteriorate or make them unwilling to communicate with others. The phenomenona should demand the attention of both parents and schools.</span><br></pre></td></tr></table></figure><h1 id="Unit3"><a href="#Unit3" class="headerlink" title="Unit3"></a>Unit3</h1><p>在敦煌莫高窟，最著名的艺术杰作要数壁画“飞天”（ flying apsaras）。敦煌飞天是印度文化和中国文化共同孕育而成的。在印度，被称为“飞天”的空中飞行的天神（celestial beings）多出现在佛教石窟壁画（grotto mural）中，中国道教传统则把在空中飞行的天神称为“飞仙”（ flying immortals）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In the Mogaocaves in Dunhuang, the murals with &quot;flying apsaras&quot; are one of the most well-known artistic masterpiece. The flying apsaras in Dunhuang are product of the intermixing of Indian and Chinese culture</span><br><span class="line">In india, celestial beings called &quot;flying apsaras&quot; appear mostly in grotto mural, while in the Chinese Daoist tradition, flying celestial beings are known as &quot;flying immortals&quot;</span><br></pre></td></tr></table></figure><p>魏晋南北朝时，佛教初传入中国，壁画中的飞仙开始被称为“飞天”。后来，随着佛教在中国的深入发展，佛教的飞天和道教的飞仙在艺术形象上相互融合。敦煌莫高窟的飞天是中国古代艺术家的杰作，是世界艺术史的奇迹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">During Wei, Jin and Northern and Southern dynasties, when the introduction of Buddhism in China was at an early stage, people began to call flying immortals in murals &quot;flying apsaras&quot;. Later, with the development of Buddhism in China, the artistic images of Buddhist flying apsaras and Daoist flying immortals merged with each other.</span><br><span class="line">The flying apsaras in Dunhuang grotto mural are most ingenious creation of ancient Chinese artists, and a miracle in the history of world art.</span><br></pre></td></tr></table></figure><h1 id="Unit4"><a href="#Unit4" class="headerlink" title="Unit4"></a>Unit4</h1><p>目前，中国老年人口居世界第一，已经进入老龄化社会。而中国现在正处于社会转型期，建立一个完整的社会福利体系仍需很长的一段时间，因此中国的养老问题较为特殊。预计在今后半个世纪，家庭养老仍然是中国主流的养老模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Now, China, with the largest population of elderly people in the world, has become an ageing society. Meanwhile, China is alse a country undergoing social transition. It will be a long time before a sound social welfare system can be established, which means that China is in a unique situation when it comes to care of its ageing population. It is predicted that in the next 50 years, family care for the aged will still be the main way in China.</span><br></pre></td></tr></table></figure><p>孝敬父母（filial piety）一直是中国传统伦理道德（ethics）的重要组成部分。在当今这样一个老龄化的社会中，弘扬孝道就显得更加重要，因为在鼓励人们对家里的老人提供日常照顾和情感慰藉方面，孝道仍将起关键性的作用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Filial piety has always been a significant part of traditional Chinese ethics. In today&#x27;s ageing society, it will be all the more important to promote the virtue of filial piety, as it will continue to play a key role in encouraging people to take good care of their elderly family members by providing daily care and emotional support.</span><br></pre></td></tr></table></figure><h1 id="Unit5"><a href="#Unit5" class="headerlink" title="Unit5"></a>Unit5</h1><p>女性是劳动力市场的重要组成部分。但是当前劳动就业中的性别歧视仍然存在，这与我国构建和谐社会的要求背道而驰。就劳动者而言，不能人尽其才，不仅造成人力资本投资的浪费，还会使她们对社会公正产生怀疑；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Women are an important part of the labour force.But gender discrimination in the job market still exists, and serves as a counter force to the building of a harmonious society. As far as employees are concerned, jobs that do not suit their talents will not noly give rise to a waste of the investment in human capital, but alse cause them to lose faith in social justice.</span><br></pre></td></tr></table></figure><p>就用人单位而言，性别歧视不仅破坏人才选拔的程序，造成人才浪费，也会不利于人们正确理解何为正常运转的市场；就社会而言，性别歧视不仅干扰人力资源的正常流动，还会破坏就业市场的公平环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">As for employers, gender discrimination will not noly destroy the process of selecting talent, and waste talent, but also harm the perception of a people of a properly functioning market. On the level of society, gender discrimination not only disturb proper distribution of human resources, and damage a fair environment in the job market.</span><br></pre></td></tr></table></figure><h1 id="Unit6"><a href="#Unit6" class="headerlink" title="Unit6"></a>Unit6</h1><p>春节是中国最重要的传统节日。但近年来，很多人都抱怨过年的气氛越来越淡，已经很难感受到记忆中过年的那种美好感觉了。事实上，春节在过去之所以显得重要，是因为只有到了春节人们才能享美食、穿新衣。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The Spring Festival is the most important traditional holiday in China. But in recent years, many people have complained that the celebratory atmostphere of lunar New Year is not as strong as it used to be, and it is hard for them to regain that wonderful feeling in their memories. In fact, in the past, it was only during the Spring Festival that people could enjoy delicious food and wear new clothes.This explains why the holiday was so important to Chinese people.</span><br></pre></td></tr></table></figure><p>而随着中国经济的迅速发展，人们的物质生活越来越丰富，人们庆祝春节的方式也发生了一些变化。比如说，越来越多的人选择过年时外出旅游。但无论如何，对于中国人来说，春节的重要性是不可替代的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">But with whe rapid development of the Chinese economy and an increasingly rich material life, the ways in which Chinese people celebrate the Spring festival have changed. For intance, more and more people choose to travel during the Spring Festival. Nonetheless, for Chinese people, the Spring Festival play an irreplaceable role in their culture.</span><br></pre></td></tr></table></figure><h1 id="Unit7"><a href="#Unit7" class="headerlink" title="Unit7"></a>Unit7</h1><p>中国是世界上自然灾害较为严重的国家之一。在和平时期，抢险救灾是中国军队的一项重要任务。中国军队是抢险救灾的突击力量，承担最紧急、最艰难、最危险的救援任务。中国军人都是抱着打仗的心态在救灾，甚至冒着生命危险抢救灾民。每当解放军抵达灾区，群众都热烈欢迎，感到无比欣慰。中国军队在历次灾难救援中表现出的组织性、专业性、高效性赢得了人民群众的信任和赞誉。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">China is one of the countries that are most affected by natural disasters. In peace time, rescue and relief work is an important mission of the Chinese army. China&#x27;s armed forces always form task forces of rescue and relief work, taking on the most urgent, most difficult and most dangerous jobs. Chinese army perform their rescue and relief work as if they were fighting a war, sometimes even at the risk of their own lives. whenever the People&#x27;s liberation Army arrives at an area hit by a natural disaster, the local people will welcome them warmly and feel greatly relieved, The sense of organization, professionalism and efficiency they have displayed has helped them win the trust and praise of the public.</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;Unit1&quot;&gt;&lt;a href=&quot;#Unit1&quot; class=&quot;headerlink&quot; title=&quot;Unit1&quot;&gt;&lt;/a&gt;Unit1&lt;/h1&gt;&lt;p&gt;中国有一句话，叫“人贵有自知之明”。这个观念的 最早提</summary>
      
    
    
    
    
    <category term="English" scheme="https://daoxuan.cc/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Django，启动！！！</title>
    <link href="https://daoxuan.cc/posts/64089/"/>
    <id>https://daoxuan.cc/posts/64089/</id>
    <published>2024-01-02T13:52:15.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="Django，启动！！！"><a href="#Django，启动！！！" class="headerlink" title="Django，启动！！！"></a>Django，启动！！！</h1><blockquote><p>本篇文章用于快速配置出本人习惯的Django使用配置</p></blockquote><h2 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Django settings for itstudio_backstage project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Generated by &#x27;django-admin startproject&#x27; using Django 4.1.4.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on this file, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/4.1/topics/settings/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For the full list of settings and their values, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/4.1/ref/settings/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build paths inside the project like this: BASE_DIR / &#x27;subdir&#x27;.</span></span><br><span class="line">BASE_DIR = Path(__file__).resolve().parent.parent</span><br><span class="line"></span><br><span class="line">conf = configparser.RawConfigParser()</span><br><span class="line"></span><br><span class="line">conf.read(os.path.join(BASE_DIR, <span class="string">&quot;config.ini&quot;</span>), encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment"># Quick-start development settings - unsuitable for production</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line">SECRET_KEY = conf.get(<span class="string">&quot;Django&quot;</span>, <span class="string">&quot;SECRET_KEY&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span></span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&quot;*&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;simpleui&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="comment"># todo 将###替换为项目名</span></span><br><span class="line">ROOT_URLCONF = <span class="string">&#x27;###.urls&#x27;</span></span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [BASE_DIR / <span class="string">&#x27;templates&#x27;</span>]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">&#x27;apps&#x27;</span>))</span><br><span class="line"><span class="comment">#todo 将###替换为项目名称</span></span><br><span class="line">WSGI_APPLICATION = <span class="string">&#x27;###.wsgi.application&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: conf.get(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;ENGINE&quot;</span>),</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: conf.get(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;NAME&quot;</span>),</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: conf.get(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;USER&quot;</span>),</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: conf.get(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;PASSWORD&quot;</span>),</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: conf.get(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;HOST&quot;</span>),</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="number">3306</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Password validation</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators</span></span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-Hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">&#x27;static/&#x27;</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Default primary key field type</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field</span></span><br><span class="line"></span><br><span class="line">DEFAULT_AUTO_FIELD = <span class="string">&#x27;django.db.models.BigAutoField&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="config-ini"><a href="#config-ini" class="headerlink" title="config.ini"></a>config.ini</h2><p>在项目根目录下面创建config.ini</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[database]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ENGINE</span> = django.db.backends.mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">NAME</span> = ouchelper</span><br><span class="line"></span><br><span class="line"><span class="attr">USER</span> = dx2331lxz</span><br><span class="line"></span><br><span class="line"><span class="attr">PASSWORD</span> = <span class="number">1314521</span></span><br><span class="line"></span><br><span class="line"><span class="attr">HOST</span> = localhost</span><br><span class="line"></span><br><span class="line"><span class="section">[Django]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">SECRET_KEY</span> = <span class="string">&#x27;django-insecure-68*wwg-r$@p72!y9exi+z+9z0lxy3am0l=1@u(6)1$je7plxqq&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="下载类库"><a href="#下载类库" class="headerlink" title="下载类库"></a>下载类库</h2><ul><li>simpleui</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-simpleui -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><ul><li>rest_framework</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install djangorestframework</span><br></pre></td></tr></table></figure><ul><li>mysqlclient</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><ul><li>simplejwt</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install djangorestframework-simplejwt</span><br></pre></td></tr></table></figure><h2 id="views-py"><a href="#views-py" class="headerlink" title="views.py"></a>views.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="comment"># from . import serializer, models</span></span><br><span class="line"><span class="comment"># from utils import email</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status, pagination  <span class="comment"># 状态和分页</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><h2 id="serializer-py"><a href="#serializer-py" class="headerlink" title="serializer.py"></a>serializer.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Serializer</span>(serializers.ModelSerializer):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        <span class="comment"># model = models.</span></span><br><span class="line">        fields = <span class="string">&quot;__all__&quot;</span></span><br></pre></td></tr></table></figure><h2 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span><br></pre></td></tr></table></figure><h2 id="jwt部分"><a href="#jwt部分" class="headerlink" title="jwt部分"></a>jwt部分</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jwt</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> AllowAny</span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> IsAuthenticated</span><br><span class="line"><span class="keyword">from</span> rest_framework_simplejwt.authentication <span class="keyword">import</span> JWTAuthentication, JWTTokenUserAuthentication</span><br><span class="line"><span class="keyword">from</span> rest_framework_simplejwt.views <span class="keyword">import</span> TokenObtainPairView</span><br><span class="line"><span class="keyword">from</span> rest_framework_simplejwt.tokens <span class="keyword">import</span> RefreshToken</span><br></pre></td></tr></table></figure><blockquote><p>快速jwt</p></blockquote><ul><li>settings</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework_simplejwt.authentication.JWTTokenUserAuthentication&#x27;</span>,  <span class="comment"># 使用rest_framework_simplejwt验证身份</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.IsAuthenticated&#x27;</span>  <span class="comment"># 默认权限为验证用户</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.AllowAny&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># simplejwt</span></span><br><span class="line">SIMPLE_JWT = &#123;</span><br><span class="line">    <span class="string">&#x27;REFRESH_TOKEN_LIFETIME&#x27;</span>: timedelta(days=<span class="number">7</span>),</span><br><span class="line">    <span class="string">&#x27;ACCESS_TOKEN_LIFETIME&#x27;</span>: timedelta(minutes=<span class="number">60</span>),</span><br><span class="line">    <span class="string">&#x27;ROTATE_REFRESH_TOKENS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>urls</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 simplejwt 提供的几个验证视图类</span></span><br><span class="line"><span class="keyword">from</span> rest_framework_simplejwt.views <span class="keyword">import</span> (</span><br><span class="line">    TokenObtainPairView,</span><br><span class="line">    TokenRefreshView,</span><br><span class="line">    TokenVerifyView</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-cors-headers</span><br></pre></td></tr></table></figure><h3 id="在-APP-中注册"><a href="#在-APP-中注册" class="headerlink" title="在 APP 中注册"></a>在 APP 中注册</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...,</span><br><span class="line">    &quot;corsheaders&quot;,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="添加中间件"><a href="#添加中间件" class="headerlink" title="添加中间件"></a>添加中间件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    ...,</span><br><span class="line">    &quot;corsheaders.middleware.CorsMiddleware&quot;,</span><br><span class="line">    &quot;django.middleware.common.CommonMiddleware&quot;,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="配置允许通过的域名"><a href="#配置允许通过的域名" class="headerlink" title="配置允许通过的域名"></a>配置允许通过的域名</h3><p>通过配置 CORS_ALLOWED_ORIGINS 添加通过的域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CORS_ALLOWED_ORIGINS = [</span><br><span class="line">    &quot;https://example.com&quot;,</span><br><span class="line">    &quot;https://sub.example.com&quot;,</span><br><span class="line">    &quot;http://localhost:8080&quot;,</span><br><span class="line">    &quot;http://127.0.0.1:9000&quot;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>也可以使用正则表达式，配置 CORS_ALLOWED_ORIGIN_REGEXES，即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CORS_ALLOWED_ORIGIN_REGEXES = [</span><br><span class="line">    r&quot;^https://\w+\.example\.com$&quot;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>爱特合作的情况多半是后端部署上服务器，然后前端在本地对接后，打包代码后发给后端部署，所以需要设置一下允许内网 IP 允许跨域。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if DEBUG:</span><br><span class="line">    CORS_ALLOWED_ORIGIN_REGEXES = [</span><br><span class="line">        # 允许内网IP及所有端口，用于调试</span><br><span class="line">        r&quot;^http://((127\.0\.0\.1)|(localhost)|(10\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)|(172\.((1[6-9])|(2\d)|(3[01]))\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)|(192\.168\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;))(:\d+)&#123;0,1&#125;$&quot;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>注意上线之后，需要将域名 / IP + 端口 添加到白名单内</p><p>允许跨域认证<br>配置 CORS_ALLOW_CREDENTIALS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CORS_ALLOW_CREDENTIALS = True</span><br></pre></td></tr></table></figure><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CustomPagination</span>(pagination.PageNumberPagination):</span><br><span class="line">    page_size = <span class="number">10</span>  <span class="comment"># 每页显示的数据条数</span></span><br><span class="line">    page_size_query_param = <span class="string">&#x27;page_size&#x27;</span>  <span class="comment"># 页面数量参数名称设置</span></span><br><span class="line">    max_page_size = <span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">users = models.UserInfo.objects.<span class="built_in">filter</span>(roles=<span class="number">3</span>)</span><br><span class="line">paginator = CustomPagination()</span><br><span class="line">paginated_queryset = paginator.paginate_queryset(users, request)</span><br><span class="line">serializers = serializer.RegisterSerializer(paginated_queryset, many=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">return</span> paginator.get_paginated_response(serializers.data)</span><br></pre></td></tr></table></figure><h2 id="配置图片上传"><a href="#配置图片上传" class="headerlink" title="配置图片上传"></a>配置图片上传</h2><p><code>pip install Pillow</code></p><p><strong>settings.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;static/&#x27;</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br></pre></td></tr></table></figure><p>根目录下面创建media、static文件夹</p><p><strong>urls</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入settings</span></span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入static</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">  `````</span><br><span class="line">] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;Django，启动！！！&quot;&gt;&lt;a href=&quot;#Django，启动！！！&quot; class=&quot;headerlink&quot; title=&quot;Django，启动！！！&quot;&gt;&lt;/a&gt;Django，启动！！！&lt;/h1&gt;&lt;b</summary>
      
    
    
    
    
    <category term="Django" scheme="https://daoxuan.cc/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>django_rest_framework_simplejwt如何更改token的默认过期时间</title>
    <link href="https://daoxuan.cc/posts/10030/"/>
    <id>https://daoxuan.cc/posts/10030/</id>
    <published>2023-11-02T12:47:46.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="tip cogs"><p>书写前言</p></div><blockquote><p>jwt的token过期时间是在settings.py中设置的，可是却不是django项目的settings.py中设置的，django项目的settings.py不会覆盖jwt的settings，因此我们需要在jwt模块中的settings.py更改过期时间</p></blockquote><h1 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h1><p><img src="https://picture.daoxuan.cc/image/202311022224296.webp" alt="2f738bd4b31c8701a18ba8c4ec28892f0708283851c3"></p><h2 id="找到settings-py"><a href="#找到settings-py" class="headerlink" title="找到settings.py"></a>找到settings.py</h2><p><code>L:\djangoProject\publicvenv\venv\Lib\sitepackages\rest_framework_simplejwt\settings.py</code></p><p>这个是我本地的路径，实际上只需要这一段就够了</p><blockquote><p>\venv\Lib\sitepackages\rest_framework_simplejwt\settings.py</p></blockquote><h2 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">DEFAULTS = &#123;</span><br><span class="line">    <span class="string">&quot;ACCESS_TOKEN_LIFETIME&quot;</span>: timedelta(minutes=<span class="number">60</span>),</span><br><span class="line">    <span class="string">&quot;REFRESH_TOKEN_LIFETIME&quot;</span>: timedelta(days=<span class="number">30</span>),</span><br><span class="line">    <span class="string">&quot;ROTATE_REFRESH_TOKENS&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;BLACKLIST_AFTER_ROTATION&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;UPDATE_LAST_LOGIN&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;ALGORITHM&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SIGNING_KEY&quot;</span>: settings.SECRET_KEY,</span><br><span class="line">    <span class="string">&quot;VERIFYING_KEY&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AUDIENCE&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&quot;ISSUER&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&quot;JSON_ENCODER&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&quot;JWK_URL&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&quot;LEEWAY&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;AUTH_HEADER_TYPES&quot;</span>: (<span class="string">&quot;Bearer&quot;</span>,),</span><br><span class="line">    <span class="string">&quot;AUTH_HEADER_NAME&quot;</span>: <span class="string">&quot;HTTP_AUTHORIZATION&quot;</span>,</span><br><span class="line">    <span class="string">&quot;USER_ID_FIELD&quot;</span>: <span class="string">&quot;id&quot;</span>,</span><br><span class="line">    <span class="string">&quot;USER_ID_CLAIM&quot;</span>: <span class="string">&quot;user_id&quot;</span>,</span><br><span class="line">    <span class="string">&quot;USER_AUTHENTICATION_RULE&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.authentication.default_user_authentication_rule&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AUTH_TOKEN_CLASSES&quot;</span>: (<span class="string">&quot;rest_framework_simplejwt.tokens.AccessToken&quot;</span>,),</span><br><span class="line">    <span class="string">&quot;TOKEN_TYPE_CLAIM&quot;</span>: <span class="string">&quot;token_type&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JTI_CLAIM&quot;</span>: <span class="string">&quot;jti&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TOKEN_USER_CLASS&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.models.TokenUser&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SLIDING_TOKEN_REFRESH_EXP_CLAIM&quot;</span>: <span class="string">&quot;refresh_exp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SLIDING_TOKEN_LIFETIME&quot;</span>: timedelta(minutes=<span class="number">5</span>),</span><br><span class="line">    <span class="string">&quot;SLIDING_TOKEN_REFRESH_LIFETIME&quot;</span>: timedelta(days=<span class="number">1</span>),</span><br><span class="line">    <span class="string">&quot;TOKEN_OBTAIN_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenObtainPairSerializer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TOKEN_REFRESH_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenRefreshSerializer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TOKEN_VERIFY_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenVerifySerializer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TOKEN_BLACKLIST_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenBlacklistSerializer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SLIDING_TOKEN_OBTAIN_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SLIDING_TOKEN_REFRESH_SERIALIZER&quot;</span>: <span class="string">&quot;rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>详细配置情况可以看这个官方文档<a href="https://django-rest-framework-simplejwt.readthedocs.io/en/latest/settings.html">Settings — Simple JWT 5.2.2.post30+gfaf92e8 documentation (django-rest-framework-simplejwt.readthedocs.io)</a></p></blockquote><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="找到settings-py-1"><a href="#找到settings-py-1" class="headerlink" title="找到settings.py"></a>找到settings.py</h2><blockquote><p>我是在宝塔面板里面部署的项目，那么关键的问题就是，我去哪里才能找到，宝塔项目把requirements里面的包下载到了哪里？</p></blockquote><p><img src="https://picture.daoxuan.cc/image/202311022113634.png" alt="image-20231102210324538"></p><p>利用Python项目管理器创建项目的时候会自动在项目根目录生成一个venv文件夹（前面有一堆字符的这个），Python的包都下载到了这里</p><p><code>bd83ca6cc23aeab97630bfebbc8d5a84_venv/lib/python3.9/site-packages</code></p><p>按照这个路径来，你要找的的包都在这里</p><p>在这里面找到<code>rest_framework_simplejwt\settings.py</code>就好了</p><h2 id="更改配置-1"><a href="#更改配置-1" class="headerlink" title="更改配置"></a>更改配置</h2><p>同上</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;tip cogs&quot;&gt;&lt;p&gt;书写前言&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;jwt的token过期时间是在settings.py中设置的，可是却不是django项目的setting</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>django数据库讲课文案</title>
    <link href="https://daoxuan.cc/posts/59715/"/>
    <id>https://daoxuan.cc/posts/59715/</id>
    <published>2023-10-28T15:44:52.000Z</published>
    <updated>2025-03-25T01:55:31.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="课程前期准备"><a href="#课程前期准备" class="headerlink" title="课程前期准备"></a>课程前期准备</h2><blockquote><p>默认数据库配置sqlite</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;</span><br><span class="line">        &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span><br><span class="line">        &#x27;NAME&#x27;: BASE_DIR / &#x27;db.sqlite3&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改为mysql</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;</span><br><span class="line">        &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,</span><br><span class="line">        &#x27;NAME&#x27;: MYSQL_DB_NAME,</span><br><span class="line">        &#x27;USER&#x27;: MYSQL_DB_USER,</span><br><span class="line">        &#x27;PASSWORD&#x27;: MYSQL_DB_PASSWORD,</span><br><span class="line">        &#x27;HOST&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">        &#x27;PORT&#x27;: 3306,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>创建app</p><p><code>startapp &lt;app_label&gt;</code></p><p>下载mysqlclient</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    &#x27;django.contrib.admin&#x27;,</span><br><span class="line">    &#x27;django.contrib.auth&#x27;,</span><br><span class="line">    &#x27;django.contrib.contenttypes&#x27;,</span><br><span class="line">    &#x27;django.contrib.sessions&#x27;,</span><br><span class="line">    &#x27;django.contrib.messages&#x27;,</span><br><span class="line">    &#x27;django.contrib.staticfiles&#x27;,</span><br><span class="line">    &#x27;app01&#x27;, # 添加此项</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>创建book类</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Book(models.Model): </span><br><span class="line">    id = models.AutoField(primary_key=True) # id 会自动创建,可以手动写入</span><br><span class="line">    title = models.CharField(max_length=32) # 书籍名称</span><br><span class="line">    price = models.DecimalField(max_digits=5, decimal_places=2) # 书籍价格 </span><br><span class="line">    publish = models.CharField(max_length=32) # 出版社名称 </span><br><span class="line">    pub_date = models.DateField() # 出版时间</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">makemigrations</span><br><span class="line">migrate</span><br></pre></td></tr></table></figure><h3 id="配置url"><a href="#配置url" class="headerlink" title="配置url"></a>配置url</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(&#x27;add_book/&#x27;, views.add_book),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><ul><li>view.py</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render,HttpResponse</span><br><span class="line">from app01 import models </span><br><span class="line">def add_book(request):</span><br><span class="line">    book = models.Book(title=&quot;菜鸟教程&quot;,price=300,publish=&quot;菜鸟出版社&quot;,pub_date=&quot;2008-8-8&quot;) </span><br><span class="line">    book.save()</span><br><span class="line">    return HttpResponse(&quot;&lt;p&gt;数据添加成功！&lt;/p&gt;&quot;)</span><br><span class="line">    </span><br><span class="line"># def add_book(request):</span><br><span class="line">#     books = models.Book.objects.create(title=&quot;如来神掌&quot;,price=200,publish=&quot;功夫出版社&quot;,pub_date=&quot;2010-10-10&quot;) </span><br><span class="line">#     print(books, type(books)) # Book object (18) </span><br><span class="line">#     return HttpResponse(&quot;&lt;p&gt;数据添加成功！&lt;/p&gt;&quot;)</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p><code>all()</code>, <code>filter</code>, <code>exclude()</code>, <code>get()</code>, <code>order_by()</code>, <code>first()</code>, <code>__contains</code>, <code>__range</code></p><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><ul><li><p>使用模型类的 <strong>对象.delete()</strong></p></li><li><p>使用 QuerySet <strong>类型数据.delete()</strong></p></li></ul><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><ul><li>```<br>模型类的对象.属性 = 更改的属性值<br>模型类的对象.save()<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* QuerySet 类型数据.update(字段名=更改的数据)</span><br><span class="line"></span><br><span class="line">&gt; `objects` 是该模型的默认管理器。通过这个管理器，你可以执行各种数据库查询操作</span><br><span class="line"></span><br><span class="line">SQL语句</span><br><span class="line"></span><br></pre></td></tr></table></figure>insert into app02_publish(name,city,email) values (“华山出版社”, “华山”, “hs@163.com”), (“明教出版社”, “黑木崖”, “mj@163.com”)</li></ul><h1 id="先插入-authordetail-表中多数据"><a href="#先插入-authordetail-表中多数据" class="headerlink" title="先插入 authordetail 表中多数据"></a>先插入 authordetail 表中多数据</h1><p>insert into app02_authordetail(gender,tel,addr,birthday) values (1,13432335433,”华山”,”1994-5-23”), (1,13943454554,”黑木崖”,”1961-8-13”), (0,13878934322,”黑木崖”,”1996-5-20”) </p><h1 id="再将数据插入-author，这样-author-才能找到-authordetail"><a href="#再将数据插入-author，这样-author-才能找到-authordetail" class="headerlink" title="再将数据插入 author，这样 author 才能找到 authordetail"></a>再将数据插入 author，这样 author 才能找到 authordetail</h1><p>insert into app02_author(name,age,au_detail_id) values (“令狐冲”,25,1), (“任我行”,58,2), (“任盈盈”,23,3)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">多表实例</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>class Book(models.Model):<br>    title = models.CharField(max_length=32)<br>    price = models.DecimalField(max_digits=5, decimal_places=2)<br>    pub_date = models.DateField()<br>    publish = models.ForeignKey(“Publish”, on_delete=models.CASCADE)<br>    authors = models.ManyToManyField(“Author”)</p><p>class Publish(models.Model):<br>    name = models.CharField(max_length=32)<br>    city = models.CharField(max_length=64)<br>    email = models.EmailField()</p><p>class Author(models.Model):<br>    name = models.CharField(max_length=32)<br>    age = models.SmallIntegerField()<br>    au_detail = models.OneToOneField(“AuthorDetail”, on_delete=models.CASCADE)</p><p>class AuthorDetail(models.Model):<br>    gender_choices = (<br>        (0, “女”),<br>        (1, “男”),<br>        (2, “保密”),<br>    )<br>    gender = models.SmallIntegerField(choices=gender_choices)<br>    tel = models.CharField(max_length=32)<br>    addr = models.CharField(max_length=64)<br>    birthday = models.DateField()<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![img](https://www.runoob.com/wp-content/uploads/2020/05/Django-orm2_1.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">表与表直接的关系</span><br><span class="line"></span><br><span class="line">![img](https://www.runoob.com/wp-content/uploads/2020/05/orm11.png)</span><br><span class="line"></span><br><span class="line">### 一对多</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>def add_book(request):</p><pre><code>#  获取出版社对象pub_obj = models.Publish.objects.filter(pk=1).first()#  给书籍的出版社属性publish传出版社对象book = models.Book.objects.create(title=&quot;菜鸟教程&quot;, price=200, pub_date=&quot;2010-10-10&quot;, publish=pub_obj)print(book, type(book))return HttpResponse(book)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>def add_book(request):</p><pre><code>#  获取出版社对象pub_obj = models.Publish.objects.filter(pk=1).first()#  获取出版社对象的idpk = pub_obj.pk#  给书籍的关联出版社字段 publish_id 传出版社对象的idbook = models.Book.objects.create(title=&quot;冲灵剑法&quot;, price=100, pub_date=&quot;2004-04-04&quot;, publish_id=pk)print(book, type(book))return HttpResponse(book)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 小写表名_set</span><br><span class="line"></span><br><span class="line">在 Django 中，当你定义一个模型（Model）并创建与之关联的外键或多对多关系（ForeignKey 或 ManyToManyField）时，Django 会自动为你的模型生成一个属性，该属性的命名规则是小写的目标模型名称加上 &quot;_set&quot;。</span><br><span class="line"></span><br><span class="line">这个属性允许你在查询中访问与当前模型相关的对象集合。这通常用于反向关联，允许你通过外键或多对多关系查找与当前模型相关的对象。</span><br><span class="line"></span><br><span class="line">下面是一个示例，演示如何使用小写的目标模型名称加上 &quot;_set&quot; 访问与当前模型相关的对象集合：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>from django.db import models</p><p>class Author(models.Model):<br>    name = models.CharField(max_length=100)</p><p>class Book(models.Model):<br>    title = models.CharField(max_length=100)<br>    author = models.ForeignKey(Author, on_delete=models.CASCADE)</p><h1 id="创建作者和书籍对象"><a href="#创建作者和书籍对象" class="headerlink" title="创建作者和书籍对象"></a>创建作者和书籍对象</h1><p>author = Author.objects.create(name=’John Smith’)<br>book1 = Book.objects.create(title=’Book 1’, author=author)<br>book2 = Book.objects.create(title=’Book 2’, author=author)</p><h1 id="通过-Author-模型的小写名称-“-set”-访问与作者相关的书籍"><a href="#通过-Author-模型的小写名称-“-set”-访问与作者相关的书籍" class="headerlink" title="通过 Author 模型的小写名称 + “_set” 访问与作者相关的书籍"></a>通过 Author 模型的小写名称 + “_set” 访问与作者相关的书籍</h1><p>books = author.book_set.all()</p><h1 id="打印作者的书籍"><a href="#打印作者的书籍" class="headerlink" title="打印作者的书籍"></a>打印作者的书籍</h1><p>for book in books:<br>    print(book.title)</p><h1 id="输出"><a href="#输出" class="headerlink" title="输出:"></a>输出:</h1><h1 id="Book-1"><a href="#Book-1" class="headerlink" title="Book 1"></a>Book 1</h1><h1 id="Book-2"><a href="#Book-2" class="headerlink" title="Book 2"></a>Book 2</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 多对多</span><br><span class="line"></span><br><span class="line">在 Django 中，多对多（Many-to-Many）关系用于建立模型之间的多对多关联。这意味着一个模型的实例可以与多个另一个模型的实例关联，并反之亦然。多对多关系在许多应用中都很常见，例如，在一个音乐应用中，歌曲可以有多个标签，而标签也可以应用到多首歌曲。</span><br><span class="line"></span><br><span class="line">以下是如何在 Django 中定义和使用多对多数据表的基本步骤：</span><br><span class="line"></span><br><span class="line">1. **定义模型**：首先，你需要定义两个或更多模型，并在其中一个模型中创建多对多关系字段，通常是 `models.ManyToManyField` 字段。例如，假设我们有两个模型：`Song` 和 `Tag`。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   pythonCopy codefrom django.db import models</p><p>   class Song(models.Model):<br>       title = models.CharField(max_length=100)<br>       tags = models.ManyToManyField(‘Tag’)</p><p>   class Tag(models.Model):<br>       name = models.CharField(max_length=50)<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. **创建数据**：你可以创建模型实例并将它们相关联，以建立多对多关系。在上述示例中，你可以创建歌曲和标签的实例，并使用多对多关系字段来指定它们之间的关联。</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   pythonCopy coderock = Tag.objects.create(name=’Rock’)<br>   pop = Tag.objects.create(name=’Pop’)</p><p>   song1 = Song.objects.create(title=’Song 1’)<br>   song1.tags.add(rock)</p><p>   song2 = Song.objects.create(title=’Song 2’)<br>   song2.tags.add(rock, pop)<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. **查询数据**：你可以查询多对多关系中的数据，查找特定模型实例的相关对象或反之亦然。</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   pythonCopy code# 找到具有特定标签的歌曲<br>   rock_songs = Song.objects.filter(tags__name=’Rock’)</p><h1 id="找到特定歌曲的标签"><a href="#找到特定歌曲的标签" class="headerlink" title="找到特定歌曲的标签"></a>找到特定歌曲的标签</h1><p>   song_tags = song1.tags.all()<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. **更新和删除数据**：你可以更新多对多关系，添加或删除关联。例如，你可以为现有的歌曲添加或删除标签。</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   pythonCopy code# 为歌曲添加标签<br>   song1.tags.add(pop)</p><h1 id="为歌曲删除标签"><a href="#为歌曲删除标签" class="headerlink" title="为歌曲删除标签"></a>为歌曲删除标签</h1><p>   song2.tags.remove(rock)<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">5. **反向关联**：多对多关系允许反向查找关联数据。例如，你可以查找具有特定标签的所有歌曲。</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   pythonCopy code# 找到具有特定标签的所有歌曲<br>   rock_songs = rock.song_set.all()<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### F() 查询</span><br><span class="line"></span><br><span class="line">F() 的实例可以在查询中引用字段，来比较同一个 model 实例中两个不同字段的值。</span><br><span class="line"></span><br><span class="line">之前构造的过滤器都只是将字段值与某个常量做比较，如果想要对两个字段的值做比较，就需要用到 F()。</span><br><span class="line"></span><br><span class="line">使用前要先从 django.db.models 引入 F:</span><br><span class="line"></span><br><span class="line">``` python</span><br><span class="line">from django.db.models import F</span><br></pre></td></tr></table></figure></p><p>用法：</p><blockquote><p>F(“字段名称”)</p></blockquote><p>F 动态获取对象字段的值，可以进行运算。</p><p>Django 支持 F() 对象之间以及 F() 对象和常数之间的加减乘除和取余的操作。</p><p>修改操作（update）也可以使用 F() 函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = models.Book.objects.update(price=F(&quot;price&quot;)+100)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><h3 id="Q-查询"><a href="#Q-查询" class="headerlink" title="Q() 查询"></a>Q() 查询</h3><p>使用前要先从 django.db.models 引入 Q:</p><blockquote><p>from django.db.models import Q</p></blockquote><p>用法：</p><blockquote><p>Q(条件判断)</p></blockquote><p>例如：</p><blockquote><p>Q(title__startswith=”菜”)</p></blockquote><p>之前构造的过滤器里的多个条件的关系都是 and，如果需要执行更复杂的查询（例如 or 语句），就可以使用 Q 。</p><p>Q 对象可以使用 &amp; | ~ （与 或 非）操作符进行组合。</p><p>优先级从高到低：~ &amp; |。</p><p>可以混合使用 Q 对象和关键字参数，Q 对象和关键字参数是用”and”拼在一起的（即将逗号看成 and ），但是 Q 对象必须位于所有关键字参数的前面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res=models.Book.objects.filter(Q(price__gt=350)|Q(title__startswith=&quot;菜&quot;)).values(&quot;title&quot;,&quot;price&quot;)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class Meta:</span><br><span class="line">    db_table = &#x27;book&#x27; # 命名</span><br><span class="line">    verbose_name = &#x27;图书&#x27;  # 模型别名</span><br><span class="line">    verbose_name_plural = &#x27;图书列表&#x27;  # 模型的复数形式别名</span><br></pre></td></tr></table></figure><p><strong>抽象类模型（Abstract Base Class）</strong>：</p><ul><li>抽象类模型是一种不会被数据库创建的模型。它不会生成数据库表，而仅用于继承。</li><li>用于将共享的字段和方法封装在一个基类中，以供多个子类模型继承和重用。</li><li>抽象类模型通常包含一些通用的字段和方法，可以在多个模型中共享。</li><li>不能直接使用抽象类模型创建数据库记录，只能通过子类模型创建记录。</li></ul><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pythonCopy codefrom django.db import models</span><br><span class="line"></span><br><span class="line">class BaseModel(models.Model):</span><br><span class="line">    created_at = models.DateTimeField(auto_now_add=True)</span><br><span class="line">    updated_at = models.DateTimeField(auto_now=True)</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        abstract = True  # 将模型设置为抽象类</span><br><span class="line"></span><br><span class="line">class Post(BaseModel):</span><br><span class="line">    title = models.CharField(max_length=100)</span><br><span class="line">    content = models.TextField()</span><br><span class="line"></span><br><span class="line">class Comment(BaseModel):</span><br><span class="line">    post = models.ForeignKey(Post, on_delete=models.CASCADE)</span><br><span class="line">    text = models.TextField()</span><br></pre></td></tr></table></figure><p><strong>代理类模型（Proxy Model）</strong>：</p><ul><li>代理类模型是一个已存在模型的代理，它可以被用来扩展或修改现有模型的行为，而不需要修改原始模型。</li><li>代理类模型基于现有模型创建，因此它与原始模型共享相同的数据库表。</li><li>代理类模型可以用于添加新方法、属性或定制查询，而不会对数据库结构产生影响。</li></ul><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pythonCopy codefrom django.db import models</span><br><span class="line"></span><br><span class="line">class MyModel(models.Model):</span><br><span class="line">    name = models.CharField(max_length=100)</span><br><span class="line">    value = models.IntegerField()</span><br><span class="line"></span><br><span class="line">class MyModelProxy(MyModel):</span><br><span class="line">    class Meta:</span><br><span class="line">        proxy = True</span><br><span class="line"></span><br><span class="line">    def double_value(self):</span><br><span class="line">        return self.value * 2</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h2 id=&quot;课程前期准备&quot;&gt;&lt;a href=&quot;#课程前期准备&quot; class=&quot;headerlink&quot; title=&quot;课程前期准备&quot;&gt;&lt;/a&gt;课程前期准备&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;默认数据库配置sql</summary>
      
    
    
    
    
    <category term="教程" scheme="https://daoxuan.cc/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mermaid从入门到入土——Markdown进阶语法</title>
    <link href="https://daoxuan.cc/posts/58914/"/>
    <id>https://daoxuan.cc/posts/58914/</id>
    <published>2023-09-19T16:37:02.000Z</published>
    <updated>2024-12-08T16:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>CV自<a href="https://zhuanlan.zhihu.com/p/355997933">Mermaid从入门到入土——Markdown进阶语法 - 知乎 (zhihu.com)</a></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul><li>什么是Mermaid？<ul><li>Mermaid是一种基于Javascript的绘图工具，使用类似于Markdown的语法，使用户可以方便快捷地通过代码创建图表。</li><li>项目地址：<a href="https://github.com/mermaid-js/mermaid（需要将梯子设置成全局模式才能访问）">https://github.com/mermaid-js/mermaid（需要将梯子设置成全局模式才能访问）</a></li></ul></li></ul><ul><li><p>怎么使用Mermaid？</p><ul><li>使用特定的Mermaid渲染器；</li><li><strong>使用集成了Mermaid渲染功能的Markdown编辑器，如<a href="https://www.typora.io/">Typora</a>。</strong>使用时，需要将代码块的语言选择为Mermaid。</li></ul><blockquote><p>Typora是宇宙第一笔记软件，不接受反驳</p></blockquote></li><li><p>Mermaid能绘制哪些图？</p><ul><li>饼状图：使用<code>pie</code>关键字，具体用法后文将详细介绍</li><li>流程图：使用<code>graph</code>关键字，具体用法后文将详细介绍</li><li>序列图：使用<code>sequenceDiagram</code>关键字</li><li>甘特图：使用<code>gantt</code>关键字</li><li>类图：使用<code>classDiagram</code>关键字</li><li>状态图：使用<code>stateDiagram</code>关键字</li><li>用户旅程图：使用<code>journey</code>关键字</li></ul></li><li><p>实例：朱元璋家谱简图，圆圈代表皇帝</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">emperor((朱八八))-.子.-&gt;father(朱五四)-.子.-&gt;朱四九-.子.-&gt;朱百六</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">朱雄英--长子--&gt;朱标--长子--&gt;emperor</span><br><span class="line">emperor2((朱允炆))--次子--&gt;朱标</span><br><span class="line">朱樉--次子--&gt;emperor</span><br><span class="line">朱棡--三子--&gt;emperor</span><br><span class="line">emperor3((朱棣))--四子--&gt;emperor</span><br><span class="line">emperor4((朱高炽))--长子--&gt;emperor3</span><br></pre></td></tr></table></figure><p>以上是概述，下面详细介绍饼状图和流程图的语法。其他图的语法可访问上文给出的项目地址，自行学习。（记得挂梯子）</p><h1 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h1><ul><li><p>在线渲染器：<a href="https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoicGllXG5cIkRvZ3NcIiA6IDQyLjk2XG5cIkNhdHNcIiA6IDUwLjA1XG5cIlJhdHNcIiA6IDEwLjAxIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0">Online FlowChart &amp; Diagrams Editor</a>（需要梯子）</p></li><li><p>语法</p><ul><li>从<code>pie</code>关键字开始图表</li><li>然后使用<code>title</code>关键字及其在字符串中的值，为饼图赋予标题。（这是<strong>可选的</strong>）</li><li>数据部分<ul><li>在<code>&quot; &quot;</code>内写上分区名。</li><li>分区名后使用<code>:</code>作为分隔符</li><li>分隔符后写上数值，最多支持2位小数——数据会以百分比的形式展示</li></ul></li></ul></li></ul><ul><li>实例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line">    title 为什么总是宅在家里？</span><br><span class="line">    &quot;喜欢宅&quot; : 15</span><br><span class="line">    &quot;天气太热或太冷&quot; : 20</span><br><span class="line">    &quot;穷&quot; : 500</span><br></pre></td></tr></table></figure><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><ul><li>在线渲染器：<a href="https://mermaidjs.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVERcbiAgICBBW0hhcmRdIC0tPnxUZXh0fCBCKFJvdW5kKVxuICAgIEIgLS0-IEN7RGVjaXNpb259XG4gICAgQyAtLT58T25lfCBEW1Jlc3VsdCAxXVxuICAgIEMgLS0-fFR3b3wgRVtSZXN1bHQgMl0iLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9fQ">Online FlowChart &amp; Diagrams Editor</a>（需要挂梯子）</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[Start] --&gt; B&#123;Is it?&#125;;</span><br><span class="line">    B -- Yes --&gt; C[OK];</span><br><span class="line">    C --&gt; D[Rethink];</span><br><span class="line">    D --&gt; B;</span><br><span class="line">    B -- No ----&gt; E[End];</span><br></pre></td></tr></table></figure><h2 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h2><p>用于开头，声明流程图的方向。</p><ul><li><code>graph</code>或<code>graph TB</code>或<code>graph TD</code>：从上往下</li><li><code>graph BT</code>：从下往上</li><li><code>graph LR</code>：从左往右</li><li><code>graph RL</code>：从右往左</li></ul><h2 id="结点"><a href="#结点" class="headerlink" title="结点"></a>结点</h2><ul><li>无名字的结点：直接写内容，此时结点边框为方形；节点内容不能有空格</li><li>有名字的结点：节点名后书写内容，内容左右有特定符号，结点边框由符号决定；节点内容可以有空格</li></ul><blockquote><p>下面的实例中，没有为graph指定方向，因此默认是从上往下的。但是由于各个结点之前没有箭头，所以他们都处于同一排。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph</span><br><span class="line">    默认方形</span><br><span class="line">    id1[方形]</span><br><span class="line">    id2(圆边矩形)</span><br><span class="line">    id3([体育场形])</span><br><span class="line">    id4[[子程序形]]</span><br><span class="line">    id5[(圆柱形)]</span><br><span class="line">    id6((圆形))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">graph</span><br><span class="line">id1&#123;菱形&#125;</span><br><span class="line">id2&#123;&#123;六角形&#125;&#125;</span><br><span class="line">id3[/平行四边形/]</span><br><span class="line">id4[\反向平行四边形\]</span><br><span class="line">id5[/梯形\]</span><br><span class="line">id6[\反向梯形/]</span><br></pre></td></tr></table></figure><h2 id="连线样式"><a href="#连线样式" class="headerlink" title="连线样式"></a>连线样式</h2><ul><li>实线箭头：分为无文本箭头和有文本箭头，有文本箭头有2种书写格式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">a--&gt;b--文本1--&gt;c--&gt;|文本2|d</span><br></pre></td></tr></table></figure><ul><li>粗实线箭头：分为无文本箭头和有文本箭头</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">a==&gt;b==文本==&gt;c</span><br></pre></td></tr></table></figure><ul><li>虚线箭头：分为无文本箭头和有文本箭头</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">a-.-&gt;b-.文本.-&gt;c</span><br></pre></td></tr></table></figure><ul><li>无箭头线：即以上三种连线去掉箭头后的形式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">a---b</span><br><span class="line">b--文本1---c</span><br><span class="line">c---|文本2|d</span><br><span class="line">d===e</span><br><span class="line">e==文本3===f</span><br><span class="line">f-.-g</span><br><span class="line">g-.文本.-h</span><br></pre></td></tr></table></figure><ul><li>其他连线：需要将<code>graph</code>关键字改为<code>flowchart</code>，除了新增加的连线形式外，上面三种线的渲染效果也会不同</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    A o--o B</span><br><span class="line">    B &lt;--&gt; C</span><br><span class="line">    C x--x D</span><br><span class="line">    </span><br><span class="line">    旧连线 --文本--&gt; 也会不同</span><br></pre></td></tr></table></figure><ul><li>延长连线：增加相应字符即可，如下图中的B到E，连线中增加了一个<code>-</code>。字符可多次添加。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[Start] --&gt; B&#123;Is it?&#125;;</span><br><span class="line">    B --&gt;|Yes| C[OK];</span><br><span class="line">    C --&gt; D[Rethink];</span><br><span class="line">    D --&gt; B;</span><br><span class="line">    B ---&gt;|No| E[End];</span><br></pre></td></tr></table></figure><h2 id="连线形式"><a href="#连线形式" class="headerlink" title="连线形式"></a>连线形式</h2><ul><li>直链</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">   D[Rethink1&lt;br/&gt;Rethink2] -- text --&gt; B -- text2 --&gt; C</span><br></pre></td></tr></table></figure><ul><li>多重链：可以使用<code>&amp;</code>字符，或单个描述</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">graph </span><br><span class="line">   a --&gt; b &amp; c--&gt; d</span><br><span class="line">   </span><br><span class="line">   A &amp; B--&gt; C &amp; D</span><br><span class="line">   </span><br><span class="line">    X --&gt; M</span><br><span class="line">    X --&gt; N</span><br><span class="line">    Y --&gt; M</span><br><span class="line">    Y --&gt; N</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>子图：需要将<code>graph</code>关键字改为<code>flowchart</code>，在代码段的开始加入<code>subgraph</code>，尾部加入<code>end</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">flowchart TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    subgraph one</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br><span class="line">    one --&gt; two</span><br><span class="line">    three --&gt; two</span><br><span class="line">    two --&gt; c2</span><br></pre></td></tr></table></figure><ul><li>注释：在行首加入<code>%%</code>即可。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">%%这是一条注释，在渲染图中不可见</span><br><span class="line">    A[Hard edge] --&gt;|Link text| B(Round edge)</span><br><span class="line">    B --&gt; C&#123;Decision&#125;</span><br><span class="line">    C --&gt;|One| D[Result one]</span><br><span class="line">    C --&gt;|Two| E[Result two]</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;CV自&lt;a href=&quot;https://zhuanlan.zhihu.com/p/355997933&quot;&gt;Mermaid从入门到入土——Markdown进阶语法 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Markdown" scheme="https://daoxuan.cc/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>picgo报错Error: connect ECONNREFUSED 127.0.0.1:443的解决方式</title>
    <link href="https://daoxuan.cc/posts/64135/"/>
    <id>https://daoxuan.cc/posts/64135/</id>
    <published>2023-09-01T03:11:33.000Z</published>
    <updated>2024-12-08T16:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="picgo报错Error-connect-ECONNREFUSED-127-0-0-1-443的解决方式"><a href="#picgo报错Error-connect-ECONNREFUSED-127-0-0-1-443的解决方式" class="headerlink" title="picgo报错Error: connect ECONNREFUSED 127.0.0.1:443的解决方式"></a>picgo报错Error: connect ECONNREFUSED 127.0.0.1:443的解决方式</h1><p>参考文章：</p><p><a href="https://blog.csdn.net/m0_53277621/article/details/125121042">picgo报错Error: connect ECONNREFUSED 127.0.0.1:443的解决方式_JohnnyassSilverhand的博客-CSDN博客</a></p><p>处理方式：换dns域名解析服务器、换host</p><p>具体解决方式：</p><p>查找 api.github.com 的正确域名（不要直接 ping，建议通过 DNS 查询工具进行查询）</p><p>将其添加到对应的 hosts 文件中</p><p>在C:\Windows\System32\drivers\etc路径找到hosts文件，在末尾加入：</p><p> 140.82.112.6 api.github.com<br> 140.82.114.5 api.github.com<br> //github域名会定期更新，如果不行需要自行查询<br>刷新本地 dns 缓存：cmd执行命令行ipconfig /flushdns</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;picgo报错Error-connect-ECONNREFUSED-127-0-0-1-443的解决方式&quot;&gt;&lt;a href=&quot;#picgo报错Error-connect-ECONNREFUSED-127</summary>
      
    
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>VisualGLM-6B-趋动云部署</title>
    <link href="https://daoxuan.cc/posts/55030/"/>
    <id>https://daoxuan.cc/posts/55030/</id>
    <published>2023-07-17T16:55:37.000Z</published>
    <updated>2024-12-08T16:00:52.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="VisualGLM-6B-趋动云部署"><a href="#VisualGLM-6B-趋动云部署" class="headerlink" title="VisualGLM-6B-趋动云部署"></a>VisualGLM-6B-趋动云部署</h1><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><div class="tag link"><a class="link-card" title="GitHub - THUDM/VisualGLM-6B: Chinese and English multimodal conversational language model | 多模态中英双语对话语言模型" href="https://github.com/THUDM/VisualGLM-6B"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">GitHub - THUDM/VisualGLM-6B: Chinese and English multimodal conversational language model | 多模态中英双语对话语言模型</p><p class="url">https://github.com/THUDM/VisualGLM-6B</p></div></a></div><div class="tag link"><a class="link-card" title="THUDM/visualglm-6b · Hugging Face" href="https://huggingface.co/THUDM/visualglm-6b"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">THUDM/visualglm-6b · Hugging Face</p><p class="url">https://huggingface.co/THUDM/visualglm-6b</p></div></a></div><h2 id="开一台GPU"><a href="#开一台GPU" class="headerlink" title="开一台GPU"></a>开一台GPU</h2><p>我选择的是AUTODL（因为便宜），注册登录后创建容器实例。</p><p>设备的要求：</p><ul><li>≥50G的内存</li><li>≥24G的显存</li></ul><p>镜像选择下面这一套就够用（至少现在是，以后如果不适配了可以另行调整）</p><p><img src="https://picture.daoxuan.cc/image/202307180018585.png" alt="image-20230718001845578"></p><blockquote><p>当然你看官方文档选配置就行</p></blockquote><p>到这里准备工作结束</p><h2 id="拉取源码"><a href="#拉取源码" class="headerlink" title="拉取源码"></a>拉取源码</h2><p>更新一下Ubuntu源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><p>在数据盘中存放模型（防止放系统盘占用太多空间）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd autodl-tmp</span><br></pre></td></tr></table></figure><blockquote><p>autodl-tmp是数据盘</p></blockquote><p>然后就可以拉取源码了，放哪里你自己决定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/THUDM/VisualGLM-6B.git</span><br></pre></td></tr></table></figure><p>这里拉取不成功的话可以多试几次</p><h2 id="下载模型文件"><a href="#下载模型文件" class="headerlink" title="下载模型文件"></a>下载模型文件</h2><p>根据官方文档</p><p>需要安装git-lfs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install git-lfs</span><br><span class="line">sudo apt install apt-utils</span><br><span class="line">git lfs install</span><br></pre></td></tr></table></figure><p>这里如果出现下面这种报错，可以先git init</p><p>然后再git lfs install</p><p><img src="https://img-blog.csdnimg.cn/20190506115804715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxOTM3MTA3,size_16,color_FFFFFF,t_70" alt="img"></p><p>出现<code>Git LFS initialized</code>就可以了图中也有</p><p>继续在新建的文件夹下创建存放模型文件的文件夹，笔者为model</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir model</span><br><span class="line">cd model</span><br></pre></td></tr></table></figure><p>拉取模型文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://huggingface.co/THUDM/visualglm-6b</span><br></pre></td></tr></table></figure><blockquote><p>这里需要等很久，因为模型文件大</p></blockquote><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>进入项目文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd VisualGLM-6B</span><br></pre></td></tr></table></figure><p>根据官方文档可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://mirrors.aliyun.com/pypi/simple/ -r requirements_wo_ds.txt</span><br><span class="line">pip install -i https://mirrors.aliyun.com/pypi/simple/ --no-deps &quot;SwissArmyTransformer&gt;=0.3.6&quot;</span><br></pre></td></tr></table></figure><p>执行这个但是我记得我运行之后少个包，到时候你可以看着报错在下载</p><h2 id="修改模型文件地址"><a href="#修改模型文件地址" class="headerlink" title="修改模型文件地址"></a>修改模型文件地址</h2><p>找到你要运行的文件，这里以web_demo_hf.py为例子</p><p>找到main函数修改地址，默认是<code>THUDM/visualglm-6b</code>，修改成自己的，我们的应该是’/root/autodl-tmp/model/visualglm-6b’</p><p>把<code>THUDM/visualglm-6b</code>都替换掉</p><p>然后把最后一行<code>demo.queue().launch(share=args.share, inbrowser=True, server_name=&#39;0.0.0.0&#39;, server_port=8080)</code></p><p>这个替换成<code>demo.queue().launch(share=True, inbrowser=True, server_name=&#39;0.0.0.0&#39;, server_port=8080)</code></p><p>这样就可以得到一个可以访问的网址了</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>切换到VisualGLM-6B文件夹</p><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python web_demo_hf.py</span><br></pre></td></tr></table></figure><p>等待一段时间，加载模型完成后。复制生成的链接进行访问即可。</p><p>有一个像这样的url</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://2164b527cc15e257b.gradio.live/</span><br></pre></td></tr></table></figure><h2 id="开玩"><a href="#开玩" class="headerlink" title="开玩"></a>开玩</h2><p><img src="https://picture.daoxuan.cc/image/202307180054977.jpg" alt="QQ图片20230718005243"></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;VisualGLM-6B-趋动云部署&quot;&gt;&lt;a href=&quot;#VisualGLM-6B-趋动云部署&quot; class=&quot;headerlink&quot; title=&quot;VisualGLM-6B-趋动云部署&quot;&gt;&lt;/a&gt;V</summary>
      
    
    
    
    
    <category term="VisualGLM-6B" scheme="https://daoxuan.cc/tags/VisualGLM-6B/"/>
    
  </entry>
  
  <entry>
    <title>Django simpleui后台页面的自定义方法</title>
    <link href="https://daoxuan.cc/posts/53297/"/>
    <id>https://daoxuan.cc/posts/53297/</id>
    <published>2023-05-21T08:44:26.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="tip cogs"><p>书写前言</p></div><blockquote><p>我是好文章的搬运工，完全照搬B站一位up主叫“一写代码就开心”的文章，欢迎大家去关注。</p></blockquote><p>@<a href="一些有用的配置">TOC</a></p><h1 id="admin界面汉化"><a href="#admin界面汉化" class="headerlink" title="admin界面汉化"></a>admin界面汉化</h1><p>我们需要在setting.py配置文件里面配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">默认admin后台管理界面是英文的，对英语盲来说用起来不方便。</span><br><span class="line">可以在settings.py中设置：</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-CN&#x27;</span></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="number">1.8</span>版本之后的language code设置不同：</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://picture.daoxuan.cc/image/202305211653379.png" alt="在这里插入图片描述"></p><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><p>我们打开admin后台，看到的列表是<br><img src="https://picture.daoxuan.cc/image/202305211653499.png" alt="在这里插入图片描述"></p><h2 id="列表的基本设置"><a href="#列表的基本设置" class="headerlink" title="列表的基本设置"></a>列表的基本设置</h2><p><img src="https://picture.daoxuan.cc/image/202305211654901.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册小区表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunityAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    <span class="comment"># 新增和修改页面需要展示的字段</span></span><br><span class="line">    fields = (<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;address&#x27;</span>, <span class="string">&#x27;total_buildings&#x27;</span>,<span class="string">&#x27;total_households&#x27;</span>,<span class="string">&#x27;greening_rate&#x27;</span>,<span class="string">&#x27;thumbnail&#x27;</span>,<span class="string">&#x27;developer&#x27;</span>,<span class="string">&#x27;estate_company&#x27;</span>,<span class="string">&#x27;status&#x27;</span>,<span class="string">&#x27;create_time&#x27;</span>,<span class="string">&#x27;update_time&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># listdisplay设置要显示在列表中的字段（id字段是Django模型的默认主键）</span></span><br><span class="line">    list_display = [<span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;address&#x27;</span>,<span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;total_buildings&#x27;</span>, <span class="string">&#x27;total_households&#x27;</span>, <span class="string">&#x27;greening_rate&#x27;</span>, <span class="string">&#x27;image_data&#x27;</span>,<span class="string">&#x27;state_data&#x27;</span>,<span class="string">&#x27;create_time&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 搜索</span></span><br><span class="line">    search_fields = [<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 只读字段</span></span><br><span class="line">    readonly_fields = (<span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>, <span class="string">&#x27;update_time&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># list_per_page设置每页显示多少条记录，默认是100条</span></span><br><span class="line">    list_per_page = <span class="number">5</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># ordering设置默认排序字段，负号表示降序排序</span></span><br><span class="line">    ordering = (<span class="string">&#x27;-create_time&#x27;</span>,)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置哪些字段可以点击进入编辑界面</span></span><br><span class="line">    list_display_links = (<span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="comment"># 详细时间分层筛选　</span></span><br><span class="line">    date_hierarchy = <span class="string">&#x27;create_time&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># list_editable 设置默认可编辑字段，这个字段必须要在list_display里面配置才可以使用</span></span><br><span class="line">    <span class="comment"># 并且必须表里面有对应字段，不能是自己定义的列表字段</span></span><br><span class="line">    <span class="comment"># list_editable = [&#x27;&#x27;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># fk_fields 设置显示外键字段,如果这个表里面有外键，并且想要在列表展示，就可以使用这个配置</span></span><br><span class="line">    <span class="comment"># fk_fields = (&#x27;&#x27;,)</span></span><br></pre></td></tr></table></figure><p>以上关于小区的列表配置之后，列表展示的页面是</p><p><img src="https://picture.daoxuan.cc/image/202305211654801.png" alt="在这里插入图片描述"></p><h2 id="列表字段颜色展示"><a href="#列表字段颜色展示" class="headerlink" title="列表字段颜色展示"></a>列表字段颜色展示</h2><p><img src="https://picture.daoxuan.cc/image/202305211654115.png" alt="在这里插入图片描述"></p><p>想对某些字段设置颜色，可用下面的设置：</p><p><img src="https://picture.daoxuan.cc/image/202305211654417.png" alt="在这里插入图片描述"><br>注意看上面代码，是写在models里，而不是admin中的ModelAdmin里：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小区表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunity</span>(models.Model):</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 0  启用   1  不起用</span></span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=((<span class="string">&quot;0&quot;</span>, <span class="string">u&quot;启用&quot;</span>), (<span class="string">&quot;1&quot;</span>, <span class="string">&quot;不启用&quot;</span>)), default=<span class="string">&quot;0&quot;</span>,verbose_name=<span class="string">u&quot;状态&quot;</span>)</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        verbose_name_plural = verbose_name = <span class="string">&#x27;小区列表&#x27;</span></span><br><span class="line">        db_table = <span class="string">&#x27;tb_community&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">state_data</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.status == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            color_code = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">            <span class="variable language_">self</span>.status = <span class="string">&quot;启动&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            color_code = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">            <span class="variable language_">self</span>.status = <span class="string">&quot;不启动&quot;</span></span><br><span class="line">        <span class="keyword">return</span> format_html(</span><br><span class="line">            <span class="string">&#x27;&lt;span style=&quot;color:&#123;&#125;;&quot;&gt;&#123;&#125;&lt;/span&gt;&#x27;</span>,</span><br><span class="line">            color_code,</span><br><span class="line">            <span class="variable language_">self</span>.status</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    state_data.short_description = <span class="string">&#x27;状态&#x27;</span></span><br></pre></td></tr></table></figure><p>之后要在admin.py里面配置这个state_data方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册小区表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunityAdmin</span>(admin.ModelAdmin):</span><br><span class="line"><span class="comment"># listdisplay设置要显示在列表中的字段（id字段是Django模型的默认主键）</span></span><br><span class="line">    list_display = [<span class="string">&#x27;state_data&#x27;</span>,<span class="string">&#x27;create_time&#x27;</span>]</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>以上完成，就有颜色展示了</p><h2 id="列表展示图片，并且可以放大"><a href="#列表展示图片，并且可以放大" class="headerlink" title="列表展示图片，并且可以放大"></a>列表展示图片，并且可以放大</h2><p><img src="https://picture.daoxuan.cc/image/202305211654928.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小区表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunity</span>(models.Model):</span><br><span class="line">    </span><br><span class="line">    thumbnail = models.ImageField(</span><br><span class="line">        upload_to=<span class="string">&#x27;%y/%m/slt&#x27;</span>, max_length=<span class="number">100</span>, verbose_name=<span class="string">&#x27;缩略图&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.name</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        verbose_name_plural = verbose_name = <span class="string">&#x27;小区列表&#x27;</span></span><br><span class="line">        db_table = <span class="string">&#x27;tb_community&#x27;</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 列表中展示图片</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">image_data</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.thumbnail:</span><br><span class="line">            html_img = <span class="string">&quot;&quot;&quot;  </span></span><br><span class="line"><span class="string">             &lt;div onclick=&#x27;$(&quot;.my_set_image_img&quot;).hide();$(this).next().show();&#x27;&gt;</span></span><br><span class="line"><span class="string">             &lt;img src=&#x27;/media/&#123;&#125;&#x27; style=&#x27;width:50px;height:50px;&#x27; title=&#x27;点击可看大图&#x27;&gt;</span></span><br><span class="line"><span class="string">             &lt;br/&gt;</span></span><br><span class="line"><span class="string">             &lt;/div&gt;</span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             &lt;div class=&#x27;my_set_image_img&#x27; onclick=&quot;$(&#x27;.my_set_image_img&#x27;).hide()&quot; style=&quot;z-index:9999;position:fixed; left: 100px; top:100px;display:none;&quot;&gt;</span></span><br><span class="line"><span class="string">             &lt;img src=&#x27;/media/&#123;&#125;&#x27; style=&#x27;width: 502px;height:500px;margin-left: 200px;&#x27; title=&#x27;点击关闭&#x27;&gt;</span></span><br><span class="line"><span class="string">             &lt;/div&gt;</span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">             &quot;&quot;&quot;</span>.<span class="built_in">format</span>( <span class="variable language_">self</span>.thumbnail,<span class="variable language_">self</span>.thumbnail)</span><br><span class="line">            <span class="keyword">return</span> mark_safe(html_img)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> format_html(</span><br><span class="line">                <span class="string">&#x27;&lt;span&gt;无照片&lt;/span&gt;&#x27;</span>,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    image_data.short_description = <span class="string">&#x27;缩略图&#x27;</span></span><br></pre></td></tr></table></figure><p>以上是在model.py里面配置的，之后再admin.py里面注册</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册小区表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunityAdmin</span>(admin.ModelAdmin):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># listdisplay设置要显示在列表中的字段（id字段是Django模型的默认主键）</span></span><br><span class="line">    list_display = [ <span class="string">&#x27;image_data&#x27;</span>]</span><br><span class="line">   </span><br></pre></td></tr></table></figure><h1 id="重写admin后台的新增接口"><a href="#重写admin后台的新增接口" class="headerlink" title="重写admin后台的新增接口"></a>重写admin后台的新增接口</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>我们在新增的时候，有些B字段是需要根据我们输入的A 字段，进行查询其他数据库表，然后赋值新增的，所以在新增的时候，涉及到我们自定义的逻辑处理。我们只管时候，就需要重写admin后台的新增接口了</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><img src="https://picture.daoxuan.cc/image/202305211654462.png" alt="在这里插入图片描述"><br>就是在admin.py文件里面，重写save_model（）方法就可以了。里面就可以处理我们自己的逻辑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TbBuildingAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    <span class="comment"># 新增和修改页面需要展示的字段</span></span><br><span class="line">    fields = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;community_id&#x27;</span>,<span class="string">&#x27;description&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    list_display = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;total_households&#x27;</span>, <span class="string">&#x27;community_name&#x27;</span>,<span class="string">&#x27;create_time&#x27;</span>,<span class="string">&#x27;delete_data&#x27;</span>]</span><br><span class="line">    search_fields = [<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    list_per_page = <span class="number">5</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_model</span>(<span class="params">self, request, obj, form, change</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;  重写新增接口</span></span><br><span class="line"><span class="string">obj 这个对象里面，就是前段传过来的新增数据</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        xqcode = obj.community_id.code  <span class="comment"># 获取小区id</span></span><br><span class="line"></span><br><span class="line">        xqxx = TbCommunity.objects.<span class="built_in">filter</span>(code=xqcode).first()</span><br><span class="line">        <span class="keyword">if</span> xqxx:</span><br><span class="line">            obj.community_name = xqxx.name</span><br><span class="line">        <span class="built_in">super</span>(TbBuildingAdmin, <span class="variable language_">self</span>).save_model(request, obj, form, change)</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>在model类里面</p><p><img src="https://picture.daoxuan.cc/image/202305211654493.png" alt="在这里插入图片描述"></p><h1 id="重写admin后台的删除方法"><a href="#重写admin后台的删除方法" class="headerlink" title="重写admin后台的删除方法"></a>重写admin后台的删除方法</h1><h2 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h2><p>我们在admin后台，可以看到有两个地方有删除按钮，一个是修改页面，一个是列表的上面</p><p><img src="https://picture.daoxuan.cc/image/202305211654865.png" alt="在这里插入图片描述"><br><img src="https://picture.daoxuan.cc/image/202305211654406.png" alt="在这里插入图片描述"><br>但是原有的删除是在数据库中就删除了，我们想要软删除，就是定义一个字段，删除操作是将这个字段改为1.<br>具体数据库里面是没有删除的，只是删除字段的状态变化了，这个如何改</p><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><p>因为修改页面的是单个删除，外面的是多个删除。所以我们需要这些步骤，这些都要做，才可以实现里面和外面的删除</p><p>第一步是在model.py里面，对应model里面重写这个方法<br><img src="https://picture.daoxuan.cc/image/202305211654629.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置软删除，删除时不删除数据，而是给原本空的删除字段值修改为删除操作执行的时间</span></span><br><span class="line">   <span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params">self, using=<span class="literal">None</span>, keep_parents=<span class="literal">False</span></span>):</span><br><span class="line">       <span class="variable language_">self</span>.is_delete = <span class="string">&quot;1&quot;</span></span><br><span class="line">       <span class="variable language_">self</span>.save()</span><br></pre></td></tr></table></figure><p>第二步</p><p><img src="https://picture.daoxuan.cc/image/202305211654050.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">delete_queryset</span>(<span class="params">self, request, queryset</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Given a queryset, delete it from the database.&quot;&quot;&quot;</span></span><br><span class="line">    c = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> queryset:</span><br><span class="line">        i.delete()</span><br><span class="line">        c += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="重写admin后台的列表展示方法"><a href="#重写admin后台的列表展示方法" class="headerlink" title="重写admin后台的列表展示方法"></a>重写admin后台的列表展示方法</h1><h2 id="需求-2"><a href="#需求-2" class="headerlink" title="需求"></a>需求</h2><p>我们在每一个表里面都加了删除字段，现在就是普通用户可以看到的数据是没有删除的，管理员是可以看到全部，包括已经删除的。如何实现</p><h2 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h2><p><img src="https://picture.daoxuan.cc/image/202305211654578.png" alt="在这里插入图片描述"><br>在admin文件里面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self, request</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;重写列表展示的方法&quot;&quot;&quot;</span></span><br><span class="line">    qs = <span class="built_in">super</span>().get_queryset(request)</span><br><span class="line">    <span class="keyword">if</span> request.user.is_superuser:</span><br><span class="line">        <span class="keyword">return</span> qs</span><br><span class="line">    <span class="keyword">return</span> qs.<span class="built_in">filter</span>(is_delete=<span class="string">&quot;0&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="重写首页"><a href="#重写首页" class="headerlink" title="重写首页"></a>重写首页</h1><p><img src="https://picture.daoxuan.cc/image/202305211654966.png" alt="在这里插入图片描述"><br>本来admin后台的首页不是这样，但是现在我们要自定义一个首页，并且配置到这个后台里面，如何做</p><p>1 首先先写一个页面</p><p><img src="https://picture.daoxuan.cc/image/202305211655258.png" alt="在这里插入图片描述"><br>2 写一个地址访问这个页面</p><p><img src="https://picture.daoxuan.cc/image/202305211655048.png" alt="在这里插入图片描述"><br><img src="https://picture.daoxuan.cc/image/202305211708091.png" alt="在这里插入图片描述"><br>3  在setting文件里面进行配置</p><p><img src="https://picture.daoxuan.cc/image/202305211655942.png" alt="在这里插入图片描述"><br>在url到页面的view视图里面，不能有错误，不然会报500</p><h1 id="重写admin后台的修改接口"><a href="#重写admin后台的修改接口" class="headerlink" title="重写admin后台的修改接口"></a>重写admin后台的修改接口</h1><h2 id="需求-3"><a href="#需求-3" class="headerlink" title="需求"></a>需求</h2><p>重写修改接口，比如，在修改数据数字的时候，将其他地方的数字也修改了，不管是增加，还是减少</p><p>admin后台的新增和修改的接口都是一样的，只是传的change这个字段的Boolean值是不一样的</p><h2 id="方法-3"><a href="#方法-3" class="headerlink" title="方法"></a>方法</h2><p>在admin.py这个文件里面，重写这个方法就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">save_model</span>(<span class="params">self, request, obj, form, change</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;  重写新增接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> change:</span><br><span class="line">       <span class="comment"># 修改</span></span><br><span class="line">       xqcode = obj.TbCharge_id.<span class="built_in">id</span></span><br><span class="line">       <span class="comment"># 查询出对项目</span></span><br><span class="line">       xqxx = TbChargeItem.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=xqcode).first()</span><br><span class="line">       deti=TbChargeDetail.objects.<span class="built_in">filter</span>(<span class="built_in">id</span> = obj.<span class="built_in">id</span>).first()</span><br><span class="line">       <span class="keyword">if</span> xqxx:</span><br><span class="line">           obj.TbCharge_name = xqxx.name</span><br><span class="line">           xqxx.money -= deti.actual_money</span><br><span class="line">           xqxx.money += obj.actual_money</span><br><span class="line">           xqxx.save()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 新增</span></span><br><span class="line">        xqcode = obj.TbCharge_id.<span class="built_in">id</span></span><br><span class="line">        <span class="comment"># 查询出对项目</span></span><br><span class="line">        xqxx = TbChargeItem.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=xqcode).first()</span><br><span class="line">        <span class="keyword">if</span> xqxx:</span><br><span class="line">            obj.TbCharge_name = xqxx.name</span><br><span class="line">            obj.owner_name=obj.owner_id.username</span><br><span class="line">            xqxx.money += obj.actual_money</span><br><span class="line">            xqxx.save()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">super</span>(TbChargeDetailAdmin, <span class="variable language_">self</span>).save_model(request, obj, form, change)</span><br></pre></td></tr></table></figure><h1 id="admin后台的模块新增按钮根据条件进行展示或者不展示"><a href="#admin后台的模块新增按钮根据条件进行展示或者不展示" class="headerlink" title="admin后台的模块新增按钮根据条件进行展示或者不展示"></a>admin后台的模块新增按钮根据条件进行展示或者不展示</h1><h2 id="需求-4"><a href="#需求-4" class="headerlink" title="需求"></a>需求</h2><p>我们有房屋表和投诉表，只有用户在房屋表里面有数据，那么才可以投诉，也就是才可以有新增的按钮</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在admin.py对应的投诉表里面<br><img src="https://picture.daoxuan.cc/image/202305211655912.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span>  <span class="title function_">has_add_permission</span>(<span class="params">self, request</span>):</span><br><span class="line">    tbhoust = TbHouse.objects.<span class="built_in">filter</span>(owner_id=request.user).first()</span><br><span class="line">    <span class="keyword">if</span> tbhoust:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h1 id="admin后台的模块编辑按钮根据条件进行展示或者不展示"><a href="#admin后台的模块编辑按钮根据条件进行展示或者不展示" class="headerlink" title="admin后台的模块编辑按钮根据条件进行展示或者不展示"></a>admin后台的模块编辑按钮根据条件进行展示或者不展示</h1><h2 id="需求-5"><a href="#需求-5" class="headerlink" title="需求"></a>需求</h2><p>只有管理员才可以编辑，维修员不能编辑，所以我们判断当前用户是不是维修员，如果是，就不能编辑</p><h2 id="方法-4"><a href="#方法-4" class="headerlink" title="方法"></a>方法</h2><p>在admin.py文件的对应的模块下写</p><p><img src="https://picture.daoxuan.cc/image/202305211655654.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span>  <span class="title function_">has_change_permission</span>(<span class="params">self, request, obj=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;  根据不同条件，限制编辑按钮的出现&quot;&quot;&quot;</span></span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span> user.sfwxy:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="admin后台的模块删除按钮根据条件进行展示或者不展示"><a href="#admin后台的模块删除按钮根据条件进行展示或者不展示" class="headerlink" title="admin后台的模块删除按钮根据条件进行展示或者不展示"></a>admin后台的模块删除按钮根据条件进行展示或者不展示</h1><h2 id="需求-6"><a href="#需求-6" class="headerlink" title="需求"></a>需求</h2><p>只有管理员才可以删除，维修员不能删除，所以我们判断当前用户是不是维修员，如果是，就不能删除</p><h2 id="方法-5"><a href="#方法-5" class="headerlink" title="方法"></a>方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># def has_delete_permission(self, request):</span></span><br><span class="line"><span class="comment">#     &quot;&quot;&quot;  根据不同条件，限制列表上面的删除按钮的出现&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#     tbhoust = TbHouse.objects.filter(owner_id=request.user).first()</span></span><br><span class="line"><span class="comment">#     if tbhoust:</span></span><br><span class="line"><span class="comment">#         return True</span></span><br><span class="line"><span class="comment">#     else:</span></span><br><span class="line"><span class="comment">#         return False</span></span><br></pre></td></tr></table></figure><h1 id="根据不同的条件，基本配置不同的字段"><a href="#根据不同的条件，基本配置不同的字段" class="headerlink" title="根据不同的条件，基本配置不同的字段"></a>根据不同的条件，基本配置不同的字段</h1><h2 id="需求-7"><a href="#需求-7" class="headerlink" title="需求"></a>需求</h2><p>我们想要  只有维修员可以操作 是否已维修的字段，其他字段只能看；<br>其他用户是可以操作其他字段，但是不能改 是否已维修的字段</p><h2 id="方法-6"><a href="#方法-6" class="headerlink" title="方法"></a>方法</h2><p>我们需要在admin.py里面进行配置，根据不同的条件，进行admin后台的不同配置</p><p><img src="https://picture.daoxuan.cc/image/202305211655182.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一刷新list，就走这个方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changelist_view</span>(<span class="params">self, request, extra_context=<span class="literal">None</span></span>):</span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span>  user.sfwxy:</span><br><span class="line">        <span class="variable language_">self</span>.readonly_fields = [<span class="string">&#x27;device_name&#x27;</span>,<span class="string">&#x27;description&#x27;</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>(TbRepairAdmin, <span class="variable language_">self</span>).changelist_view(request, extra_context=<span class="literal">None</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="admin后台列表展示外键的字段名称"><a href="#admin后台列表展示外键的字段名称" class="headerlink" title="admin后台列表展示外键的字段名称"></a>admin后台列表展示外键的字段名称</h1><p>admin.py文件里面进行配置</p><p><img src="https://picture.daoxuan.cc/image/202305211655253.png" alt="在这里插入图片描述"></p><h1 id="在新增页面，下拉框的外键值，想要特定的，如何配置"><a href="#在新增页面，下拉框的外键值，想要特定的，如何配置" class="headerlink" title="在新增页面，下拉框的外键值，想要特定的，如何配置"></a>在新增页面，下拉框的外键值，想要特定的，如何配置</h1><p>在admin.py文件里面；举一个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TbCommunityAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    <span class="comment"># 新增和修改页面需要展示的字段</span></span><br><span class="line">    fields = (<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;sbxh&#x27;</span>, <span class="string">&#x27;sbgg&#x27;</span>, <span class="string">&#x27;total_sbsl&#x27;</span>,<span class="string">&#x27;sccj&#x27;</span>,<span class="string">&#x27;gmrxm&#x27;</span>,<span class="string">&#x27;gmrq&#x27;</span>,<span class="string">&#x27;pay_money&#x27;</span>,<span class="string">&#x27;user_id&#x27;</span>,<span class="string">&#x27;thumbnail&#x27;</span>)</span><br><span class="line">    <span class="comment"># listdisplay设置要显示在列表中的字段（id字段是Django模型的默认主键）</span></span><br><span class="line">    list_display = [<span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;sbxh&#x27;</span>,<span class="string">&#x27;sbgg&#x27;</span>,  <span class="string">&#x27;gmrq&#x27;</span>, <span class="string">&#x27;image_data&#x27;</span>,<span class="string">&#x27;state_data&#x27;</span>]</span><br><span class="line">    <span class="comment"># 搜索</span></span><br><span class="line">    search_fields = [<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="comment"># 只读字段</span></span><br><span class="line">    readonly_fields = (<span class="string">&#x27;create_time&#x27;</span>, <span class="string">&#x27;update_time&#x27;</span>)</span><br><span class="line">    <span class="comment"># list_per_page设置每页显示多少条记录，默认是100条</span></span><br><span class="line">    list_per_page = <span class="number">5</span></span><br><span class="line">    <span class="comment"># ordering设置默认排序字段，负号表示降序排序</span></span><br><span class="line">    ordering = (<span class="string">&#x27;-create_time&#x27;</span>,)</span><br><span class="line">    <span class="comment"># 设置哪些字段可以点击进入编辑界面</span></span><br><span class="line">    list_display_links = (<span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="comment"># 详细时间分层筛选　</span></span><br><span class="line">    <span class="comment"># date_hierarchy = &#x27;create_time&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user_id 是外键，只想要展示一些特定的，用下面的这个方法</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">formfield_for_foreignkey</span>(<span class="params">self, db_field, request, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> db_field.name == <span class="string">&quot;user_id&quot;</span>:</span><br><span class="line">            kwargs[<span class="string">&quot;queryset&quot;</span>] = Employee.objects.<span class="built_in">filter</span>(sfgly=<span class="string">&quot;sbgly&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>(TbCommunityAdmin, <span class="variable language_">self</span>).formfield_for_foreignkey(db_field, request, **kwargs)</span><br></pre></td></tr></table></figure><pre><code>formfield_for_foreignkey该方法和其他方法（delete model ,save_model()方法一样，都市django 内置的db_field.name == &quot;sort_id&quot;:设置数据字段，也就是外键kwargs[&quot;queryset&quot;] = Tags.objects.filter(user=request.user)定义过滤方案</code></pre></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;tip cogs&quot;&gt;&lt;p&gt;书写前言&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;我是好文章的搬运工，完全照搬B站一位up主叫“一写代码就开心”的文章，欢迎大家去关注。&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>django如何使用github当做项目图床</title>
    <link href="https://daoxuan.cc/posts/55622/"/>
    <id>https://daoxuan.cc/posts/55622/</id>
    <published>2023-05-20T16:18:18.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><blockquote><p>前段时间被打了，导致图床寄了，索性用github当做图床防止再次欠费</p><p>之前用的七牛云（害）</p></blockquote><div class="tip cogs"><p>书写前言</p></div><blockquote><p>亏损了大概一千元，家人谁懂啊</p></blockquote><h1 id="配置跨域"><a href="#配置跨域" class="headerlink" title="配置跨域"></a>配置跨域</h1><p>django需要调用github的api进行传照片， 所以要配置跨域</p><p>这个是在settings文件里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &#x27;corsheaders&#x27;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    &#x27;django.middleware.common.CommonMiddleware&#x27;,</span><br><span class="line">    &#x27;corsheaders.middleware.CorsMiddleware&#x27;,</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>views.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">def save_to_github(filename, content):</span><br><span class="line">    url = f&quot;&#123;settings.GITHUB_API_URL&#125;/repos/&#123;settings.GITHUB_OWNER&#125;/&#123;settings.GITHUB_REPO&#125;/contents/&#123;filename&#125;&quot;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &#x27;Authorization&#x27;: f&#x27;token &#123;settings.GITHUB_TOKEN&#125;&#x27;,</span><br><span class="line">        &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        &#x27;message&#x27;: f&#x27;Add &#123;filename&#125;&#x27;,</span><br><span class="line">        &#x27;content&#x27;: content,</span><br><span class="line">        &#x27;branch&#x27;: settings.GITHUB_BRANCH</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.put(url, headers=headers, json=data)</span><br><span class="line">    if response.status_code == 201:</span><br><span class="line">        return True</span><br><span class="line">    return False</span><br><span class="line">    </span><br><span class="line">@method_decorator(csrf_exempt, name=&#x27;dispatch&#x27;)</span><br><span class="line">class UploadImageAPIView(APIView):</span><br><span class="line">    def post(self, request):</span><br><span class="line">        if request.FILES:</span><br><span class="line">            image_file = request.FILES.get(&#x27;image&#x27;)</span><br><span class="line">            file_format = image_file.name.split(&#x27;.&#x27;)[-1]</span><br><span class="line">            filename = &#x27;ouchelper/&#x27; + f&#x27;&#123;uuid1().hex&#125;.&#123;file_format&#125;&#x27;</span><br><span class="line">            content = base64.b64encode(image_file.file.read()).decode(&#x27;utf-8&#x27;)</span><br><span class="line">            if save_to_github(filename, content):</span><br><span class="line">                # image_url = f&quot;https://raw.githubusercontent.com/&#123;settings.GITHUB_OWNER&#125;/&#123;settings.GITHUB_REPO&#125;/&#123;settings.GITHUB_BRANCH&#125;/&#123;filename&#125;&quot;</span><br><span class="line">                image_url = f&quot;https://picture.daoxuan.cc/&#123;filename&#125;&quot;</span><br><span class="line">                data = &#123;</span><br><span class="line">                    &#x27;success&#x27;: True,</span><br><span class="line">                    &#x27;url&#x27;: image_url,</span><br><span class="line">                &#125;</span><br><span class="line">                return Response(data)</span><br><span class="line">            else:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    &#x27;success&#x27;: False,</span><br><span class="line">                    &#x27;message&#x27;: &#x27;Failed to upload image&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">                return Response(data)</span><br><span class="line">        else:</span><br><span class="line">            data = &#123;</span><br><span class="line">                &#x27;success&#x27;: False,</span><br><span class="line">                &#x27;message&#x27;: &#x27;Unsupported file format&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">            return Response(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>函数大概就是这个样子GITHUB_API_URL、GITHUB_OWNER、GITHUB_REPO都放在settings里面</p><p>GITHUB_TOKEN是token，怎么申请可以在网上搜索教程，正常的url应该是image_url = f”<a href="https://raw.githubusercontent.com/{settings.GITHUB_OWNER}/{settings.GITHUB_REPO}/{settings.GITHUB_BRANCH}/{filename}&quot;这样的,只不过我使用cloudfare的worker代理了一下，所以绑定自己的域名进行访问了。">https://raw.githubusercontent.com/{settings.GITHUB_OWNER}/{settings.GITHUB_REPO}/{settings.GITHUB_BRANCH}/{filename}&quot;这样的,只不过我使用cloudfare的worker代理了一下，所以绑定自己的域名进行访问了。</a></p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;前段时间被打了，导致图床寄了，索性用github当做图床防止再次欠费&lt;/p&gt;
&lt;p&gt;之前用的七牛云（害）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tip cogs&quot;&gt;</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>使用宝塔面板部署django项目</title>
    <link href="https://daoxuan.cc/posts/20868/"/>
    <id>https://daoxuan.cc/posts/20868/</id>
    <published>2023-04-17T13:58:21.000Z</published>
    <updated>2024-12-08T16:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="使用宝塔面板部署django项目"><a href="#使用宝塔面板部署django项目" class="headerlink" title="使用宝塔面板部署django项目"></a>使用宝塔面板部署django项目</h1><div class="tip cogs"><p>非常emo</p></div><p>爱特程序部现在只剩下三人，为了方便程序部成员使用，写一篇关于部署的教程</p><blockquote><p>欢迎加入爱特工作室</p></blockquote><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote><p>我使用的服务器是腾讯云服务器，什么服务器倒是无所谓，只需要根据官方文档和你的服务器使用的系统安装宝塔面板即可。</p></blockquote><p>这个是宝塔官网<a href="https://www.bt.cn/new/index.html">宝塔面板 - 简单好用的Linux/Windows服务器运维管理面板 (bt.cn)</a>网上一搜就有其实。</p><h2 id="登录改密"><a href="#登录改密" class="headerlink" title="登录改密"></a>登录改密</h2><p><img src="http://picture.daoxuan.cc/image/202304172157280.png" alt="image-20230417185210940"></p><blockquote><p>安装完之后会显示网址，那个网址一定要记住，访问之后的界面是这样的，用服务器返回给你的账号密码进行登录</p></blockquote><p>当然，因为那个账号密码用起来很不方便可以在登录时候进行改密。</p><blockquote><p>第一次进入之后安装提示会安装一些东西，我们安装体量小的那个。</p></blockquote><p><img src="http://picture.daoxuan.cc/image/202304172157735.png" alt="image-20230417202220060"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>进入软件商店下载Python项目管理器，在Python管理器中需要下载Python</p><blockquote><p>有一些东西需要下载我记不全。</p></blockquote><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>点击添加数据库，编码utf-8其他的可以和自己本地的一样（这样就不用调settings的设置了）</p><blockquote><p>需要核对一下自己settings里面的数据库设置和自己添加的数据库需要一致。</p></blockquote><p>创建完数据库时候就可以点击导入，然后导入本地的数据库包（.sql）</p><h2 id="在本地生成依赖文件"><a href="#在本地生成依赖文件" class="headerlink" title="在本地生成依赖文件"></a>在本地生成依赖文件</h2><p><code>pip freeze &gt; requirements.txt</code>输入这个命令生成依赖文件<code>requirements.txt</code>查看该文件中的依赖是不是自己这个项目用的，不是的话自己debug，然后改一下依赖的编码格式为utf-8,防止识别不到。</p><h2 id="上传项目压缩包"><a href="#上传项目压缩包" class="headerlink" title="上传项目压缩包"></a>上传项目压缩包</h2><p>上传项目压缩包到/www/wwwroot这个目录下面进行解压（其实到哪里无所谓，习惯上放这里）</p><h2 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h2><p>打开之前下载好的Python项目管理器，点击添加项目。路径选择刚刚导入的文件夹，框架选择django，启动方式选择gunicorn，选择一个没有被占用过的端口比如9000；8088之类的，点击安装模块依赖，开机启动，之后就可以点击确定了。</p><blockquote><p>下载完成之后打开项目日志，查看有没有bug，有报错的话可能是依赖包缺少，自行查看下载。</p><p>到这里需要保证数据库的配置是正确的，而且settings有一句这个ALLOWED_HOSTS = []给他改成ALLOWED_HOSTS = [“*”]</p></blockquote><p>然后在Python项目管理器里点击映射，有自己域名的映射自己为这个项目起的域名，没有的话把服务器地址写一下。</p><p>到这里就成功了</p><h2 id="需要自行完善的地方"><a href="#需要自行完善的地方" class="headerlink" title="需要自行完善的地方"></a>需要自行完善的地方</h2><ol><li><p>项目部署的时候设置了端口，这个需要在宝塔面板的”安全“那里，和服务器的“防火墙”那里把你添加的端口放行一下。</p></li><li><p>域名的ssl证书自行配置。</p></li><li><p>数据库的文件可以在Navicat里面按照下图进行导出</p></li></ol><p><img src="http://picture.daoxuan.cc/image/202304172157907.png" alt="image-20230417214005276"></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;使用宝塔面板部署django项目&quot;&gt;&lt;a href=&quot;#使用宝塔面板部署django项目&quot; class=&quot;headerlink&quot; title=&quot;使用宝塔面板部署django项目&quot;&gt;&lt;/a&gt;使用宝塔面板部</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>大英散记</title>
    <link href="https://daoxuan.cc/posts/64429/"/>
    <id>https://daoxuan.cc/posts/64429/</id>
    <published>2023-04-16T08:05:39.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><details class="folding-tag" ><summary> 大英2unit1 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英文</th></tr></thead><tbody><tr><td>烟雾</td><td><psw>haze</psw></td></tr><tr><td>大麻</td><td><psw>marijuana</psw></td></tr><tr><td>饶有兴味的</td><td><psw>stimulating</psw></td></tr><tr><td>（被视为某个经济体的）国家</td><td><psw>economy</psw></td></tr><tr><td>（大学的）校园</td><td><psw>campus</psw></td></tr><tr><td>示威（活动）</td><td><psw>demonstration</psw></td></tr><tr><td>激进主义</td><td><psw>radicalism</psw></td></tr><tr><td>（美国）州长</td><td><psw>governor</psw></td></tr><tr><td>持不同政见的</td><td><psw>dissident</psw></td></tr><tr><td>思想开明的人</td><td><psw>liberal</psw></td></tr><tr><td>冲突</td><td><psw>clash</psw></td></tr><tr><td>统治集团；建立</td><td><psw>establishment</psw></td></tr><tr><td>情感强烈的</td><td><psw>passionate</psw></td></tr><tr><td>抗议</td><td><psw>protest</psw></td></tr><tr><td>结盟</td><td><psw>alliance</psw></td></tr><tr><td>发起；开始；发动</td><td><psw>launch</psw></td></tr><tr><td>终于</td><td><psw>ultimately</psw></td></tr><tr><td>辞职</td><td><psw>resignation</psw></td></tr><tr><td>激进主义；行动主义</td><td><psw>activism</psw></td></tr><tr><td>成为···的特征</td><td><psw>characterize</psw></td></tr><tr><td>独立公司制作的</td><td><psw>indie</psw></td></tr><tr><td>令人觉得自由的</td><td><psw>liberating</psw></td></tr><tr><td>创造的</td><td><psw>creative</psw></td></tr><tr><td>觉醒；认识；意识</td><td><psw>awakening</psw></td></tr><tr><td>首要的；最重要的</td><td><psw>prime</psw></td></tr><tr><td>愤世嫉俗的；认为人皆自私者</td><td><psw>cynic</psw></td></tr><tr><td>漠然的</td><td><psw>apathetic</psw></td></tr><tr><td>令人陶醉的</td><td><psw>heady</psw></td></tr><tr><td>因素</td><td><psw>factor</psw></td></tr><tr><td>递降地</td><td><psw>descending</psw></td></tr><tr><td>就业；在职</td><td><psw>employment</psw></td></tr><tr><td>胜算；成功的可能性</td><td><psw>prospect</psw></td></tr><tr><td>支付得起</td><td><psw>affordability</psw></td></tr><tr><td>（值得关注的）问题</td><td><psw>issue</psw></td></tr><tr><td>可获得性</td><td><psw>accessibility</psw></td></tr><tr><td>机会</td><td><psw>opportunity</psw></td></tr><tr><td>关系极为密切的</td><td><psw>umbilically</psw></td></tr><tr><td>费解的</td><td><psw>obscure</psw></td></tr><tr><td>极乐</td><td><psw>bliss</psw></td></tr><tr><td>使（组织，活动）难以继续；使某人屈服</td><td><psw>bring sb./sth to their knees</psw></td></tr><tr><td>引起某事（尤指令人不快或出乎意料的事）</td><td><psw>give rise to sth</psw></td></tr><tr><td>与···结盟</td><td><psw>form an alliance with</psw></td></tr><tr><td>引起；导致；造成</td><td><psw>bring about</psw></td></tr><tr><td>不管</td><td><psw>in spite of</psw></td></tr><tr><td>（使）不碰； （使）不靠近</td><td><psw>keep off</psw></td></tr><tr><td>退出活动；退学；退出比赛</td><td><psw>drop out</psw></td></tr><tr><td>递降地</td><td><psw>in descending order</psw></td></tr><tr><td>本质上；本身；就本身而言</td><td><psw>in / of itself</psw></td></tr><tr><td>依靠；依赖</td><td><psw>rely on</psw></td></tr><tr><td>开办；设立</td><td><psw>set up</psw></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" ><summary> 英译汉 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>英文</th><th>翻译</th></tr></thead><tbody><tr><td>get the hang of it</td><td><psw>掌握窍门</psw></td></tr><tr><td>sponsorship</td><td><psw>奖学金</psw></td></tr><tr><td>haze</td><td><psw>烟雾</psw></td></tr><tr><td>marijuana</td><td><psw>大麻</psw></td></tr><tr><td>stimulating</td><td><psw>饶有兴味的</psw></td></tr><tr><td>economy</td><td><psw>（被视为某个经济实体的国家）</psw></td></tr><tr><td>campus</td><td><psw>校园</psw></td></tr><tr><td>demonstration</td><td><psw>示威活动</psw></td></tr><tr><td>radicalism</td><td><psw>激进主义</psw></td></tr><tr><td>governor</td><td><psw>州长</psw></td></tr><tr><td>dissident</td><td><psw>持不同政见的</psw></td></tr><tr><td>liberal</td><td><psw>思想开明的人</psw></td></tr><tr><td>clash</td><td><psw>冲突</psw></td></tr><tr><td>establishment</td><td><psw>建设；统治集团</psw></td></tr><tr><td>passionate</td><td><psw>激昂的</psw></td></tr><tr><td>protest</td><td><psw>抗议</psw></td></tr><tr><td>alliance</td><td><psw>结盟</psw></td></tr><tr><td>launch</td><td><psw>发起</psw></td></tr><tr><td>ultimately</td><td><psw>最终</psw></td></tr><tr><td>resignation</td><td><psw>辞职</psw></td></tr><tr><td>activism</td><td><psw>行动主义</psw></td></tr><tr><td>characterize</td><td><psw>成为···的特征</psw></td></tr><tr><td>indie</td><td><psw>独立公司制作的</psw></td></tr><tr><td>liberating</td><td><psw>令人觉得自由的</psw></td></tr><tr><td>creative</td><td><psw>有创造性的</psw></td></tr><tr><td>awakening</td><td><psw>觉醒</psw></td></tr><tr><td>prime</td><td><psw>首要的</psw></td></tr><tr><td>prison</td><td><psw>监狱</psw></td></tr><tr><td>cynic</td><td><psw>愤世嫉俗的人</psw></td></tr><tr><td>apathetic</td><td><psw>漠然的</psw></td></tr><tr><td>heady</td><td><psw>令人陶醉的</psw></td></tr><tr><td>factor</td><td><psw>因素</psw></td></tr><tr><td>descending</td><td><psw>递降的</psw></td></tr><tr><td>employment</td><td><psw>就业</psw></td></tr><tr><td>prospect</td><td><psw>成功的可能性</psw></td></tr><tr><td>affordability</td><td><psw>支付得起</psw></td></tr><tr><td>issue</td><td><psw>（值得关注的问题）</psw></td></tr><tr><td>accessibility</td><td><psw>可获得性</psw></td></tr><tr><td>opportunity</td><td><psw>机会</psw></td></tr><tr><td>umbilically</td><td><psw>关系极为密切的</psw></td></tr><tr><td>obscure</td><td><psw>费解的</psw></td></tr><tr><td>bliss</td><td><psw>极乐</psw></td></tr><tr><td>bring sb./sth to their knees</td><td><psw>迫使某人屈服</psw></td></tr><tr><td>give rise to sth</td><td><psw>引起某事（尤指令人不快或出人意料的事）</psw></td></tr><tr><td>form an alliance with</td><td><psw>与···结盟</psw></td></tr><tr><td>bring about</td><td><psw>引起</psw></td></tr><tr><td>in spite of</td><td><psw>不管</psw></td></tr><tr><td>keep off</td><td><psw>（使）不碰</psw></td></tr><tr><td>drop out</td><td><psw>退学；退出活动</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> 大英二 unit2 2-1 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英文</th></tr></thead><tbody><tr><td>过时的；老式的</td><td><psw>old-fishioned</psw></td></tr><tr><td>粗壮的；肥胖的</td><td><psw>bulky</psw></td></tr><tr><td>哀痛</td><td><psw>mourning</psw></td></tr><tr><td>提起；举起</td><td><psw>hoist</psw></td></tr><tr><td>无定形的</td><td><psw>shapeless</psw></td></tr><tr><td>捆；束；包</td><td><psw>bundle</psw></td></tr><tr><td>气喘吁吁</td><td><psw>puff</psw></td></tr><tr><td>呻吟</td><td><psw>moan</psw></td></tr><tr><td>紧张的;担心的；忧虑的</td><td><psw>uneasy</psw></td></tr><tr><td>引起</td><td><psw>arouse</psw></td></tr><tr><td>敢说；大胆表示</td><td><psw>venture</psw></td></tr><tr><td>过度的；过分的</td><td><psw>excessive</psw></td></tr><tr><td>家长的</td><td><psw>parental</psw></td></tr><tr><td>在···之中</td><td><psw>amongst</psw></td></tr><tr><td>安慰</td><td><psw>console</psw></td></tr><tr><td>苦恼；悲伤；忧虑</td><td><psw>distress</psw></td></tr><tr><td>布满血丝的</td><td><psw>bloodshot</psw></td></tr><tr><td>大口喘气</td><td><psw>pant</psw></td></tr><tr><td>鼓起的</td><td><psw>bulging</psw></td></tr><tr><td>喷出</td><td><psw>spurt</psw></td></tr><tr><td>内心的；个人的；隐秘的</td><td><psw>inner</psw></td></tr><tr><td>不受控制的</td><td><psw>uncontrolled</psw></td></tr><tr><td>精力；干劲</td><td><psw>vitality</psw></td></tr><tr><td>（使）变虚弱</td><td><psw>weaken</psw></td></tr><tr><td>反驳；回嘴</td><td><psw>retort</psw></td></tr><tr><td>鹿毛色；浅黄褐色</td><td><psw></psw></td></tr><tr><td>黑紫色的</td><td><psw>livid</psw></td></tr><tr><td>含水的</td><td><psw>watery</psw></td></tr><tr><td>静止的；一动不动的</td><td><psw>motionless</psw></td></tr><tr><td>尖锐的；刺耳的</td><td><psw>shrill</psw></td></tr><tr><td>啜泣；呜咽</td><td><psw>sob</psw></td></tr><tr><td>很可能的</td><td><psw>probable</psw></td></tr><tr><td>使震惊；使大吃一惊</td><td><psw>stun</psw></td></tr><tr><td>（肌肉）紧缩</td><td><psw>contract</psw></td></tr><tr><td>使变形</td><td><psw>distort</psw></td></tr><tr><td>夺走</td><td><psw>snatch</psw></td></tr><tr><td>匆忙；仓促</td><td><psw>haste</psw></td></tr><tr><td>令人痛苦的</td><td><psw>harrowing</psw></td></tr><tr><td>控制不住的</td><td><psw>uncontrollable</psw></td></tr><tr><td>拿走；带走</td><td><psw>take away</psw></td></tr><tr><td>为···送行</td><td><psw>see off</psw></td></tr><tr><td>使某事结束</td><td><psw>give an end to sth</psw></td></tr><tr><td>上升</td><td><psw>rise up</psw></td></tr><tr><td>匆忙地</td><td><psw>in haste</psw></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" ><summary> 英译汉 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>英文</th><th>汉意</th></tr></thead><tbody><tr><td>old-fashioned</td><td><psw>过时的</psw></td></tr><tr><td>bulky</td><td><psw>粗壮的</psw></td></tr><tr><td>mourning</td><td><psw>哀痛</psw></td></tr><tr><td>hoist</td><td><psw>举起</psw></td></tr><tr><td>shapeless</td><td><psw>无形的</psw></td></tr><tr><td>bundle</td><td><psw>捆</psw></td></tr><tr><td>puff</td><td><psw>气喘吁吁</psw></td></tr><tr><td>moan</td><td><psw>呻吟</psw></td></tr><tr><td>uneasy</td><td><psw>焦虑的</psw></td></tr><tr><td>arouse</td><td><psw>激起</psw></td></tr><tr><td>venture</td><td><psw>敢说</psw></td></tr><tr><td>excessive</td><td><psw>过分的</psw></td></tr><tr><td>parental</td><td><psw>家长的</psw></td></tr><tr><td>amongst</td><td><psw>在···之间</psw></td></tr><tr><td>console</td><td><psw>安慰</psw></td></tr><tr><td>distress</td><td><psw>苦恼</psw></td></tr><tr><td>bloodshot</td><td><psw>充满血丝的</psw></td></tr><tr><td>pant</td><td><psw>气喘吁吁</psw></td></tr><tr><td>bulging</td><td><psw>鼓起的</psw></td></tr><tr><td>spurt</td><td><psw>喷出</psw></td></tr><tr><td>inner</td><td><psw>内心的</psw></td></tr><tr><td>uncontrolled</td><td><psw>无法控制的</psw></td></tr><tr><td>vitality</td><td><psw>精力</psw></td></tr><tr><td>weaken</td><td><psw>变虚弱</psw></td></tr><tr><td>retort</td><td><psw>回嘴</psw></td></tr><tr><td>fawn</td><td><psw>鹿毛色</psw></td></tr><tr><td>livid</td><td><psw>黑紫色</psw></td></tr><tr><td>watery</td><td><psw>含水的</psw></td></tr><tr><td>motionless</td><td><psw>不动的</psw></td></tr><tr><td>shrill</td><td><psw>尖锐的</psw></td></tr><tr><td>sob</td><td><psw>啜泣</psw></td></tr><tr><td>probable</td><td><psw>可能</psw></td></tr><tr><td>stun</td><td><psw>震惊</psw></td></tr><tr><td>contract</td><td><psw>紧缩</psw></td></tr><tr><td>distort</td><td><psw>使失真</psw></td></tr><tr><td>snatch</td><td><psw>夺走</psw></td></tr><tr><td>haste</td><td><psw>匆匆</psw></td></tr><tr><td>harrowing</td><td><psw>可怕的</psw></td></tr><tr><td>uncontrollable</td><td><psw>控制不住的</psw></td></tr><tr><td>take away</td><td><psw>拿走</psw></td></tr><tr><td>see off</td><td><psw>为···送行</psw></td></tr><tr><td>put an end to sth</td><td><psw>使某事结束</psw></td></tr><tr><td>rise up</td><td><psw>上升</psw></td></tr><tr><td>in haste</td><td><psw>急忙地</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> 大英二 unit2 2-2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 英译汉 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>英语</th><th>汉意</th></tr></thead><tbody><tr><td>empathy</td><td><psw>同情</psw></td></tr><tr><td>crawl</td><td><psw>爬</psw></td></tr><tr><td>teddy</td><td><psw>泰迪熊</psw></td></tr><tr><td>retrieve</td><td><psw>收回</psw></td></tr><tr><td>trace</td><td><psw>追究</psw></td></tr><tr><td>infancy</td><td><psw>婴儿期</psw></td></tr><tr><td>virtually</td><td><psw>实际上</psw></td></tr><tr><td>infant</td><td><psw>婴儿</psw></td></tr><tr><td>response</td><td><psw>回应</psw></td></tr><tr><td>precursor</td><td><psw>先兆</psw></td></tr><tr><td>cursor</td><td><psw>光标</psw></td></tr><tr><td>developmental</td><td><psw>成长的</psw></td></tr><tr><td>sympathetic</td><td><psw>同情的</psw></td></tr><tr><td>disturbance</td><td><psw>干扰</psw></td></tr><tr><td>misery</td><td><psw>痛苦</psw></td></tr><tr><td>confusion</td><td><psw>困惑</psw></td></tr><tr><td>imitate</td><td><psw>模仿</psw></td></tr><tr><td>comprehend</td><td><psw>理解</psw></td></tr><tr><td>mimicry</td><td><psw>模仿能力</psw></td></tr><tr><td>imitation</td><td><psw>模仿</psw></td></tr><tr><td>evoke</td><td><psw>使人想起</psw></td></tr><tr><td>distinct</td><td><psw>有区别的</psw></td></tr><tr><td>toddler</td><td><psw>学步的小孩</psw></td></tr><tr><td>repertoire</td><td><psw>全部技能</psw></td></tr><tr><td>cookie</td><td><psw>饼干</psw></td></tr><tr><td>stroke</td><td><psw>抚摸</psw></td></tr><tr><td>strike</td><td><psw>撞击</psw></td></tr><tr><td>pat</td><td><psw>轻拍</psw></td></tr><tr><td>diverge</td><td><psw>出现分歧</psw></td></tr><tr><td>sensitivity</td><td><psw>敏感</psw></td></tr><tr><td>keenly</td><td><psw>强烈的</psw></td></tr><tr><td>empathic</td><td><psw>有同感的</psw></td></tr><tr><td>discipline</td><td><psw>惩罚</psw></td></tr><tr><td>misbehaviour</td><td><psw>不良举止</psw></td></tr><tr><td>naughty</td><td><psw>淘气的</psw></td></tr><tr><td>apart from</td><td><psw>与···分离</psw></td></tr><tr><td>stem from</td><td><psw>源于</psw></td></tr><tr><td>pull away</td><td><psw>闪避；加速超过；开走</psw></td></tr><tr><td>calm down</td><td><psw>镇静下来</psw></td></tr><tr><td>tune out</td><td><psw>不注意</psw></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" ><summary> 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英语</th></tr></thead><tbody><tr><td>同感</td><td><psw>empathy</psw></td></tr><tr><td>爬</td><td><psw>crawl</psw></td></tr><tr><td>泰迪熊</td><td><psw>teddy</psw></td></tr><tr><td>收回；取回；重新找回</td><td><psw>retrieve</psw></td></tr><tr><td>追究；追溯</td><td><psw>trace</psw></td></tr><tr><td>婴儿期</td><td><psw>infancy</psw></td></tr><tr><td>差不多;实际上</td><td><psw>virtually</psw></td></tr><tr><td>婴儿</td><td><psw>infant</psw></td></tr><tr><td>反应；回应；响应</td><td><psw>response</psw></td></tr><tr><td>先兆</td><td><psw>percursor</psw></td></tr><tr><td>成长的</td><td><psw>developmental</psw></td></tr><tr><td>同情的</td><td><psw>sympathetic</psw></td></tr><tr><td>干扰</td><td><psw>disturbance</psw></td></tr><tr><td>苦恼</td><td><psw>misery</psw></td></tr><tr><td>混淆；错认</td><td><psw>confusion</psw></td></tr><tr><td>模仿</td><td><psw>imitate</psw></td></tr><tr><td>理解；领会</td><td><psw>comprehend</psw></td></tr><tr><td>模仿；模仿能力</td><td><psw>mimicry</psw></td></tr><tr><td>模仿</td><td><psw>imitation</psw></td></tr><tr><td>使人想起；唤起</td><td><psw>evoke</psw></td></tr><tr><td>有区别的</td><td><psw>distinct</psw></td></tr><tr><td>学步的小孩</td><td><psw>toddler</psw></td></tr><tr><td>全部技能（或才能）</td><td><psw>repertoire</psw></td></tr><tr><td>小甜饼；曲奇饼</td><td><psw>cookie</psw></td></tr><tr><td>轻抚；抚摸</td><td><psw>stroke</psw></td></tr><tr><td>平拍</td><td><psw>pat</psw></td></tr><tr><td>相异</td><td><psw>diverge</psw></td></tr><tr><td>敏感</td><td><psw>sensitivity</psw></td></tr><tr><td>强烈地</td><td><psw>keenly</psw></td></tr><tr><td>有同感的</td><td><psw>empathic</psw></td></tr><tr><td>惩罚</td><td><psw>discipline</psw></td></tr><tr><td>不良行为</td><td><psw>misbehavior</psw></td></tr><tr><td>淘气的</td><td><psw>naughty</psw></td></tr><tr><td>除···之外</td><td><psw>apart from</psw></td></tr><tr><td>源于</td><td><psw>stem from</psw></td></tr><tr><td>闪避；加速超过；走开</td><td><psw>pull away</psw></td></tr><tr><td>平静下来</td><td><psw>clam down</psw></td></tr><tr><td>不注意；不理睬；不过问</td><td><psw>tune out</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> 大英二 unit3 3-1 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 英译汉 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>英文</th><th>汉意</th></tr></thead><tbody><tr><td>teammate</td><td><psw>队友</psw></td></tr><tr><td>collide</td><td><psw>出现矛盾</psw></td></tr><tr><td>tournament</td><td><psw>锦标赛</psw></td></tr><tr><td>clue</td><td><psw>线索</psw></td></tr><tr><td>pitch</td><td><psw>场所</psw></td></tr><tr><td>madly</td><td><psw>疯狂地</psw></td></tr><tr><td>sheer</td><td><psw>全然的</psw></td></tr><tr><td>hum</td><td><psw>哼</psw></td></tr><tr><td>mournful</td><td><psw>悲痛的</psw></td></tr><tr><td>reminiscent</td><td><psw>回忆往事的</psw></td></tr><tr><td>chorus</td><td><psw>合唱曲</psw></td></tr><tr><td>stand-off</td><td><psw>（战斗的）僵持（状态）</psw></td></tr><tr><td>suspense</td><td><psw>焦虑；悬念</psw></td></tr><tr><td>newcomer</td><td><psw>新手</psw></td></tr><tr><td>mostly</td><td><psw>大多数的</psw></td></tr><tr><td>whack</td><td><psw>重击</psw></td></tr><tr><td>cranium</td><td><psw>头颅</psw></td></tr><tr><td>accidentally</td><td><psw>偶然地</psw></td></tr><tr><td>random</td><td><psw>任意的</psw></td></tr><tr><td>defender</td><td><psw>防守人员</psw></td></tr><tr><td>illustration</td><td><psw>实例</psw></td></tr><tr><td>soar</td><td><psw>猛升</psw></td></tr><tr><td>hairy</td><td><psw>多毛的</psw></td></tr><tr><td>shooter</td><td><psw>射手</psw></td></tr><tr><td>striker</td><td><psw>前锋</psw></td></tr><tr><td>peel</td><td><psw>削···皮</psw></td></tr><tr><td>sprint</td><td><psw>冲刺</psw></td></tr><tr><td>resume</td><td><psw>重新开始</psw></td></tr><tr><td>precision</td><td><psw>精确的</psw></td></tr><tr><td>priority</td><td><psw>优先考虑的事</psw></td></tr><tr><td>periodically</td><td><psw>阶段性的</psw></td></tr><tr><td>writhe</td><td><psw>扭动身体</psw></td></tr><tr><td>massage</td><td><psw>给···按摩</psw></td></tr><tr><td>message</td><td><psw>信息</psw></td></tr><tr><td>phony</td><td><psw>假冒的</psw></td></tr><tr><td>baloney</td><td><psw>胡说八道</psw></td></tr><tr><td>reprimand</td><td><psw>训斥</psw></td></tr><tr><td>strategy</td><td><psw>策略</psw></td></tr><tr><td>mystery</td><td><psw>不可思议的事务</psw></td></tr><tr><td>offside</td><td><psw>越位</psw></td></tr><tr><td>deem</td><td><psw>认为</psw></td></tr><tr><td>roughly</td><td><psw>粗略地</psw></td></tr><tr><td>perplexed</td><td><psw>困惑的</psw></td></tr><tr><td>prefessional</td><td><psw>专业的</psw></td></tr><tr><td>interpretation</td><td><psw>解释</psw></td></tr><tr><td>touchdown</td><td><psw>持球过底线</psw></td></tr><tr><td>referee</td><td><psw>裁判员</psw></td></tr><tr><td>responsible</td><td><psw>负责的</psw></td></tr><tr><td>hopped-up</td><td><psw>兴奋的</psw></td></tr><tr><td>backtalk</td><td><psw>顶嘴</psw></td></tr><tr><td>infraction</td><td><psw>违法</psw></td></tr><tr><td>punch</td><td><psw>揍</psw></td></tr><tr><td>flock</td><td><psw>群集</psw></td></tr><tr><td>blow the whistle on sth</td><td><psw>告发</psw></td></tr><tr><td>back and forth</td><td><psw>来回地</psw></td></tr><tr><td>tend to do</td><td><psw>倾向于做某事</psw></td></tr><tr><td>put a good face on sth</td><td><psw>掩饰某事物</psw></td></tr><tr><td>by chance</td><td><psw>偶然</psw></td></tr><tr><td>off course</td><td><psw>偏离航道</psw></td></tr><tr><td>take the credit for sth</td><td><psw>把···归功于自己</psw></td></tr><tr><td>peel off</td><td><psw>脱去</psw></td></tr><tr><td>tick away</td><td><psw>（时间）滴滴答答地过去</psw></td></tr><tr><td>at a loss for words</td><td><psw>不知道说什么好</psw></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" ><summary> 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英语</th></tr></thead><tbody><tr><td>队友；同队队员</td><td><psw>teammate</psw></td></tr><tr><td>出现矛盾；发送冲突</td><td><psw>collide</psw></td></tr><tr><td>锦标赛</td><td><psw>tournament</psw></td></tr><tr><td>线索</td><td><psw>clue</psw></td></tr><tr><td>场所</td><td><psw>pitch</psw></td></tr><tr><td>疯狂地</td><td><psw>madly</psw></td></tr><tr><td>纯粹的；全然的</td><td><psw>sheer</psw></td></tr><tr><td>哼（曲子）</td><td><psw>hum</psw></td></tr><tr><td>悲痛的</td><td><psw>mournful</psw></td></tr><tr><td>追忆往事的</td><td><psw>reminiscent</psw></td></tr><tr><td>合唱曲</td><td><psw>chorus</psw></td></tr><tr><td>（战斗的）僵持（状态）</td><td><psw>stand-off</psw></td></tr><tr><td>焦虑</td><td><psw>suspense</psw></td></tr><tr><td>新手</td><td><psw>newcomer</psw></td></tr><tr><td>通常</td><td><psw>mostly</psw></td></tr><tr><td>重击</td><td><psw>whack</psw></td></tr><tr><td>头颅</td><td><psw>cranium</psw></td></tr><tr><td>偶然地</td><td><psw>accidently</psw></td></tr><tr><td>随机的</td><td><psw>random</psw></td></tr><tr><td>防守人员</td><td><psw>defender</psw></td></tr><tr><td>实例</td><td><psw>illustration</psw></td></tr><tr><td>猛升</td><td><psw>soar</psw></td></tr><tr><td>多毛的</td><td><psw>hairy</psw></td></tr><tr><td>射手</td><td><psw>shooter</psw></td></tr><tr><td>前锋</td><td><psw>striker</psw></td></tr><tr><td>削皮</td><td><psw>peel</psw></td></tr><tr><td>冲刺</td><td><psw>sprint</psw></td></tr><tr><td>重新开始</td><td><psw>resume</psw></td></tr><tr><td>精确的</td><td><psw>precision</psw></td></tr><tr><td>优先考虑的事</td><td><psw>priority</psw></td></tr><tr><td>阶段性地</td><td><psw>periodically</psw></td></tr><tr><td>翻滚</td><td><psw>writhe</psw></td></tr><tr><td>给···按摩</td><td><psw>massage</psw></td></tr><tr><td>伪造的</td><td><psw>phony</psw></td></tr><tr><td>胡说八道</td><td><psw>baloney</psw></td></tr><tr><td>训斥</td><td><psw>reprimend</psw></td></tr><tr><td>策略</td><td><psw>strategy</psw></td></tr><tr><td>不可思议的事物</td><td><psw>mystery</psw></td></tr><tr><td>越位</td><td><psw>offside</psw></td></tr><tr><td>认为</td><td><psw>deem</psw></td></tr><tr><td>粗略地</td><td><psw>roughly</psw></td></tr><tr><td>困惑的</td><td><psw>perplexed</psw></td></tr><tr><td>专业的</td><td><psw>professional</psw></td></tr><tr><td>解释</td><td><psw>interpretation</psw></td></tr><tr><td>持球过底线</td><td><psw>touchdown</psw></td></tr><tr><td>裁判员</td><td><psw>referee</psw></td></tr><tr><td>负责···的</td><td><psw>responsible</psw></td></tr><tr><td>兴奋的</td><td><psw>hopped-up</psw></td></tr><tr><td>顶嘴</td><td><psw>backtalk</psw></td></tr><tr><td>违法</td><td><psw>infraction</psw></td></tr><tr><td>猛击</td><td><psw>punch</psw></td></tr><tr><td>群集</td><td><psw>flock</psw></td></tr><tr><td>告发</td><td><psw>blow the whistle on sth</psw></td></tr><tr><td>来来回回</td><td><psw>back and forth</psw></td></tr><tr><td>倾向于做某事</td><td><psw>tend to do sth</psw></td></tr><tr><td>掩饰某事物</td><td><psw>put a good face on sth</psw></td></tr><tr><td>偶然</td><td><psw>by chance</psw></td></tr><tr><td>偏离航向</td><td><psw>off course</psw></td></tr><tr><td>把···归功于自己</td><td><psw>take the credit for sth</psw></td></tr><tr><td>脱去</td><td><psw>peel off</psw></td></tr><tr><td>时间滴滴答答地过去</td><td><psw>tick away</psw></td></tr><tr><td>不知道说什么好</td><td><psw>at a loss for word</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> 大英二 unit2 3-2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英语</th></tr></thead><tbody><tr><td>轻柔地</td><td><psw>gently</psw></td></tr><tr><td>照亮</td><td><psw>illuminate</psw></td></tr><tr><td>震耳欲聋的</td><td><psw>deafening</psw></td></tr><tr><td>挑逗性地</td><td><psw>tantalisingly</psw></td></tr><tr><td>肾上腺素</td><td><psw>adrenaline</psw></td></tr><tr><td>使人异常高兴的</td><td><psw>exhilarating</psw></td></tr><tr><td>极其恐怖的</td><td><psw>terrifying</psw></td></tr><tr><td>保证</td><td><psw>ensure</psw></td></tr><tr><td>镇定的</td><td><psw>composed</psw></td></tr><tr><td>锦标赛</td><td><psw>championship</psw></td></tr><tr><td>挥动</td><td><psw>flutter</psw></td></tr><tr><td>联合的</td><td><psw>unified</psw></td></tr><tr><td>招致（不快之事）</td><td><psw>incur</psw></td></tr><tr><td>直言不讳的</td><td><psw>vocal</psw></td></tr><tr><td>表演者</td><td><psw>performer</psw></td></tr><tr><td>压力</td><td><psw>strain</psw></td></tr><tr><td>使黯然失色</td><td><psw>eclipse</psw></td></tr><tr><td>筋疲力尽</td><td><psw>exhaustion</psw></td></tr><tr><td>艰苦的</td><td><psw>grueling</psw></td></tr><tr><td>疲劳</td><td><psw>fatigue</psw></td></tr><tr><td>喊叫声</td><td><psw>roar</psw></td></tr><tr><td>激励</td><td><psw>boost</psw></td></tr><tr><td>谢天谢地</td><td><psw>thankfully</psw></td></tr><tr><td>耐力</td><td><psw>stamina</psw></td></tr><tr><td>筋疲力尽的</td><td><psw>exhausted</psw></td></tr><tr><td>记分牌</td><td><psw>scoreboard</psw></td></tr><tr><td>解说</td><td><psw>commentary</psw></td></tr><tr><td>刺痛感</td><td><psw>tingle</psw></td></tr><tr><td>在高处的</td><td><psw>aloft</psw></td></tr><tr><td>大量的某物</td><td><psw>a sea of sth</psw></td></tr><tr><td>排除（干扰）</td><td><psw>shut out</psw></td></tr><tr><td>接手</td><td><psw>take over</psw></td></tr><tr><td>跟上</td><td><psw>keep up with</psw></td></tr><tr><td>渐渐地引向</td><td><psw>lead up to</psw></td></tr><tr><td>忍住</td><td><psw>fight back</psw></td></tr><tr><td>领跑</td><td><psw>set the pace</psw></td></tr><tr><td>坚守</td><td><psw>hold out</psw></td></tr><tr><td>倒数</td><td><psw>count down</psw></td></tr><tr><td>考虑到某事物</td><td><psw>bear sth in mind</psw></td></tr><tr><td>成功</td><td><psw>make it</psw></td></tr><tr><td>错过机会</td><td><psw>miss out</psw></td></tr><tr><td>感觉；觉得</td><td><psw>feel like</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> 大英二 unit4 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 4-1 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英文</th></tr></thead><tbody><tr><td>令人钦佩地</td><td><psw>impressively</psw></td></tr><tr><td>令人难忘；令人注目</td><td><psw>impressiveness</psw></td></tr><tr><td>习惯性的</td><td><psw>habitual</psw></td></tr><tr><td>寒冷的</td><td><psw>chilly</psw></td></tr><tr><td>一阵强风</td><td><psw>gust</psw></td></tr><tr><td>转动</td><td><psw>twirl</psw></td></tr><tr><td>复杂精细的</td><td><psw>intricate</psw></td></tr><tr><td>巧妙的</td><td><psw>artful</psw></td></tr><tr><td>警觉地</td><td><psw>watchful</psw></td></tr><tr><td>向下</td><td><psw>adown</psw></td></tr><tr><td>温和的</td><td><psw>pacific</psw></td></tr><tr><td>主干道</td><td><psw>thoroughfare</psw></td></tr><tr><td>强健的</td><td><psw>stalwart</psw></td></tr><tr><td>昂首阔步</td><td><psw>swagger</psw></td></tr><tr><td>看守者</td><td><psw>guardian</psw></td></tr><tr><td>附近</td><td><psw>vicinity</psw></td></tr><tr><td>在中间（的）</td><td><psw>midway</psw></td></tr><tr><td>门道</td><td><psw>doorway</psw></td></tr><tr><td>黑暗</td><td><psw>darkened</psw></td></tr><tr><td>金属器具</td><td><psw>hardware</psw></td></tr><tr><td>未点燃的</td><td><psw>unlighted</psw></td></tr><tr><td>令人安心的</td><td><psw>reassuring</psw></td></tr><tr><td>令人安心地</td><td><psw>reassuringly</psw></td></tr><tr><td>伤痕</td><td><psw>scar</psw></td></tr><tr><td>眉毛</td><td><psw>eyebrow</psw></td></tr><tr><td>围巾针</td><td><psw>scarfpin</psw></td></tr><tr><td>好友</td><td><psw>chum</psw></td></tr><tr><td>（尤指说话者喜欢的）男人</td><td><psw>chap</psw></td></tr><tr><td>命运</td><td><psw>destiny</psw></td></tr><tr><td>（需要对付的）事情</td><td><psw>proposition</psw></td></tr><tr><td>赶紧行动</td><td><psw>hustle</psw></td></tr><tr><td>忠实的</td><td><psw>staunch</psw></td></tr><tr><td>缺乏创造力的苦干者</td><td><psw>plodder</psw></td></tr><tr><td>机智</td><td><psw>wits</psw></td></tr><tr><td>剃须刀</td><td><psw>razor</psw></td></tr><tr><td>小雨</td><td><psw>drizzle</psw></td></tr><tr><td>激动的</td><td><psw>astir</psw></td></tr><tr><td>令人忧郁地</td><td><psw>dismally</psw></td></tr><tr><td>荒唐</td><td><psw>absurdity</psw></td></tr><tr><td>怀疑地</td><td><psw>doubtfully</psw></td></tr><tr><td>祈求上帝保佑</td><td><psw>bless</psw></td></tr><tr><td>呼喊</td><td><psw>exclaim</psw></td></tr><tr><td>朋友</td><td><psw>buddy</psw></td></tr><tr><td>一定程度上</td><td><psw>moderately</psw></td></tr><tr><td>自负</td><td><psw>egotism</psw></td></tr><tr><td>湮没</td><td><psw>submerge</psw></td></tr><tr><td>刺眼的光</td><td><psw>glare</psw></td></tr><tr><td>同时地</td><td><psw>simultaneously</psw></td></tr><tr><td>盯视</td><td><psw>gaze</psw></td></tr><tr><td>哈巴狗</td><td><psw>pug</psw></td></tr><tr><td>合理的</td><td><psw>sensible</psw></td></tr><tr><td>巡警</td><td><psw>patrolman</psw></td></tr><tr><td>为了做样子</td><td><psw>for show</psw></td></tr><tr><td>几乎</td><td><psw>well nigh</psw></td></tr><tr><td>失去···的线索</td><td><psw>lose track of</psw></td></tr><tr><td>突然露面</td><td><psw>turn up</psw></td></tr><tr><td>拿出</td><td><psw>pull out</psw></td></tr><tr><td>墨守成规</td><td><psw>in a groove</psw></td></tr><tr><td>拜访</td><td><psw>come around</psw></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" ><summary> 4-2 汉译英 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th>汉意</th><th>英文</th></tr></thead><tbody><tr><td>眉题</td><td><psw>strapline</psw></td></tr><tr><td>欺骗</td><td><psw>deception</psw></td></tr><tr><td>假冒</td><td><psw>impersonate</psw></td></tr><tr><td>伪造</td><td><psw>forge</psw></td></tr><tr><td>伪造罪</td><td><psw>forgery</psw></td></tr><tr><td>虚构的</td><td><psw>fictional</psw></td></tr><tr><td>诈骗犯</td><td><psw>fraudster</psw></td></tr><tr><td>拘留</td><td><psw>custody</psw></td></tr><tr><td>顾问服务公司</td><td><psw>consultancy</psw></td></tr><tr><td>诈骗</td><td><psw>fraud</psw></td></tr><tr><td>聚集点</td><td><psw>pickup</psw></td></tr><tr><td>切碎</td><td><psw>shred</psw></td></tr><tr><td>垃圾</td><td><psw>trash</psw></td></tr><tr><td>一美元</td><td><psw>buck</psw></td></tr><tr><td>匿名的</td><td><psw>anonymous</psw></td></tr><tr><td>思维方式</td><td><psw>mindset</psw></td></tr><tr><td>普通的</td><td><psw>commonplace</psw></td></tr><tr><td>生育高峰期出生的人</td><td><psw>baby boomer</psw></td></tr><tr><td>圆珠笔</td><td><psw>ballpoint</psw></td></tr><tr><td>家庭的</td><td><psw>household</psw></td></tr><tr><td>预防</td><td><psw>precaution</psw></td></tr><tr><td>凝胶</td><td><psw>gel</psw></td></tr><tr><td>非法入侵（他人的计算机系统）</td><td><psw>hack</psw></td></tr><tr><td>钱包</td><td><psw>pocketbook</psw></td></tr><tr><td>记载</td><td><psw>log</psw></td></tr><tr><td>机会主义的</td><td><psw>opportunistic</psw></td></tr><tr><td>取消</td><td><psw>cancel</psw></td></tr><tr><td>偿还</td><td><psw>pay back</psw></td></tr><tr><td>依赖</td><td><psw>count on</psw></td></tr><tr><td>采取预防措施</td><td><psw>take precautions</psw></td></tr><tr><td>快速阅读</td><td><psw>look through</psw></td></tr><tr><td>撕毁</td><td><psw>tear up</psw></td></tr><tr><td>退出</td><td><psw>log off</psw></td></tr></tbody></table></div>              </div>            </details>              </div>            </details></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;details class=&quot;folding-tag&quot; &gt;&lt;summary&gt; 大英2unit1 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
             </summary>
      
    
    
    
    
    <category term="English" scheme="https://daoxuan.cc/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>大英二 unit4 4-1 英译汉</title>
    <link href="https://daoxuan.cc/posts/49711/"/>
    <id>https://daoxuan.cc/posts/49711/</id>
    <published>2023-04-15T07:50:44.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="table-container"><table><thead><tr><th>英文</th><th>汉意</th></tr></thead><tbody><tr><td>impressively</td><td><psw>令人钦佩的；令人印象深刻的</psw></td></tr><tr><td>impressiveness</td><td><psw>令人难忘</psw></td></tr><tr><td>habitual</td><td><psw>习惯的</psw></td></tr><tr><td>chilly</td><td><psw>寒冷的</psw></td></tr><tr><td>gust</td><td><psw>一阵狂风</psw></td></tr><tr><td>twirl</td><td><psw>转动</psw></td></tr><tr><td>intricate</td><td><psw>盘根错节的</psw></td></tr><tr><td>artful</td><td><psw>有技巧的</psw></td></tr><tr><td>watchful</td><td><psw>警惕的</psw></td></tr><tr><td>adown</td><td><psw>向下</psw></td></tr><tr><td>pacific</td><td><psw>平静的</psw></td></tr><tr><td>throughfare</td><td><psw>大道</psw></td></tr><tr><td>stalwart</td><td><psw>强壮的</psw></td></tr><tr><td>swagger</td><td><psw>狂妄自大</psw></td></tr><tr><td>guardian</td><td><psw>看守者</psw></td></tr><tr><td>vivinity</td><td><psw>附近</psw></td></tr><tr><td>midway</td><td><psw>在中间（的）</psw></td></tr><tr><td>doorway</td><td><psw>门</psw></td></tr><tr><td>darkened</td><td><psw>房间暗的</psw></td></tr><tr><td>hardware</td><td><psw>金属器具</psw></td></tr><tr><td>unlighted</td><td><psw>未点燃的</psw></td></tr><tr><td>reassuring</td><td><psw>安慰的</psw></td></tr><tr><td>reassuringly</td><td><psw>安慰地</psw></td></tr><tr><td>scar</td><td><psw>伤疤</psw></td></tr><tr><td>eyebrow</td><td><psw>眉毛</psw></td></tr><tr><td>scarfpin</td><td><psw>围巾针</psw></td></tr><tr><td>chum</td><td><psw>好友</psw></td></tr><tr><td>chap</td><td><psw>家伙</psw></td></tr><tr><td>destiny</td><td><psw>命运</psw></td></tr><tr><td>proposition</td><td><psw>需要兑付的事</psw></td></tr><tr><td>hustle</td><td><psw>赶紧行动</psw></td></tr><tr><td>staunch</td><td><psw>忠实的</psw></td></tr><tr><td>prodder</td><td><psw>缺乏创造力的苦干者</psw></td></tr><tr><td>wits</td><td><psw>机智</psw></td></tr><tr><td>razor</td><td><psw>刮胡刀</psw></td></tr><tr><td>drizzle</td><td><psw>小雨</psw></td></tr><tr><td>astir</td><td><psw>激动地</psw></td></tr><tr><td>dismally</td><td><psw>令人忧郁的</psw></td></tr><tr><td>absurdity</td><td><psw>荒唐</psw></td></tr><tr><td>doubtfully</td><td><psw>怀疑的</psw></td></tr><tr><td>bless</td><td><psw>祈求上帝保佑</psw></td></tr><tr><td>exclaim</td><td><psw>呼喊</psw></td></tr><tr><td>buddy</td><td><psw>朋友</psw></td></tr><tr><td>moderately</td><td><psw>一定程度上</psw></td></tr><tr><td>egotism</td><td><psw>自负</psw></td></tr><tr><td>submerge</td><td><psw>使完全消失</psw></td></tr><tr><td>glare</td><td><psw>耀眼的光</psw></td></tr><tr><td>simultaneously</td><td><psw>同时地</psw></td></tr><tr><td>gaze</td><td><psw>凝视</psw></td></tr><tr><td>pug</td><td><psw>哈巴狗</psw></td></tr><tr><td>sensible</td><td><psw>合理的</psw></td></tr><tr><td>patrolman</td><td><psw>巡警</psw></td></tr><tr><td>for show</td><td><psw>为了作秀</psw></td></tr><tr><td>well nigh</td><td><psw>几乎</psw></td></tr><tr><td>lose track of</td><td><psw>失去···的线索</psw></td></tr><tr><td>turn up</td><td><psw>突然露面或出现</psw></td></tr><tr><td>pull out</td><td><psw>拿出</psw></td></tr><tr><td>in a groove</td><td><psw>一成不变</psw></td></tr><tr><td>come around</td><td><psw>拜访某人的家</psw></td></tr></tbody></table></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;英文&lt;/th&gt;
&lt;th&gt;汉意&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;im</summary>
      
    
    
    
    
    <category term="English" scheme="https://daoxuan.cc/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>创新科技月演讲稿</title>
    <link href="https://daoxuan.cc/posts/46458/"/>
    <id>https://daoxuan.cc/posts/46458/</id>
    <published>2023-04-11T15:53:55.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="介绍部分"><a href="#介绍部分" class="headerlink" title="介绍部分"></a>介绍部分</h1><h2 id="什么是个人博客"><a href="#什么是个人博客" class="headerlink" title="什么是个人博客"></a>什么是个人博客</h2><p>很多人都有自己的分享欲，有些人发动态，有些人发朋友圈，而搭建博客发表文章便是程序员们独有的浪漫。</p><blockquote><p>博客：分享技术，分享生活的地方。</p></blockquote><p><strong>当然此博客并不是像CSDN之类的依附于官方网站的博客，而是自己的网站。</strong></p><h2 id="我的博客主要部分介绍（速度过）"><a href="#我的博客主要部分介绍（速度过）" class="headerlink" title="我的博客主要部分介绍（速度过）"></a>我的博客主要部分介绍（速度过）</h2><p>首先展示默认样式，然后展示我自己的。<a href="https://hexo.io/zh-cn/index.html">官方文档</a></p><h3 id="介绍主要组成部分"><a href="#介绍主要组成部分" class="headerlink" title="介绍主要组成部分"></a>介绍主要组成部分</h3><ul><li>功能类别介绍</li><li>每个功能简单介绍</li><li>文章展示（展示技术文章和生活类文章）</li></ul><h2 id="博客能做什么"><a href="#博客能做什么" class="headerlink" title="博客能做什么"></a>博客能做什么</h2><p>可以在上一步介绍的过程中渗透</p><h1 id="教程部分"><a href="#教程部分" class="headerlink" title="教程部分"></a>教程部分</h1><h2 id="如何搭建"><a href="#如何搭建" class="headerlink" title="如何搭建"></a>如何搭建</h2><p>这里使用别人写好的文章进行讲解<a href="https://blog.csdn.net/weixin_44865458/article/details/122210068?utm_source=pocket_saves">使用 Hexo+GitHub 搭建个人免费博客教程_十九万里的博客-CSDN博客</a></p><h2 id="确定主题"><a href="#确定主题" class="headerlink" title="确定主题"></a>确定主题</h2><p>推荐butterfly，原因：使用的人多，遇到问题方便查询，而且有一堆大佬带路，美化方便。（这里可以展示一下大佬们的主题的魔改）<a href="https://blog.zhheo.com/">张洪Heo - 分享设计与科技生活 (zhheo.com)</a></p><h2 id="如何美化"><a href="#如何美化" class="headerlink" title="如何美化"></a>如何美化</h2><p>首先当然是根据官方配置网址<a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a>进行美化，然后就分为两种情况：</p><ol><li>有前端基础，自己魔改（记得备份）</li><li>纯小白（像我一样），根据大佬们的文章进行魔改（记得备份）</li></ol><blockquote><p>这里给出大佬们合作完成的美化教程<a href="https://butterfly.zhheo.com/">Butterfly主题美化教程 (zhheo.com)</a></p><p>这里找一个示例文章进行演示<a href="https://blog.leonus.cn/2023/collectPage.html">藏宝阁页面的实现 | Leonus</a></p></blockquote><h2 id="如何加速"><a href="#如何加速" class="headerlink" title="如何加速"></a>如何加速</h2><p>简单介绍为什么要加速一下</p><p>简单粗暴的方法是将博客部署到个人服务器。</p><p>其次就是使用国内例如七牛云之类的免费cdn服务。</p><h1 id="文章技巧"><a href="#文章技巧" class="headerlink" title="文章技巧"></a>文章技巧</h1><h2 id="图床的使用"><a href="#图床的使用" class="headerlink" title="图床的使用"></a>图床的使用</h2><p>这里用我自己写的文章来讲解<a href="https://daoxuan.cc/posts/undefined/">PicGo + 七牛云 + Typora 搭建图床 | DaoXuan</a></p><p>顺便简单演示一下。</p><h2 id="最后总结一下写博客的好处（时间允许的话）"><a href="#最后总结一下写博客的好处（时间允许的话）" class="headerlink" title="最后总结一下写博客的好处（时间允许的话）"></a>最后总结一下写博客的好处（时间允许的话）</h2><ol><li>记录个人所得，最主要是为了给自己看，其次是为了帮助别人。</li><li>看别人的文章，接触新事物，新知识。</li><li>分享生活中的快乐，记录自己生活的点滴。（程序员的浪漫）</li><li>锻炼自己的前端知识和动手能力</li><li>自己挖掘的一些小功能，比如背单词。</li><li><del>用来装逼</del></li></ol></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;介绍部分&quot;&gt;&lt;a href=&quot;#介绍部分&quot; class=&quot;headerlink&quot; title=&quot;介绍部分&quot;&gt;&lt;/a&gt;介绍部分&lt;/h1&gt;&lt;h2 id=&quot;什么是个人博客&quot;&gt;&lt;a href=&quot;#什么是个人博客</summary>
      
    
    
    
    
    <category term="演讲稿" scheme="https://daoxuan.cc/tags/%E6%BC%94%E8%AE%B2%E7%A8%BF/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫爬取中国海洋大学教务系统课表</title>
    <link href="https://daoxuan.cc/posts/22520/"/>
    <id>https://daoxuan.cc/posts/22520/</id>
    <published>2023-03-26T16:26:39.000Z</published>
    <updated>2024-12-09T06:40:40.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="Python爬虫爬取中国海洋大学教务系统课表"><a href="#Python爬虫爬取中国海洋大学教务系统课表" class="headerlink" title="Python爬虫爬取中国海洋大学教务系统课表"></a>Python爬虫爬取中国海洋大学教务系统课表</h1><h2 id="Python环境配置"><a href="#Python环境配置" class="headerlink" title="Python环境配置"></a>Python环境配置</h2><ol><li>首先需要requests包进行爬虫代码的编写<code>pip install requests</code></li><li>由于教务系统登录时使用了rsa非对称加密，所以需要导入包<code>pip install pycryptodome</code></li></ol><blockquote><p>到现在就可以编写程序了</p></blockquote><h2 id="通过抓包工具获得整个登录流程"><a href="#通过抓包工具获得整个登录流程" class="headerlink" title="通过抓包工具获得整个登录流程"></a>通过抓包工具获得整个登录流程</h2><blockquote><p>可以用浏览器自带的，也可以用Charles等</p></blockquote><p><img src="http://picture.daoxuan.cc/image/202303261505782.png" alt="image-20230326150441872"></p><p><img src="http://picture.daoxuan.cc/image/202303261505313.png" alt="image-20230326150512223"></p><p>看起来还是比较让人头大的，基本思路是将上面的关键步骤利用爬虫进行模拟</p><h2 id="首先来看登录的基本流程"><a href="#首先来看登录的基本流程" class="headerlink" title="首先来看登录的基本流程"></a>首先来看登录的基本流程</h2><p><img src="http://picture.daoxuan.cc/image/202303270034912.png" alt="image-20230326151218186"></p><h3 id="这里是第一个URL：-http-id-ouc-edu-cn-8071-sso-ssoLogin"><a href="#这里是第一个URL：-http-id-ouc-edu-cn-8071-sso-ssoLogin" class="headerlink" title="这里是第一个URL： http://id.ouc.edu.cn:8071/sso/ssoLogin"></a>这里是第一个URL： <a href="http://id.ouc.edu.cn:8071/sso/ssoLogin">http://id.ouc.edu.cn:8071/sso/ssoLogin</a></h3><p>出于保密我并没有完全截取密码部分</p><p>我这里先列举一个111加密出来的密码</p><p><code>XPhhrlYF2nV7N0ufUDKDFDKozbQcTF1wJkt5eQH3UvdBSPiMi8fnEYybx4doBPAAdIfrVRQOC0WwWlh8ijVvikmZw2hpknSK/sF9lZWV3melQXJ/h1nKZfps1RqW0insN6dcKXh7aC4IYYA2j0biLEBwdQXMTAWwHle1lWYMQH0=</code></p><p>这一串非常长的密文（后边带着一个等号）采用的是rsa非对称加密</p><p>具体细节可以参考下面这篇文章</p><div class="tag link"><a class="link-card" title="Tag Plugins Plus | 爬虫之JSEncrypt()加密/解密 （python）_jsencrypt python_漫山的博客-CSDN博客" href="https://blog.csdn.net/qq_30934313/article/details/89155112"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">Tag Plugins Plus | 爬虫之JSEncrypt()加密/解密 （python）_jsencrypt python_漫山的博客-CSDN博客</p><p class="url">https://blog.csdn.net/qq_30934313/article/details/89155112</p></div></a></div><p>具体代码在程序中实现如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#登录密码的加密</span><br><span class="line">def encrpt(password, public_key):</span><br><span class="line">    public_key = &#x27;-----BEGIN PUBLIC KEY-----\n&#x27; + public_key + &#x27;\n-----END PUBLIC KEY-----&#x27;</span><br><span class="line">    rsakey = RSA.importKey(public_key)</span><br><span class="line">    cipher = Cipher_pksc1_v1_5.new(rsakey)</span><br><span class="line">    cipher_text = base64.b64encode(cipher.encrypt(password.encode()))</span><br><span class="line">    return cipher_text.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># key需要修改成自己的</span><br><span class="line">key = &#x27;&#x27;</span><br><span class="line">username = input(&quot;请输入用户名：&quot;)</span><br><span class="line">password = input((&quot;请输入密码&quot;))</span><br><span class="line"></span><br><span class="line"># 实例化session对象</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">#登录信息门户</span><br><span class="line"></span><br><span class="line">url = &#x27;http://id.ouc.edu.cn:8071/sso/ssoLogin&#x27;</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    &#x27;username&#x27;: username,</span><br><span class="line">    &#x27;password&#x27;: encrpt(password, key),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.44&#x27;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj = session.post(url=url, data=data, headers=headers)</span><br><span class="line">if obj.text == &#x27;&#123;&quot;state&quot;:true&#125;&#x27;:</span><br><span class="line">    print(&quot;登录成功&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;用户名或密码错误&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>这里面需要的公钥key可以用抓包工具在文件中找，还是比较好找的，我这里就不公布了。</p></blockquote><div class="tip cogs"><p>注意</p></div><blockquote><p>为了保留cookie，这里使用Session（）实例化对象session，以下网络请求均使用session</p></blockquote><h3 id="下面是一个post请求：http-id-ouc-edu-cn-8071-sso-login-service-http-3A-2F-2Fmy-ouc-edu-cn-2Fuser-2FsimpleSSOLogin"><a href="#下面是一个post请求：http-id-ouc-edu-cn-8071-sso-login-service-http-3A-2F-2Fmy-ouc-edu-cn-2Fuser-2FsimpleSSOLogin" class="headerlink" title="下面是一个post请求：http://id.ouc.edu.cn:8071/sso/login?service=http%3A%2F%2Fmy.ouc.edu.cn%2Fuser%2FsimpleSSOLogin"></a>下面是一个post请求：<a href="http://id.ouc.edu.cn:8071/sso/login?service=http%3A%2F%2Fmy.ouc.edu.cn%2Fuser%2FsimpleSSOLogin">http://id.ouc.edu.cn:8071/sso/login?service=http%3A%2F%2Fmy.ouc.edu.cn%2Fuser%2FsimpleSSOLogin</a></h3><p>携带的参数有四个分别是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    &#x27;username&#x27;: username,</span><br><span class="line">    &#x27;password&#x27;: str(base64.b64encode(password.encode(&#x27;utf-8&#x27;)).decode(&#x27;utf-8&#x27;)),</span><br><span class="line">    &#x27;lt&#x27;: &#x27;e1s1&#x27;,</span><br><span class="line">    &#x27;_eventId&#x27;: &#x27;submit&#x27;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的password采用的是base64加密，需要对应的改一下，下面的lt参数对应请求次数，第一次为e1s1第二次为e2s1（好像是我忘记了）总之，不用动。_eventId也不用动。</p><h3 id="下面是GET请求，-状态码302：-http-my-ouc-edu-cn-user-simpleSSOLogin-ticket-ST-1491796-v5cKNr4iKrVURebiWIPZ-UIA"><a href="#下面是GET请求，-状态码302：-http-my-ouc-edu-cn-user-simpleSSOLogin-ticket-ST-1491796-v5cKNr4iKrVURebiWIPZ-UIA" class="headerlink" title="下面是GET请求， 状态码302： http://my.ouc.edu.cn/user/simpleSSOLogin?ticket=ST-1491796-v5cKNr4iKrVURebiWIPZ-UIA"></a>下面是GET请求， 状态码302： <a href="http://my.ouc.edu.cn/user/simpleSSOLogin?ticket=ST-1491796-v5cKNr4iKrVURebiWIPZ-UIA">http://my.ouc.edu.cn/user/simpleSSOLogin?ticket=ST-1491796-v5cKNr4iKrVURebiWIPZ-UIA</a></h3><p>当然映入眼帘的最吸引人之处就是这个参数ticket了，怎么来的腻？</p><p>答案在上一条请求的响应头中，响应头的location中表明了这个URL，也就是要重定向到的地址，可是当我们尝试去获取这个location的时候出了点问题，我们并没有得到想要的这个URL，而是得到了一个这样的<code>http://id.ouc.edu.cn:8071/sso/login;jsessionid=B5CD01DCF93BC023F72EA52E72AD0CB7?service=http%3A%2F%2Fmy.ouc.edu.cn%2Fuser%2FsimpleSSOLogin</code></p><p>这一步不可以跳过直接访问下一条语句</p><p>所以我们通过<code>page = session.post(url=page.url, headers=headers, data=data)</code>按照和刚才一样的方式再访问一般这个URL，这次就可以执行下一条URL请求了。</p><h3 id="GET请求：http-my-ouc-edu-cn-web-guest"><a href="#GET请求：http-my-ouc-edu-cn-web-guest" class="headerlink" title="GET请求：http://my.ouc.edu.cn/web/guest"></a>GET请求：<a href="http://my.ouc.edu.cn/web/guest">http://my.ouc.edu.cn/web/guest</a></h3><p>这样就登录到信息门户了</p><h2 id="接下来便是我的课表方案一："><a href="#接下来便是我的课表方案一：" class="headerlink" title="接下来便是我的课表方案一："></a>接下来便是我的课表方案一：</h2><blockquote><p>因为教务系统里面有两个样式的课表，分别在不同的地方</p></blockquote><h3 id="POST请求：http-jwgl-ouc-edu-cn-login"><a href="#POST请求：http-jwgl-ouc-edu-cn-login" class="headerlink" title="POST请求：http://jwgl.ouc.edu.cn/login"></a>POST请求：<a href="http://jwgl.ouc.edu.cn/login">http://jwgl.ouc.edu.cn/login</a></h3><p>登录教务系统</p><h3 id="POST请求：http-jwgl-ouc-edu-cn-frame-desk-showLessonScheduleDetailJson-action"><a href="#POST请求：http-jwgl-ouc-edu-cn-frame-desk-showLessonScheduleDetailJson-action" class="headerlink" title="POST请求：http://jwgl.ouc.edu.cn/frame/desk/showLessonScheduleDetailJson.action"></a>POST请求：<a href="http://jwgl.ouc.edu.cn/frame/desk/showLessonScheduleDetailJson.action">http://jwgl.ouc.edu.cn/frame/desk/showLessonScheduleDetailJson.action</a></h3><p>得到课表一：</p><p>大概样式是这样的</p><p><img src="http://picture.daoxuan.cc/image/202303262356962.webp" alt="https://image.daoxuan.cc/image/202303262356962.webp"></p><h2 id="课表方案二"><a href="#课表方案二" class="headerlink" title="课表方案二"></a>课表方案二</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    &#x27;Host&#x27;: &#x27;jwgl.ouc.edu.cn&#x27;,</span><br><span class="line">    &#x27;Upgrade-Insecure-Requests&#x27;: &#x27;1&#x27;,</span><br><span class="line">    &#x27;Accept&#x27;: &#x27;*/*&#x27;,</span><br><span class="line">    &#x27;Referer&#x27;: &#x27;http://jwgl.ouc.edu.cn/student/xkjg.wdkb.jsp?menucode=JW130416&#x27;,</span><br><span class="line">    &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;,</span><br><span class="line">    &#x27;Accept-Language&#x27;: &#x27;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;,</span><br><span class="line">    &#x27;Connection&#x27;: &#x27;keep-alive&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">params = &#123;</span><br><span class="line">    &quot;params&quot;: &quot;eG49MjAyMiZ4cT0yJnhoPTIyMDIwMDA3MDY3&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">page = session.get(url=&quot;http://jwgl.ouc.edu.cn/student/xkjg.ckdgxsxdkchj_data.jsp&quot;, params=params, headers=headers)</span><br></pre></td></tr></table></figure><p>这里我踩过的坑就是请求头一定要写全，只使用UA伪装是行不通的（泪的教训）</p><p>尤其是Referer不能少</p><p>这次得到的样式是这样的：</p><p><img src="http://picture.daoxuan.cc/image/202303270010876.png" alt="屏幕截图 2023-03-27 000820"></p><p>两者显示的信息各有不同</p><h2 id="课表方案三"><a href="#课表方案三" class="headerlink" title="课表方案三"></a>课表方案三</h2><p>就是我们的教务系统自带的二维表</p><p>只需要改一下URL就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page = session.get(url=&quot;http://jwgl.ouc.edu.cn/student/wsxk.xskcb.jsp&quot;, params=params, headers=headers)</span><br></pre></td></tr></table></figure><p>这样你就可以得到这样的课表</p><p><img src="http://picture.daoxuan.cc/image/202303270019165.png" alt="image-20230327001932738"></p><p>整体代码多少给一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">from Crypto.Cipher import PKCS1_v1_5 as Cipher_pksc1_v1_5</span><br><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#登录密码的加密</span><br><span class="line">def encrpt(password, public_key):</span><br><span class="line">    public_key = &#x27;-----BEGIN PUBLIC KEY-----\n&#x27; + public_key + &#x27;\n-----END PUBLIC KEY-----&#x27;</span><br><span class="line">    rsakey = RSA.importKey(public_key)</span><br><span class="line">    cipher = Cipher_pksc1_v1_5.new(rsakey)</span><br><span class="line">    cipher_text = base64.b64encode(cipher.encrypt(password.encode()))</span><br><span class="line">    return cipher_text.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># key需要修改成自己的</span><br><span class="line">key = &#x27;&#x27;//自己找公钥</span><br><span class="line">username = input(&quot;请输入用户名：&quot;)</span><br><span class="line">password = input((&quot;请输入密码&quot;))</span><br><span class="line"></span><br><span class="line"># 实例化session对象</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">#登录信息门户</span><br><span class="line"></span><br><span class="line">url = &#x27;http://id.ouc.edu.cn:8071/sso/ssoLogin&#x27;</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    &#x27;username&#x27;: username,</span><br><span class="line">    &#x27;password&#x27;: encrpt(password, key),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.44&#x27;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj = session.post(url=url, data=data, headers=headers)</span><br><span class="line">if obj.text == &#x27;&#123;&quot;state&quot;:true&#125;&#x27;:</span><br><span class="line">    print(&quot;登录成功&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;用户名或密码错误&quot;)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    &#x27;username&#x27;: username,</span><br><span class="line">    &#x27;password&#x27;: str(base64.b64encode(password.encode(&#x27;utf-8&#x27;)).decode(&#x27;utf-8&#x27;)),</span><br><span class="line">    &#x27;lt&#x27;: &#x27;e1s1&#x27;,</span><br><span class="line">    &#x27;_eventId&#x27;: &#x27;submit&#x27;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">page = session.post(</span><br><span class="line">    url=&#x27;http://id.ouc.edu.cn:8071/sso/login?service=http%3A%2F%2Fmy.ouc.edu.cn%2Fuser%2FsimpleSSOLogin&#x27;,</span><br><span class="line">    headers=headers, data=data)</span><br><span class="line">page = session.post(url=page.url, headers=headers, data=data)</span><br><span class="line"></span><br><span class="line">page = session.get(url=&#x27;http://my.ouc.edu.cn/web/guest&#x27;, headers=headers)</span><br><span class="line"></span><br><span class="line">#登录教务系统</span><br><span class="line"></span><br><span class="line">page = session.get(url=&#x27;http://jwgl.ouc.edu.cn/login&#x27;, headers=headers)</span><br><span class="line"></span><br><span class="line">#  课表方案一</span><br><span class="line">page = session.post(url=&#x27;http://jwgl.ouc.edu.cn/frame/desk/showLessonScheduleDetailJson.action&#x27;, headers=headers)</span><br><span class="line">with open(&quot;./课表1.html&quot;, &quot;w&quot;, encoding=&#x27;gbk&#x27;) as fp:</span><br><span class="line">    fp.write(page.text)</span><br><span class="line"># print(page.url)</span><br><span class="line"></span><br><span class="line"># 课表方案二</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    &#x27;Host&#x27;: &#x27;jwgl.ouc.edu.cn&#x27;,</span><br><span class="line">    &#x27;Upgrade-Insecure-Requests&#x27;: &#x27;1&#x27;,</span><br><span class="line">    &#x27;Accept&#x27;: &#x27;*/*&#x27;,</span><br><span class="line">    &#x27;Referer&#x27;: &#x27;http://jwgl.ouc.edu.cn/student/xkjg.wdkb.jsp?menucode=JW130416&#x27;,</span><br><span class="line">    &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;,</span><br><span class="line">    &#x27;Accept-Language&#x27;: &#x27;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;,</span><br><span class="line">    &#x27;Connection&#x27;: &#x27;keep-alive&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">params = &#123;</span><br><span class="line">    &quot;params&quot;: &quot;eG49MjAyMiZ4cT0yJnhoPTIyMDIwMDA3MDY3&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">page = session.get(url=&quot;http://jwgl.ouc.edu.cn/student/xkjg.ckdgxsxdkchj_data.jsp&quot;, params=params, headers=headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">with open(&quot;./课表2.html&quot;, &quot;w&quot;, encoding=&#x27;gbk&#x27;) as fp:</span><br><span class="line">    fp.write(page.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">page = session.get(url=&quot;http://jwgl.ouc.edu.cn/student/wsxk.xskcb.jsp&quot;, params=params, headers=headers)</span><br><span class="line">with open(&quot;./课表3.html&quot;, &quot;w&quot;, encoding=&#x27;gbk&#x27;) as fp:</span><br><span class="line">    fp.write(page.text)</span><br><span class="line"></span><br><span class="line">print(&quot;over!!&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>不要直接CV大法，如果你是中国海洋大学的学弟，欢迎加入爱特工作室。</p><p>如果你已经是爱特的了，欢迎加入程序部。</p><p>如果你已经是程序部的了，那你就不要在看了，有些事情要自己发掘才有意思。</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;Python爬虫爬取中国海洋大学教务系统课表&quot;&gt;&lt;a href=&quot;#Python爬虫爬取中国海洋大学教务系统课表&quot; class=&quot;headerlink&quot; title=&quot;Python爬虫爬取中国海洋大学教</summary>
      
    
    
    
    <category term="爬虫" scheme="https://daoxuan.cc/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Fire" scheme="https://daoxuan.cc/tags/Fire/"/>
    
    <category term="爬虫" scheme="https://daoxuan.cc/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’</title>
    <link href="https://daoxuan.cc/posts/371/"/>
    <id>https://daoxuan.cc/posts/371/</id>
    <published>2023-02-23T02:53:30.000Z</published>
    <updated>2024-12-08T16:08:34.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’"><a href="#C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’" class="headerlink" title="C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’"></a>C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’</h1><h2 id="C语言关于动态创建数组的问题"><a href="#C语言关于动态创建数组的问题" class="headerlink" title="C语言关于动态创建数组的问题"></a>C语言关于动态创建数组的问题</h2><p>C语言的数组设置完应该进行初始化，不然会出现补不可预测的bug</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int arr[100] = &#123;0&#125;;</span><br></pre></td></tr></table></figure><p>C语言中由变量动态创建的数组需要初始化，初始化方式和固定长度的一致</p><p>C语言中字符数组可以不初始化，如果不初始化会存储一个类似于α的东西和a很像。</p><h2 id="C语言关于如何传递‘以变量定义长宽的二维数组’"><a href="#C语言关于如何传递‘以变量定义长宽的二维数组’" class="headerlink" title="C语言关于如何传递‘以变量定义长宽的二维数组’"></a>C语言关于如何传递‘以变量定义长宽的二维数组’</h2><!-- <div class="tip "><p>前言</p></div> --><blockquote><p>众所周知，C语言传递二维数组这件事是很容易完成的（在二维数组的长度已经确定的情况下），但是很多时候，为了优化代码，节省空间，我们需要自定义长度和宽度的二维数组，eg：用户自定义输入长宽，然后创建二维数组。然后传入数据。</p><p>这个时候，由于我们事先并不知道二维数组的长宽，所以这个时候编写的函数如果想要按照原来的方式以二维数组为参数，那么我们的子函数便不知道应该开辟多大的空间，就会报错。</p></blockquote><!-- <div class="tip "><p>解决方案</p></div> --><blockquote><p>通过创建一个二级指针来实现二维数组的传递.<br>优点:易于理解,而且在函数间传递起来较为方便.<br>缺点:创建和释放比较麻烦.</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">a</span><span class="params">(<span class="type">int</span> hei,<span class="type">int</span> wide, <span class="type">int</span> **arr)</span><span class="comment">//打印数据 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;hei; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j =<span class="number">0</span>; j&lt;wide; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> hei, wide;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入hei：&quot;</span>);<span class="comment">//自定义 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;hei);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入wide:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;wide);<span class="comment">// </span></span><br><span class="line"><span class="type">int</span> **arr = (<span class="type">int</span> **)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span> *)*hei);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt; hei; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*wide);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;hei; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j =<span class="number">0</span>; j&lt;wide; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a(hei, wide, arr);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;hei; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p>通过二级指针进行传递，这样在子函数中不需要开辟空间，当然我们需要在创建二级指针的时候，手动申请空间，通过malloc函数（包含在stdlib.h头文件中），在堆上申请空间，具体申请步骤看上面代码。</p><p>这样就可以将二维数组进行传递了。</p></blockquote><p>注意：别忘记free掉申请的空间，不然会造成程序使用中的内存泄漏。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’&quot;&gt;&lt;a href=&quot;#C语言关于动态创建数组的问题，以及如何传递‘以变量定义长宽的二维数组’&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="C语言" scheme="https://daoxuan.cc/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://daoxuan.cc/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言读入多个字符串（不含空格）的方法</title>
    <link href="https://daoxuan.cc/posts/54468/"/>
    <id>https://daoxuan.cc/posts/54468/</id>
    <published>2023-02-23T02:53:01.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="C语言读入多个字符串（不含空格）的方法"><a href="#C语言读入多个字符串（不含空格）的方法" class="headerlink" title="C语言读入多个字符串（不含空格）的方法"></a>C语言读入多个字符串（不含空格）的方法</h1><p>方法一：定义二维字符串数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//方法一：直接定义字符串数组</span><br><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int len = 100;//len是每个字符串最大的长度</span><br><span class="line">    //输入字符串的个数</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    //定义字符串数组</span><br><span class="line">    char p[n][len];</span><br><span class="line">    //读入字符串数组</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">    scanf(&quot;%s&quot;, &amp;p[i][0]);</span><br><span class="line">    &#125;</span><br><span class="line">    //输出字符串数组</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">        printf(&quot;%s \n&quot;, &amp;p[i][0]);</span><br><span class="line">    &#125;   </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法二：定义字符串指针数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/*方法二：定义字符串指针数组，即数组中的指针指向字符串，</span><br><span class="line">并需要给数组中的每个指针分配动态内存*/</span><br><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int len = 100;//len是每个字符串最大的长度</span><br><span class="line">    //输入字符串的个数,</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    //定义字符串指针数组，并给每个指针分配动态内存</span><br><span class="line">    char *p[n];</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">        p[i] = (char*)malloc(len * sizeof(char));</span><br><span class="line">    &#125;</span><br><span class="line">    //读入字符串数组</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">        scanf(&quot;%s&quot;, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    //输出字符串数组</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">        printf(&quot;%s \n&quot;, p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    //释放内存</span><br><span class="line">    for(int i = 0; i &lt; n; i++)&#123;</span><br><span class="line">        free(p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;C语言读入多个字符串（不含空格）的方法&quot;&gt;&lt;a href=&quot;#C语言读入多个字符串（不含空格）的方法&quot; class=&quot;headerlink&quot; title=&quot;C语言读入多个字符串（不含空格）的方法&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="C语言" scheme="https://daoxuan.cc/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://daoxuan.cc/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言的变长数组</title>
    <link href="https://daoxuan.cc/posts/30117/"/>
    <id>https://daoxuan.cc/posts/30117/</id>
    <published>2023-02-08T06:58:32.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="C语言的变长数组"><a href="#C语言的变长数组" class="headerlink" title="C语言的变长数组"></a>C语言的变长数组</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>写程序的时候经常要定义这样一个数组，要前面程序运行后才能知道要定义数组的大小。</p><h2 id="C99之可变长度数组（VLA）"><a href="#C99之可变长度数组（VLA）" class="headerlink" title="C99之可变长度数组（VLA）"></a>C99之可变长度数组（VLA）</h2><p>C99：<br>1994年，由ANSI/ISO联合委员会开始修订C标准<br>1999年，1994年对C语言的修订引出了ISO 9899:1999的发表，它通常被称为C99<br>C11：<br>2011年，国际标准化组织（ISO）和国际电工委员会（IEC） 旗下的C语言标准委员会（ISO/IEC JTC1/SC22/WG14）正式发布了C11标准</p><p>c99标准中，新增了可变长度数组：Variable-length array (VLA)；C11中VLA变为可选项，不是语言必备的特性。</p><p>关于变长数组</p><p>变长数组中的“变”不是指可以修改已创建数组的大小，一旦创建了变长数组，它的大小则保持不变。这里的“变”指的是：在创建数组时，可以使用变量指定数组的长度。(普通数组只能用常量或常量表达式指定数组的长度)</p><ul><li>变长数组VLA只能是局部变量数组</li><li>变长数组VLA不能在定义的时候进行初始化</li><li>变长数组VLA必须是自动存储类别，即不能使用extern或static存储类别说明符</li><li>变长数组VLA不等于动态数组，本质还是静态数组，也就是说，数组的长度在变量的整个生命周期中是不可变的</li><li>由于变长数组只能是局部变量，且必须是自动存储类别，因此变长数组分配在栈上</li><li>可变长数组对于多维数组也适用（如array[a][b] ）</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int a=0;</span><br><span class="line">int b=0;</span><br><span class="line">scanf(&quot;%d %d&quot;,&amp;a,&amp;b);</span><br><span class="line">char array[a][b];</span><br><span class="line">printf(&quot;sizeof(array)=%d\n&quot;,sizeof(array));</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">上述代码需在支持C99标准的编译器上才行（注意，VS系列编译器均不支持该特性）</span><br></pre></td></tr></table></figure><p>根据上面关于数组的几项注意点，下面列出几种错误的示例:</p><ul><li><p><code>int a=2;</code></p></li><li><p><code>int b=3;</code></p></li><li><p><code>char array1[a][b] = &#123;1,2,3,4,5,6&#125;;</code> //错误，变长数组VLA不能在定义的时候进行初始化</p></li><li><p><code>char array2[a][b] = &#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;&#125;;</code> //错误，变长数组VLA不能在定义的时候进行初始化</p></li><li><p><code>static char array3[a][b];</code> //错误，变长数组VLA必须是自动存储类别</p></li></ul><h1 id="关于如果是const变量做数组长度，下面还有几种情况需要思考："><a href="#关于如果是const变量做数组长度，下面还有几种情况需要思考：" class="headerlink" title="关于如果是const变量做数组长度，下面还有几种情况需要思考："></a>关于如果是const变量做数组长度，下面还有几种情况需要思考：</h1><h2 id="1、在函数体外部，全局数组长度用const类型全局变量，是否可行？-–-答：可以。"><a href="#1、在函数体外部，全局数组长度用const类型全局变量，是否可行？-–-答：可以。" class="headerlink" title="1、在函数体外部，全局数组长度用const类型全局变量，是否可行？ – 答：可以。"></a>1、在函数体外部，全局数组长度用const类型全局变量，是否可行？ – 答：可以。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">const int len = 10;</span><br><span class="line">char array[len];</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;sizeof(array)=%d\n&quot;,sizeof(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、在函数体外部，static-全局数组长度用const类型全局变量，是否可行？-–-答：可以。"><a href="#2、在函数体外部，static-全局数组长度用const类型全局变量，是否可行？-–-答：可以。" class="headerlink" title="2、在函数体外部，static 全局数组长度用const类型全局变量，是否可行？ – 答：可以。"></a>2、在函数体外部，static 全局数组长度用const类型全局变量，是否可行？ – 答：可以。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">const int len = 10;</span><br><span class="line">static char array[len];</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;sizeof(array)=%d\n&quot;,sizeof(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、在函数体内部，static-局部数组长度用const类型局部变量，是否可行？-–-答：可以。"><a href="#3、在函数体内部，static-局部数组长度用const类型局部变量，是否可行？-–-答：可以。" class="headerlink" title="3、在函数体内部，static 局部数组长度用const类型局部变量，是否可行？ – 答：可以。"></a>3、在函数体内部，static 局部数组长度用const类型局部变量，是否可行？ – 答：可以。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">const int len = 10;</span><br><span class="line">static char array[len];</span><br><span class="line">printf(&quot;sizeof(array)=%d\n&quot;,sizeof(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、在函数体内部，局部数组长度用const类型局部变量，是否可行？-–-答：可以。"><a href="#4、在函数体内部，局部数组长度用const类型局部变量，是否可行？-–-答：可以。" class="headerlink" title="4、在函数体内部，局部数组长度用const类型局部变量，是否可行？ – 答：可以。"></a>4、在函数体内部，局部数组长度用const类型局部变量，是否可行？ – 答：可以。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">const int len = 10;</span><br><span class="line">char array[len];</span><br><span class="line">printf(&quot;sizeof(array)=%d\n&quot;,sizeof(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>总结：const变量不能直接改变，用其定义数组长度实际上已经不再是变长数组了。</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;C语言的变长数组&quot;&gt;&lt;a href=&quot;#C语言的变长数组&quot; class=&quot;headerlink&quot; title=&quot;C语言的变长数组&quot;&gt;&lt;/a&gt;C语言的变长数组&lt;/h1&gt;&lt;h2 id=&quot;问题背景&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="C语言" scheme="https://daoxuan.cc/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="c语言" scheme="https://daoxuan.cc/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>hexo algolia 常见问题解决办法</title>
    <link href="https://daoxuan.cc/posts/20439/"/>
    <id>https://daoxuan.cc/posts/20439/</id>
    <published>2023-02-07T03:24:03.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><details class="folding-tag" ><summary> 下面是参考的教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Tag Plugins Plus | hexo algolia 常见问题解决办法 | 猿宵 (werty.cn)" href="https://werty.cn/2019/07/hexo/hexo%20algolia%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">Tag Plugins Plus | hexo algolia 常见问题解决办法 | 猿宵 (werty.cn)</p><p class="url">https://werty.cn/2019/07/hexo/hexo%20algolia%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</p></div></a></div>              </div>            </details><div class="tip "><p>并非原创仅作记录，上面的教程更加详细</p></div><h1 id="hexo-algolia-常见问题解决办法"><a href="#hexo-algolia-常见问题解决办法" class="headerlink" title="hexo algolia 常见问题解决办法"></a>hexo algolia 常见问题解决办法</h1><p>执行algolia命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p>如果报错： <code>Usage: hexo &lt;command&gt;</code></p><p>说明是没有安装hexo algolia插件</p><p>解决办法： 在hexo项目根目录执行npm安装命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algolia --save</span><br></pre></td></tr></table></figure><h1 id="报错-Please-set-an-HEXO-ALGOLIA-INDEXING-KEY-environment-variable-to-enable-content-indexing"><a href="#报错-Please-set-an-HEXO-ALGOLIA-INDEXING-KEY-environment-variable-to-enable-content-indexing" class="headerlink" title="报错: Please set an HEXO_ALGOLIA_INDEXING_KEY environment variable to enable content indexing."></a>报错: Please set an HEXO_ALGOLIA_INDEXING_KEY environment variable to enable content indexing.</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR [hexo-algolia] Please set an `HEXO_ALGOLIA_INDEXING_KEY` environment variable to enable content indexing.</span><br><span class="line">ERROR &gt;&gt; Read https://npmjs.com/hexo-algolia#api-key for more informations.</span><br></pre></td></tr></table></figure><p>原因： 需要一种像ssh一样的API秘钥，具体可以参考你在第一次使用algolia时候的教程</p><p>解决办法：<code>export HEXO_ALGOLIA_INDEXING_KEY=你的Admin API Key</code></p><blockquote><p>上述命令直接在windows cmd或powershell中执行会报错，需要在git bash中执行,不需要重启电脑，但该方法设置的环境变量为临时变量，重启会失效</p></blockquote><p>我采用的主要是下面的方案</p><p>右键点击我的电脑 &gt; 属性 &gt; 高级系统设置 &gt; 环境变量</p><p>在用户变量中点击新建，添加环境变量，变量名为<code>HEXO_ALGOLIA_INDEXING_KEY</code> 值为 <code>Algolia admin key</code> ， 添加后点击确认，重启电脑后新增的环境变量生效(添加到系统变量中也是可以的)</p><p>环境变量设置成功后，执行hexo algolia 即可生成索引文件</p><h1 id="报错：Method-not-allowed-with-this-referer"><a href="#报错：Method-not-allowed-with-this-referer" class="headerlink" title="报错：Method not allowed with this referer"></a>报错：Method not allowed with this referer</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INFO  [hexo-algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions.</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  [hexo-algolia] 47 records to index (post, page).</span><br><span class="line">INFO  [hexo-algolia] Indexing chunk 1 of 1 (47 records)</span><br><span class="line">ERROR [hexo-algolia] Method not allowed with this referer</span><br><span class="line">INFO  [hexo-algolia] Indexing done.原因：使用了查询API key环境变量中设置的密钥需要为Admin KEY</span><br></pre></td></tr></table></figure><p>解决办法：</p><p>登录Algolia官网，进入api key控制台</p><p>复制Admin API Key 修改环境变量HEXO_ALGOLIA_INDEXING_KEY 的值为该API Key即可</p><blockquote><p>PS：__config.yml文件中配置的API密钥为搜索密钥(Search-Only API Key)，请注意区分</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;details class=&quot;folding-tag&quot; &gt;&lt;summary&gt; 下面是参考的教程 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
             </summary>
      
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/categories/%E6%8A%A5%E9%94%99/"/>
    
    
    <category term="hexo" scheme="https://daoxuan.cc/tags/hexo/"/>
    
    <category term="algolia" scheme="https://daoxuan.cc/tags/algolia/"/>
    
  </entry>
  
  <entry>
    <title>关于左值</title>
    <link href="https://daoxuan.cc/posts/49774/"/>
    <id>https://daoxuan.cc/posts/49774/</id>
    <published>2023-02-06T13:47:56.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="关于左值"><a href="#关于左值" class="headerlink" title="关于左值"></a>关于左值</h1><details class="folding-tag" ><summary> 引用自小甲鱼的教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Tag Plugins Plus | 什么是lvalue" href="https://fishc.com.cn/thread-69833-1-1.html"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">Tag Plugins Plus | 什么是lvalue</p><p class="url">https://fishc.com.cn/thread-69833-1-1.html</p></div></a></div>              </div>            </details><blockquote><p>一般来说，当你看到这样的报错时</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Error] lvalue required as left operand of assignment</span><br></pre></td></tr></table></figure><p>就是左值概念不清晰的原因啦</p><p>首先我们引用一下c99的官方文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The name &quot;lvalue&quot; comes originally from the assignment expression E1 = E2, in which the left operand E1 is required to be a (modi&amp;#64257;able) lvalue. It is perhaps better considered as representing an object &quot;locator value&quot;. What is sometimes called &quot;rvalue&quot; is in this International Standard described as the &quot;value of an expression&quot;.</span><br></pre></td></tr></table></figure><div class="tip "><p>当然，装装样子而已啦，还是用汉语叙述：</p></div><p>左值也就是lvalue，更加合理的解释应该是locator value（特定位置的值），rvalue则应该理解为value of an expression（表达式的值）</p><p>以下面的代码为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">        int a = 5;</span><br><span class="line"></span><br><span class="line">        ++(a++);</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码是会报错的</p><blockquote><p>如果你认为左值只是赋值运算左边的值，这个错误就无法理解了</p><p>正确的理解是：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(a++) 是先将变量 a 的值（5）做为整个表达式的值返回，再将 a 自增 1（类似于 a = a + 1）。</span><br><span class="line"></span><br><span class="line">所以这里 ++(a++); 相当于 ++(5), a = a + 1;</span><br><span class="line"></span><br><span class="line">那当然要报错啦，5 是一个常量，当然不能给你 5 = 5 + 1 咯~</span><br></pre></td></tr></table></figure><p>++的作用对象需要是一个用于识别或定位储存位置的表示符（lvalue）</p><h1 id="省流"><a href="#省流" class="headerlink" title="省流"></a>省流</h1><p>C 语言的术语 lvalue 指用于识别或定位一个存储位置的标识符。（注意：左值同时还必须是可改变的）</p><p>其实 rvalue 的发明完全是为了搭配 lvalue，rvalue 你可以理解为 readable value，即任何可读取的值都被认为是右值（非左值）。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;关于左值&quot;&gt;&lt;a href=&quot;#关于左值&quot; class=&quot;headerlink&quot; title=&quot;关于左值&quot;&gt;&lt;/a&gt;关于左值&lt;/h1&gt;&lt;details class=&quot;folding-tag&quot; &gt;&lt;sum</summary>
      
    
    
    
    <category term="C语言" scheme="https://daoxuan.cc/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="左值" scheme="https://daoxuan.cc/tags/%E5%B7%A6%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客优化日记</title>
    <link href="https://daoxuan.cc/posts/12972/"/>
    <id>https://daoxuan.cc/posts/12972/</id>
    <published>2023-01-31T03:37:39.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="tip "><p>hexo博客优化日记</p></div><details class="folding-tag" ><summary> 参考教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Tag Plugins Plus | [Hexo折腾系列（一）博客访问速度优化 - 江风引雨の小po站 (luzy.top)" href="https://blog.luzy.top/posts/2009685483/#hexo-all-minifier使用"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">Tag Plugins Plus | [Hexo折腾系列（一）博客访问速度优化 - 江风引雨の小po站 (luzy.top)</p><p class="url">https://blog.luzy.top/posts/2009685483/#hexo-all-minifier使用</p></div></a></div>              </div>            </details><h1 id="使用hexo-all-minifier压缩博客"><a href="#使用hexo-all-minifier压缩博客" class="headerlink" title="使用hexo-all-minifier压缩博客"></a>使用hexo-all-minifier压缩博客</h1><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-all-minifier --save</span><br></pre></td></tr></table></figure><p>如果安装失败可以使用cnpm（站长做法）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-all-minifier --save</span><br></pre></td></tr></table></figure><div class="tip cogs"><p>如果提示command not found</p></div><p>可以试试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><blockquote><p>如果还不奏效请自行搜索</p></blockquote><p>配置</p><p>在<code>_config.yml</code>里添加:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">all_minifier: ture</span><br></pre></td></tr></table></figure><p>本地的就行</p><p>详细设置：<a href="https://github.com/chenzhutian/hexo-all-minifier/blob/master/README.md">官方教程</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># html压缩</span><br><span class="line">html_minifier:</span><br><span class="line">  enable: true</span><br><span class="line">  ignore_error: false</span><br><span class="line">  exclude:</span><br><span class="line"></span><br><span class="line"># css压缩</span><br><span class="line">css_minifier:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;*.min.css&#x27;</span><br><span class="line">    </span><br><span class="line"># js压缩</span><br><span class="line">js_minifier:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;*.min.js&#x27;</span><br><span class="line">js_concator:</span><br><span class="line">  enable: false</span><br><span class="line">  bundle_path: &#x27;/js/bundle.js&#x27;</span><br><span class="line">  front: false</span><br><span class="line">  silent: false</span><br><span class="line"></span><br><span class="line"># 图片优化</span><br><span class="line">image_minifier:</span><br><span class="line">  enable: true</span><br><span class="line">  interlaced: false</span><br><span class="line">  multipass: false</span><br><span class="line">  optimizationLevel: 2</span><br><span class="line">  pngquant: false</span><br><span class="line">  progressive: false</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;tip &quot;&gt;&lt;p&gt;hexo博客优化日记&lt;/p&gt;
&lt;/div&gt;
&lt;details class=&quot;folding-tag&quot; &gt;&lt;summary&gt; 参考教程 &lt;/summary&gt;
          </summary>
      
    
    
    
    
    <category term="博客" scheme="https://daoxuan.cc/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="优化" scheme="https://daoxuan.cc/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>阿里云CDN加速之重定向次数过多</title>
    <link href="https://daoxuan.cc/posts/25087/"/>
    <id>https://daoxuan.cc/posts/25087/</id>
    <published>2023-01-29T15:51:55.000Z</published>
    <updated>2024-12-08T16:00:46.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><div class="tip cogs"><p>阿里云CDN加速之重定向次数过多</p></div><details class="folding-tag" ><summary> 参考教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Tag Plugins Plus | CDN访问异常篇之重定向的次数过多-阿里云开发者社区 (aliyun.com)]" href="https://developer.aliyun.com/article/749187"><div class="left"><img src="http://picture.daoxuan.cc/image/202301292351979.jpg"/></div><div class="right"><p class="text">Tag Plugins Plus | CDN访问异常篇之重定向的次数过多-阿里云开发者社区 (aliyun.com)]</p><p class="url">https://developer.aliyun.com/article/749187</p></div></a></div>              </div>            </details><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>配置了阿里云CDN或者全站加速后，使用浏览器进行访问，出现如下错误提示。</p><p>XXX.XXX.XXX 将您重定向的次数过多。<br>尝试清除 Cookie.<br>ERR_TOO_MANY_REDIRECTS<img src="https://picture.daoxuan.cc/image/202301301232473.webp" alt=""></p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>源站开启了HTTP重定向至HTTPS的功能，并且CDN控制台上配置的回源端口为80。在这种情况下，由于CDN回源端口为80，客户端无论是通过HTTP还是HTTPS访问CDN加速域名时，CDN在回源的时候都是使用HTTP请求源站，此时会触发源站的HTTPS强制跳转逻辑，然后源站会要求CDN重新发送一个HTTPS的请求，但是CDN回源的时候仍然会发送HTTP回源请求，然后再进行跳转，以此类推，就会出现反复重定向问题，最终导致出现报错。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p><img src="https://picture.daoxuan.cc/image/202301301232228.webp" alt=""></p><p>将端口改为433</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;div class=&quot;tip cogs&quot;&gt;&lt;p&gt;阿里云CDN加速之重定向次数过多&lt;/p&gt;
&lt;/div&gt;
&lt;details class=&quot;folding-tag&quot; &gt;&lt;summary&gt; 参考教程 &lt;/summary&gt;
</summary>
      
    
    
    
    <category term="网站" scheme="https://daoxuan.cc/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="CDN" scheme="https://daoxuan.cc/tags/CDN/"/>
    
    <category term="重定向次数过多" scheme="https://daoxuan.cc/tags/%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E6%95%B0%E8%BF%87%E5%A4%9A/"/>
    
  </entry>
  
  <entry>
    <title>假期主题团日文章</title>
    <link href="https://daoxuan.cc/posts/6890/"/>
    <id>https://daoxuan.cc/posts/6890/</id>
    <published>2023-01-28T12:28:37.000Z</published>
    <updated>2024-12-08T16:00:47.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="个人成长记录"><a href="#个人成长记录" class="headerlink" title="个人成长记录"></a>个人成长记录</h1><p>在海大的这半个学期，我有许多的变化，最大的变化便是—-头发长了（bushi），最大的变化其实是—-我做事情的思维方式发生了改变，初入大学时候的我，喜欢参透规则，做事情喜欢做最重要的那部分，不关注任务完成的完整度，但是在大学中我逐渐懂得，大多数时候，事情做得充实，面面俱到，要比在单单一方面上很出色要强。</p><h1 id="观影与影片推荐"><a href="#观影与影片推荐" class="headerlink" title="观影与影片推荐"></a>观影与影片推荐</h1><p>电影推荐当然要数今年的春节档电影啦，最要力挺的要数流浪地球2了，我们的小破球可谓是把钱用在了刀刃上了，无论是剧情的四线并行还是特效的细节处理，都十分的完美，电影里面的太空电梯，用核弹相控阵引爆月球，数字生命延续人类生命，都是超过这个时代的科幻，强烈安利！！！</p><h1 id="我的新年愿望"><a href="#我的新年愿望" class="headerlink" title="我的新年愿望"></a>我的新年愿望</h1><p>我最大的新年愿望便是，在新的一年里，希望我和我的家人、朋友们，能够平平安安，我们若安好，便是晴天。其次，我希望可以变得有用，希望我可以进一步成为一个有用之人，学业进步。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;个人成长记录&quot;&gt;&lt;a href=&quot;#个人成长记录&quot; class=&quot;headerlink&quot; title=&quot;个人成长记录&quot;&gt;&lt;/a&gt;个人成长记录&lt;/h1&gt;&lt;p&gt;在海大的这半个学期，我有许多的变化，最大的变化</summary>
      
    
    
    
    <category term="生活" scheme="https://daoxuan.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="主题团日" scheme="https://daoxuan.cc/tags/%E4%B8%BB%E9%A2%98%E5%9B%A2%E6%97%A5/"/>
    
    <category term="新年愿望" scheme="https://daoxuan.cc/tags/%E6%96%B0%E5%B9%B4%E6%84%BF%E6%9C%9B/"/>
    
    <category term="电影推荐" scheme="https://daoxuan.cc/tags/%E7%94%B5%E5%BD%B1%E6%8E%A8%E8%8D%90/"/>
    
    <category term="个人变化" scheme="https://daoxuan.cc/tags/%E4%B8%AA%E4%BA%BA%E5%8F%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>年终总结</title>
    <link href="https://daoxuan.cc/posts/50092/"/>
    <id>https://daoxuan.cc/posts/50092/</id>
    <published>2023-01-22T07:43:54.000Z</published>
    <updated>2024-12-08T16:19:34.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;/div&gt;</summary>
      
    
    
    
    
    <category term="年终总结" scheme="https://daoxuan.cc/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="标签外挂的使用" scheme="https://daoxuan.cc/tags/%E6%A0%87%E7%AD%BE%E5%A4%96%E6%8C%82%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何通过链接实现QQ聊天和加好友</title>
    <link href="https://daoxuan.cc/posts/54218/"/>
    <id>https://daoxuan.cc/posts/54218/</id>
    <published>2023-01-15T15:00:48.000Z</published>
    <updated>2024-12-08T16:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="如何通过链接实现QQ聊天和加好友"><a href="#如何通过链接实现QQ聊天和加好友" class="headerlink" title="如何通过链接实现QQ聊天和加好友"></a>如何通过链接实现QQ聊天和加好友</h1><blockquote><p>强制聊天链接：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tencent://Message/?Uin=3434055686&amp;websiteName=www.oicqzone.com&amp;Menu=yes</span><br></pre></td></tr></table></figure><blockquote><p>强制加好友链接：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=2872983273&amp;fuin=3434055686&amp;website=www.oicqzone.com</span><br></pre></td></tr></table></figure><blockquote><p>uin 是被加的一方，fuin是主动加的一方</p></blockquote><ul><li>你可以去掉fuin，把2872983273换成你自己的就可以啦</li></ul><blockquote><p>可以在网页里添加跳转代码，打开网页自动添加好友哦。</p></blockquote><ul><li>以下代码需要添加在head里</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=34340555686&amp;website=www.oicqzone.com&quot;&gt;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1 id=&quot;如何通过链接实现QQ聊天和加好友&quot;&gt;&lt;a href=&quot;#如何通过链接实现QQ聊天和加好友&quot; class=&quot;headerlink&quot; title=&quot;如何通过链接实现QQ聊天和加好友&quot;&gt;&lt;/a&gt;如何通过链接实</summary>
      
    
    
    
    
    <category term="加好友" scheme="https://daoxuan.cc/tags/%E5%8A%A0%E5%A5%BD%E5%8F%8B/"/>
    
  </entry>
  
  <entry>
    <title>如何处理报错“kex_exchange_identification: Connection closed by remote hostConnection closed by ::1 port 22”</title>
    <link href="https://daoxuan.cc/posts/2500/"/>
    <id>https://daoxuan.cc/posts/2500/</id>
    <published>2023-01-14T15:07:37.000Z</published>
    <updated>2024-12-08T16:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>[TOC]</p><h1 id="如何处理报错“kex-exchange-identification-Connection-closed-by-remote-hostConnection-closed-by-1-port-22”"><a href="#如何处理报错“kex-exchange-identification-Connection-closed-by-remote-hostConnection-closed-by-1-port-22”" class="headerlink" title="如何处理报错“kex_exchange_identification: Connection closed by remote hostConnection closed by ::1 port 22”"></a>如何处理报错“kex_exchange_identification: Connection closed by remote hostConnection closed by ::1 port 22”</h1><p><img src="http://picture.daoxuan.cc/image/202301142243578.png" alt="image-20230114220851778"></p><p>这是一张令人质壁分离的报错截图，在<code>hexo d</code>后出现这样一堆的报错</p><blockquote><p>原因是：ssh秘钥的过期，需要更新ssh的key</p></blockquote><ul><li><p>首先可以将本地/Users/username/.ssh/中的文件删除</p></li><li><p>然后再终端输入<code>ssh-keygen -t rsa -C “你的邮箱.com”</code></p></li><li><p>一路回车</p></li><li><p>输入<code>ssh -T git@github.com</code>测试连接</p></li><li><p>yes/no回答yes</p></li><li><pre><code>$ ssh -T git@github.comThe authenticity of host &#39;github.com (20.205.243.166)&#39; can&#39;t be established.ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#39;github.com&#39; (ED25519) to the list of known hosts.Hi dx2331lxz! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre></li><li><p>看到<code>Hi dx2331lxz! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>就可以了</p></li></ul></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;如何处理报错“kex-exchange-identification-Connection-closed-by-remote-hostConnection-closed-by-</summary>
      
    
    
    
    
    <category term="报错" scheme="https://daoxuan.cc/tags/%E6%8A%A5%E9%94%99/"/>
    
    <category term="hexo" scheme="https://daoxuan.cc/tags/hexo/"/>
    
    <category term="SSH" scheme="https://daoxuan.cc/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>github pages的DNS check出现问题</title>
    <link href="https://daoxuan.cc/posts/12709/"/>
    <id>https://daoxuan.cc/posts/12709/</id>
    <published>2023-01-12T12:55:32.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your site<span class="string">&#x27;s DNS settings are using a custom subdomain, www.daoxuan.cc, that is set up as an A record. We recommend you change this to a CNAME record pointing to dx2331lxz.github.io. For more information, see documentation (InvalidARecordError).</span></span><br></pre></td></tr></table></figure><blockquote><p>出现这种报错时候的解决方案是：以CNAME添加两个解析，一个@，一个www都让其解析到xxx.github.io就可以了</p></blockquote><p><img src="http://picture.daoxuan.cc/image/202301122102656.jpg" alt=""></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td</summary>
      
    
    
    
    
    <category term="github" scheme="https://daoxuan.cc/tags/github/"/>
    
    <category term="DNS" scheme="https://daoxuan.cc/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>PicGo + 七牛云 + Typora 搭建图床</title>
    <link href="https://daoxuan.cc/posts/undefined/"/>
    <id>https://daoxuan.cc/posts/undefined/</id>
    <published>2023-01-05T14:31:33.000Z</published>
    <updated>2024-12-08T16:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="PicGo-七牛云-Typora"><a href="#PicGo-七牛云-Typora" class="headerlink" title="PicGo + 七牛云 + Typora"></a>PicGo + 七牛云 + Typora</h1><h2 id="1-创建七牛云账号"><a href="#1-创建七牛云账号" class="headerlink" title="1. 创建七牛云账号"></a>1. 创建七牛云账号</h2><p><img src="https://picture.daoxuan.cc/image/202301301225888.webp" alt=""></p><p><a href="https://www.qiniu.com/">七牛云官网</a></p><h2 id="2-创建桶"><a href="#2-创建桶" class="headerlink" title="2. 创建桶"></a>2. 创建桶</h2><ul><li>注册完账号就可以</li><li>新建桶</li></ul><p><img src="https://picture.daoxuan.cc/image/202301301231308.webp" alt=""></p><ul><li><img src="https://picture.daoxuan.cc/image/202301301228587.webp" alt="202301111734207"></li></ul><blockquote><p>选择好离自己近一些的储存位置，把访问控制设置为公开。</p></blockquote><ul><li>点击设置的储存空间名称就可以看到七牛云临时提供的测试域名</li></ul><p><img src="https://image.daoxuan.cc/image/202301301229611.webp" alt=""></p><blockquote><p>这个域名暂时可以使用一个月，不过建议绑定自己的域名。</p></blockquote><ul><li>点击密钥管理，查看个人密钥</li></ul><p><img src="https://picture.daoxuan.cc/image/202301301230502.webp" alt="202301111734652"></p><h2 id="3-配置PicGo"><a href="#3-配置PicGo" class="headerlink" title="3. 配置PicGo"></a>3. 配置PicGo</h2><ol><li><a href="https://github.com/Molunerfinn/PicGo/releases">PicGo官方下载</a></li><li><p><a href="https://daoxuan.lanzout.com/inclq0k78pfg">PicGo快速下载链接</a></p></li><li><p><img src="https://picture.daoxuan.cc/image/202301301230805.webp" alt=""></p></li></ol><blockquote><p>AccessKey和SecretKey分别是刚才记录的个人密钥的AK和SK</p><p>Bucket填写创建的桶的名字</p><p>访问网址填写七牛云赠送的网址（个人有域名就填写自己的）</p><p>储存区域填写请访问该网址查看<a href="https://developer.qiniu.com/kodo/1671/region-endpoint-fq">存储区域<em>产品简介</em>对象存储 - 七牛开发者中心 (qiniu.com)</a></p></blockquote><ul><li>找到和自己的储存区域相对应的区域ID进行填写</li></ul><p>后两项可以不填</p><ul><li>进行完这些就可以上传图片检查一些是否成功</li></ul><h2 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a>配置Typora</h2><p><a href="https://daoxuan.lanzout.com/b041ndthi">Typora快速下载</a>密码:3u7c</p><p><img src="https://picture.daoxuan.cc/image/202301301230277.webp" alt="202301111734036"></p><blockquote><p>调节最下面的设置PIcGo路径为自己安装的路径，其他的按照图上自行配置。</p><p>再加上PicGo中快捷键的设置便可以快捷上传写博客了。</p></blockquote><p><img src="https://picture.daoxuan.cc/image/202301301230286.webp" alt=""></p><blockquote><p>记得在还要设置使用内置剪切板上传（在PicGo中）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;PicGo-七牛云-Typora&quot;&gt;&lt;a href=&quot;#PicGo-七牛云-Typora&quot; class=&quot;headerlink&quot; title=&quot;PicGo + 七牛云 + Typora&quot;&gt;&lt;/a&gt;PicGo + 七牛云 + Typora&lt;</summary>
      
    
    
    
    
    <category term="图床" scheme="https://daoxuan.cc/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>球球最爱吃的薯片</title>
    <link href="https://daoxuan.cc/posts/65143/"/>
    <id>https://daoxuan.cc/posts/65143/</id>
    <published>2022-12-28T07:27:12.000Z</published>
    <updated>2024-12-08T16:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><h1>球球最爱吃的薯片合集</h1><div class="table-container"><table><thead><tr><th>排名</th><th>品牌</th><th>名称</th><th>口味</th></tr></thead><tbody><tr><td>NO.1</td><td>上好佳</td><td>田园薯片</td><td>甜辣口味</td></tr><tr><td>NO.2</td><td>上好佳</td><td>田园薯片</td><td>烤肉口味</td></tr><tr><td>NO.3</td><td>乐事</td><td>西班牙火腿薯片</td><td></td></tr><tr><td>NO.4</td><td>乐事</td><td>玫瑰花瓣薯片</td><td></td></tr><tr><td>NO.5</td><td>薯愿</td><td></td><td>红酒牛肉味</td></tr><tr><td>NO.6</td><td>好丽友</td><td>好友趣</td><td>多汁牛排味</td></tr><tr><td>NO.7</td><td>可比克</td><td></td><td>番茄味</td></tr><tr><td>NO.8</td><td>乐事</td><td></td><td>深井烧鹅味</td></tr></tbody></table></div><blockquote><p>下面附上图片（球球的亲笔记录）</p></blockquote><p><img src="http://picture.daoxuan.cc/image/202301301237798.webp" alt=""></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;h1&gt;球球最爱吃的薯片合集&lt;/h1&gt;

&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;排名&lt;/th&gt;
&lt;th&gt;品牌&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;</summary>
      
    
    
    
    
    <category term="生活" scheme="https://daoxuan.cc/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>如何在django中使用富文本编辑器</title>
    <link href="https://daoxuan.cc/posts/36714/"/>
    <id>https://daoxuan.cc/posts/36714/</id>
    <published>2022-12-28T04:58:36.000Z</published>
    <updated>2024-12-08T16:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>[TOC]</p><blockquote><p>前端后端都有讲解（附代码）</p></blockquote><h1 id="如何在后端django后台使用富文本编辑器"><a href="#如何在后端django后台使用富文本编辑器" class="headerlink" title="如何在后端django后台使用富文本编辑器"></a>如何在后端django后台使用富文本编辑器</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-ckeditor</span><br></pre></td></tr></table></figure><h2 id="2-配置ckeditor"><a href="#2-配置ckeditor" class="headerlink" title="2. 配置ckeditor"></a>2. 配置ckeditor</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">&#x27;ckeditor&#x27;</span>,<span class="comment">#这个</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在项目的settings.py文件的最下边加上ckeditor配置内容（使用界面上的功能）</p><details class="folding-tag" ><summary> 配置代码 </summary>              <div class='content'>              <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用ck的工具栏并修改，宽度自适应</span></span><br><span class="line">CKEDITOR_CONFIGS = &#123;</span><br><span class="line">    <span class="comment"># django-ckeditor默认使用default配置</span></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># 编辑器宽度自适应</span></span><br><span class="line">        <span class="string">&#x27;width&#x27;</span>:<span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;height&#x27;</span>:<span class="string">&#x27;300px&#x27;</span>,</span><br><span class="line">        <span class="comment"># tab键转换空格数</span></span><br><span class="line">        <span class="string">&#x27;tabSpaces&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="comment"># 工具栏风格</span></span><br><span class="line">        <span class="string">&#x27;toolbar&#x27;</span>: <span class="string">&#x27;Custom&#x27;</span>,</span><br><span class="line">        <span class="comment"># 工具栏按钮</span></span><br><span class="line">        <span class="string">&#x27;toolbar_Custom&#x27;</span>: [</span><br><span class="line">            <span class="comment"># 预览、表情</span></span><br><span class="line">            [<span class="string">&#x27;Preview&#x27;</span>,<span class="string">&#x27;Smiley&#x27;</span>],</span><br><span class="line">            <span class="comment"># 字体风格</span></span><br><span class="line">            [<span class="string">&#x27;Bold&#x27;</span>, <span class="string">&#x27;Italic&#x27;</span>, <span class="string">&#x27;Underline&#x27;</span>, <span class="string">&#x27;RemoveFormat&#x27;</span>, <span class="string">&#x27;Blockquote&#x27;</span>],</span><br><span class="line">            <span class="comment"># 字体颜色</span></span><br><span class="line">            [<span class="string">&#x27;TextColor&#x27;</span>, <span class="string">&#x27;BGColor&#x27;</span>],</span><br><span class="line">            <span class="comment">#格式、字体、大小</span></span><br><span class="line">            [<span class="string">&#x27;Format&#x27;</span>,<span class="string">&#x27;Font&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>],</span><br><span class="line">            <span class="comment"># 链接</span></span><br><span class="line">            [<span class="string">&#x27;Link&#x27;</span>, <span class="string">&#x27;Unlink&#x27;</span>],</span><br><span class="line">            <span class="comment"># 列表</span></span><br><span class="line">            [<span class="string">&#x27;Image&#x27;</span>, <span class="string">&#x27;NumberedList&#x27;</span>, <span class="string">&#x27;BulletedList&#x27;</span>],</span><br><span class="line">            <span class="comment">#居左，居中，居右</span></span><br><span class="line">            [<span class="string">&#x27;JustifyLeft&#x27;</span>,<span class="string">&#x27;JustifyCenter&#x27;</span>,<span class="string">&#x27;JustifyRight&#x27;</span>,<span class="string">&#x27;JustifyBlock&#x27;</span>],</span><br><span class="line">            <span class="comment"># 最大化</span></span><br><span class="line">            [<span class="string">&#x27;Maximize&#x27;</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment"># 加入代码块插件</span></span><br><span class="line">        <span class="string">&#x27;extraPlugins&#x27;</span>: <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;codesnippet&#x27;</span>,<span class="string">&#x27;image2&#x27;</span>,<span class="string">&#x27;filebrowser&#x27;</span>,<span class="string">&#x27;widget&#x27;</span>, <span class="string">&#x27;lineutils&#x27;</span>]),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">#评论</span></span><br><span class="line">    <span class="string">&#x27;comment&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># 编辑器宽度自适应</span></span><br><span class="line">        <span class="string">&#x27;width&#x27;</span>: <span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;height&#x27;</span>: <span class="string">&#x27;140px&#x27;</span>,</span><br><span class="line">        <span class="comment"># tab键转换空格数</span></span><br><span class="line">        <span class="string">&#x27;tabSpaces&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="comment"># 工具栏风格</span></span><br><span class="line">        <span class="string">&#x27;toolbar&#x27;</span>: <span class="string">&#x27;Custom&#x27;</span>,</span><br><span class="line">        <span class="comment"># 工具栏按钮</span></span><br><span class="line">        <span class="string">&#x27;toolbar_Custom&#x27;</span>: [</span><br><span class="line">            <span class="comment"># 表情 代码块</span></span><br><span class="line">            [<span class="string">&#x27;Smiley&#x27;</span>, <span class="string">&#x27;CodeSnippet&#x27;</span>],</span><br><span class="line">            <span class="comment"># 字体风格</span></span><br><span class="line">            [<span class="string">&#x27;Bold&#x27;</span>, <span class="string">&#x27;Italic&#x27;</span>, <span class="string">&#x27;Underline&#x27;</span>, <span class="string">&#x27;RemoveFormat&#x27;</span>, <span class="string">&#x27;Blockquote&#x27;</span>],</span><br><span class="line">            <span class="comment"># 字体颜色</span></span><br><span class="line">            [<span class="string">&#x27;TextColor&#x27;</span>, <span class="string">&#x27;BGColor&#x27;</span>],</span><br><span class="line">            <span class="comment"># 链接</span></span><br><span class="line">            [<span class="string">&#x27;Link&#x27;</span>, <span class="string">&#x27;Unlink&#x27;</span>],</span><br><span class="line">            <span class="comment"># 列表</span></span><br><span class="line">            [<span class="string">&#x27;NumberedList&#x27;</span>, <span class="string">&#x27;BulletedList&#x27;</span>],</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment"># 加入代码块插件</span></span><br><span class="line">        <span class="string">&#x27;extraPlugins&#x27;</span>: <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;codesnippet&#x27;</span>]),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><blockquote><p>注意：上面代码中的下半部分从“comment”这里开始，是可以自己配置的部分，可以自己选择富文本编辑器采用那种配置。（后面会说）</p></blockquote><h2 id="3-models字段使用，引用步骤二中的ckeditor配置"><a href="#3-models字段使用，引用步骤二中的ckeditor配置" class="headerlink" title="3. models字段使用，引用步骤二中的ckeditor配置"></a>3. models字段使用，引用步骤二中的ckeditor配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> ckeditor_uploader.fields <span class="keyword">import</span> RichTextUploadingField</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Comment</span>(models.Model):</span><br><span class="line">    content = RichTextUploadingField(config_name=<span class="string">&#x27;default&#x27;</span>)<span class="comment">#config_name指定ckeditor配置文件，不指定就使用default</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&#x27;comment&#x27;</span></span><br><span class="line">        verbose_name = <span class="string">&quot;评论&quot;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.title</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>这里的config_name=‘’可以指定自己配置的comment</p></blockquote><h2 id="4-forms字段使用"><a href="#4-forms字段使用" class="headerlink" title="4. forms字段使用"></a>4. forms字段使用</h2><ol><li>首先在自己的app中创建一个py文件命名为forms</li><li>然后导入下面代码</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> ckeditor_uploader.fields <span class="keyword">import</span> RichTextUploadingField</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Comment</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CommentForm</span>(forms.ModelForm):</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        model = Comment</span><br><span class="line">        fields = [<span class="string">&#x27;content&#x27;</span>, ]</span><br></pre></td></tr></table></figure><blockquote><p>以上不懂的可以自行学习modelform的相关知识</p></blockquote><h2 id="5-admin后台使用"><a href="#5-admin后台使用" class="headerlink" title="5. admin后台使用"></a>5. admin后台使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Comment</span><br><span class="line"></span><br><span class="line">admin.site.register(Comment)<span class="comment">#在后台注册</span></span><br></pre></td></tr></table></figure><h2 id="6-迁移数据库"><a href="#6-迁移数据库" class="headerlink" title="6. 迁移数据库"></a>6. 迁移数据库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><blockquote><p>这是在终端中进行的操作。</p></blockquote><h1 id="如何在前端使用富文本编辑器"><a href="#如何在前端使用富文本编辑器" class="headerlink" title="如何在前端使用富文本编辑器"></a>如何在前端使用富文本编辑器</h1><h2 id="1-安装pillow"><a href="#1-安装pillow" class="headerlink" title="1. 安装pillow"></a>1. 安装pillow</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><blockquote><p>ckeditor也要安装，上面已经安装过了这里就不在赘述了。</p></blockquote><h2 id="2-settings-py配置文件储存位置"><a href="#2-settings-py配置文件储存位置" class="headerlink" title="2. settings.py配置文件储存位置"></a>2. settings.py配置文件储存位置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    BASE_DIR / <span class="string">&quot;static&quot;</span>,</span><br><span class="line">]</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&quot;static&quot;</span>, <span class="string">&quot;ckeditor&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Default primary key field type</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field</span></span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span>  <span class="comment"># 上传图片的路径</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)  <span class="comment"># 上传图片的根路径</span></span><br><span class="line"><span class="comment"># CK</span></span><br><span class="line">CKEDITOR_UPLOAD_PATH = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>, <span class="string">&#x27;uploads&#x27;</span>)</span><br><span class="line">CKEDITOR_IMAGE_BACKEND = <span class="string">&#x27;pillow&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-配置路由"><a href="#3-配置路由" class="headerlink" title="3. 配置路由"></a>3. 配置路由</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include, re_path</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.views.static <span class="keyword">import</span> serve</span><br><span class="line"><span class="keyword">from</span> .settings <span class="keyword">import</span> MEDIA_ROOT</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">                  path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),<span class="comment">#后台</span></span><br><span class="line">                  path(<span class="string">&#x27;ckeditor/&#x27;</span>, include(<span class="string">&#x27;ckeditor_uploader.urls&#x27;</span>)),<span class="comment">#这句必不可少</span></span><br><span class="line">                  path(<span class="string">&#x27;show_box/&lt;int:nid&gt;/&#x27;</span>, views.show_box),<span class="comment">#这里是我自己项目的路由，每个人都有不同的设置方法，这里现在不用在意，看它对应的函数就懂了。</span></span><br><span class="line">              ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)<span class="comment">#配置文件储存位置</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-创建所需文件夹"><a href="#4-创建所需文件夹" class="headerlink" title="4. 创建所需文件夹"></a>4. 创建所需文件夹</h2><p>在根目录下面创建文件夹</p><ol><li>media， 并且在media文件夹中创建uploads文件夹</li><li>static</li></ol><blockquote><p>这里看settings设置就能懂。</p></blockquote><h2 id="5-views视图函数的设置"><a href="#5-views视图函数的设置" class="headerlink" title="5. views视图函数的设置"></a>5. views视图函数的设置</h2><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> CommentForm<span class="comment">#引入刚写完的modelform</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_box</span>(<span class="params">request, nid</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;show_box.html&quot;</span>, &#123;<span class="string">&#x27;form&#x27;</span>: CommentForm()&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>具体语法参见modelform使用</p></blockquote><h2 id="6-复制文件"><a href="#6-复制文件" class="headerlink" title="6. 复制文件"></a>6. 复制文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><blockquote><p>你会发现自己刚创建的文件加里面多出来很多内容</p></blockquote><h2 id="7-编辑show-box-html"><a href="#7-编辑show-box-html" class="headerlink" title="7.编辑show_box.html"></a>7.编辑show_box.html</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/static/ckeditor/ckeditor/ckeditor-init.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;/static/ckeditor/ckeditor/ckeditor/ckeditor.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">#上面的这两个部分要依照这自己的文件储存位置写，可能会有所差异，去刚才复制文件之后多出来的那部分文件里面去找。</span></span><br><span class="line">&lt;div style=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &#123;&#123; form.as_p &#125;&#125;<span class="comment">#这里是最重要的</span></span><br><span class="line">        &lt;div style=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="line">            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交评论&quot;</span> style=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>现在运行就能够看见富文本编辑器了</p></blockquote><p><img src="http://picture.daoxuan.cc/image/202301301239367.webp" alt=""></p><h1 id="如何将前端的用户填入内容保存到数据库"><a href="#如何将前端的用户填入内容保存到数据库" class="headerlink" title="如何将前端的用户填入内容保存到数据库"></a>如何将前端的用户填入内容保存到数据库</h1><blockquote><p>安装上文中编写HTML的话，数据会从原路径安装post形式传输到后端</p></blockquote><h2 id="1-改写views视图函数"><a href="#1-改写views视图函数" class="headerlink" title="1. 改写views视图函数"></a>1. 改写views视图函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_box</span>(<span class="params">request, nid</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;show_box.html&quot;</span>, &#123;<span class="string">&#x27;form&#x27;</span>: CommentForm()&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = CommentForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            form.save()</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&quot;/show_box/&#123;&#125;/&quot;</span>.<span class="built_in">format</span>(nid))<span class="comment">#这里返回到原路径就好（.format这里只是格式化，是项目中所需的内容）</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;show_box.html&quot;</span>, &#123;<span class="string">&#x27;form&#x27;</span>: form&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>依然是modelform内容， 打印一下得到的form你就会知道用户上传的东西是什么。</p></blockquote><h1 id="如何将数据回显到前端"><a href="#如何将数据回显到前端" class="headerlink" title="如何将数据回显到前端"></a>如何将数据回显到前端</h1><h2 id="1-改写views视图函数-1"><a href="#1-改写views视图函数-1" class="headerlink" title="1. 改写views视图函数"></a>1. 改写views视图函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_box</span>(<span class="params">request, nid</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        content = Comment.objects.<span class="built_in">all</span>().order_by(<span class="string">&quot;-id&quot;</span>)<span class="comment">#加上order_by是想要最新发送的文章在最上面展示</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;show_box.html&quot;</span>, &#123;<span class="string">&quot;content&quot;</span>: content, <span class="string">&#x27;form&#x27;</span>: CommentForm()&#125;)<span class="comment">#这里也有变动哦</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = CommentForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> form.is_valid():</span><br><span class="line">            form.save()</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&quot;/show_box/&#123;&#125;/&quot;</span>.<span class="built_in">format</span>(nid))<span class="comment">#这里返回到原路径就好（.format这里只是格式化，是项目中所需的内容）</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;show_box.html&quot;</span>, &#123;<span class="string">&#x27;form&#x27;</span>: form&#125;)</span><br></pre></td></tr></table></figure><h2 id="2-改写html"><a href="#2-改写html" class="headerlink" title="2. 改写html"></a>2. 改写html</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> obj <span class="keyword">in</span> content %&#125;</span><br><span class="line">&#123;&#123; obj.content | safe &#125;&#125;<span class="comment">#|safe确保内容正常显示。</span></span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure><blockquote><p>具体样式自己更改</p></blockquote><p>这样就OK了</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前端后端都有讲解（附代码）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;如何在后端django后台使用富文本编辑器&quot;&gt;&lt;a href=&quot;#如何在后端dj</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>django 如何实现邮件发送</title>
    <link href="https://daoxuan.cc/posts/41761/"/>
    <id>https://daoxuan.cc/posts/41761/</id>
    <published>2022-12-20T18:38:31.000Z</published>
    <updated>2024-12-08T16:00:49.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>[TOC]</p><h1 id="django-如何实现邮箱邮件发送"><a href="#django-如何实现邮箱邮件发送" class="headerlink" title="django 如何实现邮箱邮件发送"></a>django 如何实现邮箱邮件发送</h1><h2 id="1-配置settings"><a href="#1-配置settings" class="headerlink" title="1. 配置settings"></a>1. 配置settings</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_HOST = <span class="string">&#x27;smtp.qq.com&#x27;</span>//邮箱发送服务器名称</span><br><span class="line">EMAIL_PORT = <span class="string">&#x27;465&#x27;</span>//邮箱发送服务器端口号</span><br><span class="line">EMAIL_HOST_USER = <span class="string">&#x27;&#x27;</span>//发送邮件的邮箱用户名</span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">&#x27;########&#x27;</span>//IMAP/SMTP服务授权码（在邮箱的设置中可以找到）</span><br><span class="line">EMAIL_USE_SSL = <span class="literal">True</span></span><br></pre></td></tr></table></figure><blockquote><p>注：不同邮箱的以上配置都不一样，注意自行查看。</p></blockquote><h2 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br></pre></td></tr></table></figure><h2 id="书写邮件内容"><a href="#书写邮件内容" class="headerlink" title="书写邮件内容"></a>书写邮件内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subject = <span class="string">&quot;&quot;</span>//主题</span><br><span class="line">message = <span class="string">&quot;&quot;</span>//文章内容（不会按照HTML显示）</span><br><span class="line">email = <span class="string">&quot;&quot;</span>//要发送的对象</span><br></pre></td></tr></table></figure><h2 id="编辑发送"><a href="#编辑发送" class="headerlink" title="编辑发送"></a>编辑发送</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">send_mail(subject=subject, message=message, from_email=settings.EMAIL_HOST_USER, recipient_list=[email, ])</span><br></pre></td></tr></table></figure><blockquote><p>注意message必须要有， 如果想要按照HTML显示， 需要加上”html_message=“这个参数。</p></blockquote><p>函数运行之后便会发送邮件</p><blockquote><p>可能会有延时</p></blockquote></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;django-如何实现邮箱邮件发送&quot;&gt;&lt;a href=&quot;#django-如何实现邮箱邮件发送&quot; class=&quot;headerlink&quot; title=&quot;django 如何实现邮箱邮</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>django笔记</title>
    <link href="https://daoxuan.cc/posts/22678/"/>
    <id>https://daoxuan.cc/posts/22678/</id>
    <published>2022-12-10T07:24:12.000Z</published>
    <updated>2024-12-08T16:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>[TOC]</p><h1 id="django的使用"><a href="#django的使用" class="headerlink" title="django的使用"></a>django的使用</h1><h2 id="1-创建表"><a href="#1-创建表" class="headerlink" title="1.创建表"></a>1.创建表</h2><h3 id="1-1在表中新增列时，由于已存在列中可能已有数据，所以新增列必须制定新增列对应的数据"><a href="#1-1在表中新增列时，由于已存在列中可能已有数据，所以新增列必须制定新增列对应的数据" class="headerlink" title="1.1在表中新增列时，由于已存在列中可能已有数据，所以新增列必须制定新增列对应的数据"></a>1.1在表中新增列时，由于已存在列中可能已有数据，所以新增列必须制定新增列对应的数据</h3><ol><li><p>手动输入一个值</p></li><li><p>设置默认值</p><blockquote><p>age = models.InterField(default = 2)</p></blockquote></li><li><p>允许为空</p><blockquote><p>age = models.InterField(null = True, blank = True)</p></blockquote></li><li><p>要选择一段矩形代码，请在按住 Shift+Alt (在 Windows 和 Linux 中)/ Shift+Alt (Option) (在 macOS 中)的同时拖动鼠标。</p></li></ol><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h2 id="1-’NoneType’-object-has-no-attribute-‘password’"><a href="#1-’NoneType’-object-has-no-attribute-‘password’" class="headerlink" title="1.’NoneType’ object has no attribute ‘password’"></a>1.’NoneType’ object has no attribute ‘password’</h2><p>这个是在数据库数据为空的时候出现的bug</p><ul><li>名字不能为中文</li><li>密码最小长度</li><li>评论区换行符变成了空格</li></ul><h2 id="2-Q查询中“，”可以表示and而直接用and却表示的是或"><a href="#2-Q查询中“，”可以表示and而直接用and却表示的是或" class="headerlink" title="2.Q查询中“，”可以表示and而直接用and却表示的是或"></a>2.Q查询中“，”可以表示and而直接用and却表示的是或</h2><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><p>用get方法传输值的时候 用？加上name=一个值，传输多个值的时候，用&amp;进行连接，不用在加上？了</p><p>eg：<a class="btn btn-primary" href="/user_list/boxdelete/?username=&name=">删除盲盒</a></p><h1 id="随机从数据库中取数据"><a href="#随机从数据库中取数据" class="headerlink" title="随机从数据库中取数据"></a>随机从数据库中取数据</h1><ol><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">10</span></span><br><span class="line">i = random.ranint(<span class="number">0</span>, UserInfo.objects.count()-n)</span><br><span class="line">articles = UserInfo.objects.<span class="built_in">all</span>()[i: i+n]</span><br></pre></td></tr></table></figure></li><li></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">count <span class="operator">=</span> <span class="type">Article</span>.objects.all().count()</span><br><span class="line">rand_ids <span class="operator">=</span> sample(range(<span class="number">1</span>, count), <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(rand_ids)</span><br><span class="line">articles <span class="operator">=</span> <span class="type">Article</span>.objects.filter(id__in<span class="operator">=</span>rand_ids)</span><br></pre></td></tr></table></figure><ol><li><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">content_pks = Article.objects.<span class="title function_ invoke__">values_list</span>(<span class="string">&#x27;pk&#x27;</span>, flat=True)</span><br><span class="line">selected_pks = random.<span class="title function_ invoke__">sample</span>(<span class="keyword">list</span>(content_pks), <span class="number">3</span>)</span><br><span class="line">content_objects = Article.objects.<span class="title function_ invoke__">filter</span>(pk__in=selected_pks)</span><br><span class="line"><span class="keyword">print</span>(content_objects)</span><br></pre></td></tr></table></figure></li><li></li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total_count<span class="operator">=</span> <span class="type">Content</span>.objects.count()</span><br><span class="line">fraction <span class="operator">=</span> <span class="number">100</span><span class="operator">./</span>total_count</span><br><span class="line">object_list <span class="operator">=</span> [ c <span class="keyword">for</span> c <span class="keyword">in</span> <span class="type">Content</span>.objects.all() <span class="keyword">if</span> random.random() <span class="operator">&lt;</span> fraction ]</span><br></pre></td></tr></table></figure><p>sample(序列a，n)</p><p>功能：从序列a中随机抽取n个元素，并将n个元素生以list形式返回</p><p>一、下面来看看：filter查询：</p><p>1.__contains(包含)</p><p>shell命令下查询：Blog.objects.filter(title__contains =”django”)—————————&gt;返回一个queryset[]查询(查询集)只能输入一个值。加上一个”i”后不区别大小写【sql等数据库中】</p><p>2.__in (其中之一，可以传入一个列表，传多个值。)</p><p>Blog.objects.filter(id__in = [3,6,9])</p><p>3.__range(一个范围，使用元祖)：</p><blockquote><p>Blog.objects.filter(id__range =(30,45))</p></blockquote><p>二、前面讲的是包含的查询，下面来看看不包含的查询：</p><p>exclude方法为不包含的：</p><p>Blog.objects.exclude(id=3)</p><p>三、日期类型查询</p><p>Blog.objects.filter(create_time__year = 2018)——————-&gt;查询年为2018年的内容</p><p>Blog.objects.filter(create_time__month=3)————————-&gt;查询月</p><p>四、日期查询类型只是筛选了条件，怎么让条件在前端显示呢？django提供了一个dates方法：</p><p>Blog.objects.dates(‘create_time’, ‘year’,’DESC’)——————————-&gt;分别为：时间字段，查询返回年year，年月month，年月日day，最后一个参数是排序方式ASC正序，DESC倒序。</p><h1 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h1><p><div class="blog-content-box">        <div class="article-header-box">        <div class="article-header">            <div class="article-title-box">                <h1 class="title-article" id="articleContentId">Django获取文件的方式及文件MD5的多种方法</h1>            </div><br>            <div class="article-info-box">                <div class="article-bar-top">                    <img class="article-type-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/original.png" alt="">                    <div class="bar-content">                    <a class="follow-nickName vip-name" href="https://amoor.blog.csdn.net" target="_blank" rel="noopener">Amoor123</a>                    <img class="article-time-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png" alt="">                    <span class="time">于&nbsp;2022-04-05 01:10:43&nbsp;发布</span>                    <img class="article-read-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png" alt="">                    <span class="read-count">1017</span>                    <a id="blog_detail_zk_collection" class="un-collection" data-report-click="{&quot;mod&quot;:&quot;popu_823&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4232&quot;,&quot;ab&quot;:&quot;new&quot;}">                        <img class="article-collect-img article-heard-img un-collect-status isdefault" style="display:inline-block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect2.png" alt="">                        <img class="article-collect-img article-heard-img collect-status isactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive2.png" alt="">                        <span class="name">收藏</span>                        <span class="get-collection">                        </span>                    </a>                    </div><br>                &lt;/div&gt;<br>                <div class="blog-tags-box">                    <div class="tags-box artic-tag-box">                            <span class="label">分类专栏：</span>                                <a class="tag-link" href="https://blog.csdn.net/sabian2/category_11244528.html" target="_blank" rel="noopener">Django</a>                            <span class="label">文章标签：</span>                                <a data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;python&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;python\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=python&amp;t=blog&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=" target="_blank" rel="noopener">python</a>                                <a data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;django&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;django\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=django&amp;t=blog&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=" target="_blank" rel="noopener">django</a>                    </div><br>                &lt;/div&gt;<br>                <div class="slide-content-box">                    <div class="article-copyright">                        <div class="creativecommons">                            版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。                        </div><br>                        <div class="article-source-link">                            本文链接：<a href="https://blog.csdn.net/sabian2/article/details/123963621" target="_blank">https://blog.csdn.net/sabian2/article/details/123963621</a>                        </div><br>                    &lt;/div&gt;<br>                &lt;/div&gt;<br>                <div class="operating">                    <a class="href-article-edit slide-toggle">版权</a>                </div><br>            &lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;</p><p><h1><a name="t0"></a><a id="_2"></a>获取文件</h1> </p><p><pre data-index="0" class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">    files <span class="token operator">=</span> request<span class="token punctuation">.</span>FILES<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘my_file’</span><span class="token punctuation">)</span></p><p><div class="hljs-button {2}" data-title="复制"></div>&lt;/code&gt;<ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul>&lt;/pre&gt; </p><p><h2><a name="t1">&lt;/a&gt;<a id="_7"></a>文件的属性</h2> </p><p><p>file.name 上传的文件名称<br> file.content_type 内容类型<br> file.size 文件字节大小<br> file.read() 文件内容<br> <img src="https://img-blog.csdnimg.cn/6da877dd94a54dde8826d43181df7f04.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQW1vb3IxMjM=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p> </p><p><h1><a name="t2"></a><a id="MD53_13"></a>获取<a href="https://so.csdn.net/so/search?q=MD5&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=MD5&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;MD5\&quot;}&quot;}" data-tit="MD5" data-pretit="md5">MD5</a>值的3种方式</h1> </p><p><h2><a name="t3">&lt;/a&gt;<a id="chunks_15"></a>chunks的方式</h2> </p><p><pre data-index="1" class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">    <span class="token keyword">import</span> hashlib<br>    files <span class="token operator">=</span> request<span class="token punctuation">.</span>FILES<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘my_file’</span><span class="token punctuation">)</span><span class="token punctuation">.</span>chunks<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    <span class="token keyword">for</span> k <span class="token keyword">in</span> files<span class="token punctuation">:</span><br>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>k<span class="token punctuation">)</span><br>        <span class="token comment"># print(k)</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></p><p><div class="hljs-button {2}" data-title="复制"></div>&lt;/code&gt;<ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul>&lt;/pre&gt; </p><p><h2><a name="t4">&lt;/a&gt;<a id="_27"></a>读文件的方式</h2> </p><p><pre data-index="2" class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">    <span class="token keyword">import</span> hashlib<br>    files <span class="token operator">=</span> request<span class="token punctuation">.</span>FILES<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘my_file’</span><span class="token punctuation">)</span><br>    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    xx<span class="token operator">=</span>files<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>xx<span class="token punctuation">)</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></p><p><div class="hljs-button {2}" data-title="复制"></div>&lt;/code&gt;<ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul>&lt;/pre&gt; </p><p><h2><a name="t5">&lt;/a&gt;<a id="_37"></a>文件循环的方式</h2> </p><p><pre data-index="3" class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">    <span class="token keyword">import</span> hashlib<br>    files <span class="token operator">=</span> request<span class="token punctuation">.</span>FILES<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘my_file’</span><span class="token punctuation">)</span><br>    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    <span class="token keyword">for</span> i <span class="token keyword">in</span> files<span class="token punctuation">:</span><br>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>i<span class="token punctuation">)</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></p><p><div class="hljs-button {2}" data-title="复制"></div>&lt;/code&gt;<ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul>&lt;/pre&gt;</p><h1 id="Django-ModelForm中保存数据-save-与create-的区别"><a href="#Django-ModelForm中保存数据-save-与create-的区别" class="headerlink" title="Django ModelForm中保存数据 save()与create()的区别"></a>Django ModelForm中保存数据 save()与create()的区别</h1><p><img src="https://picture.daoxuan.cc/image/202301301241909.webp" alt=""></p><p><a href="https://blog.csdn.net/weixin_43670190/article/details/111902269?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-111902269-blog-124567612.pc_relevant_3mothn_strategy_recovery&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-111902269-blog-124567612.pc_relevant_3mothn_strategy_recovery&amp;utm_relevant_index=8">网址</a> </p><h1 id="向数据库中存储图片路径"><a href="#向数据库中存储图片路径" class="headerlink" title="向数据库中存储图片路径"></a>向数据库中存储图片路径</h1><p><a href="https://www.cnblogs.com/wjw1014/p/8664474.html?ivk_sa=1024320u">urls</a></p><h1 id="django的批量删除"><a href="#django的批量删除" class="headerlink" title="django的批量删除"></a>django的批量删除</h1><p>按住shift，先点第一个在点最后一个</p><h1 id="update更新机制"><a href="#update更新机制" class="headerlink" title="update更新机制"></a>update更新机制</h1><ul><li>只能更新QuerySet类型</li></ul><h1 id="python-silk的配置"><a href="#python-silk的配置" class="headerlink" title="python - silk的配置"></a>python - silk的配置</h1><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a href="https://www.cnblogs.com/-wenli/p/13500210.html">中文教程</a></p><p><a href="https://github.com/jazzband/django-silk">github教程</a></p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p><img src="https://picture.daoxuan.cc/image/202301301241284.webp" alt=""></p><h3 id="Python项目运行报错-django-core-exceptions-ImproperlyConfigured-WSGI-application-‘WebTool-wsgi-application"><a href="#Python项目运行报错-django-core-exceptions-ImproperlyConfigured-WSGI-application-‘WebTool-wsgi-application" class="headerlink" title="Python项目运行报错 django.core.exceptions.ImproperlyConfigured: WSGI application ‘WebTool.wsgi.application"></a>Python项目运行报错 django.core.exceptions.ImproperlyConfigured: WSGI application ‘WebTool.wsgi.application</h3><p><a href="https://blog.csdn.net/gmaaa123/article/details/125477977">https://blog.csdn.net/gmaaa123/article/details/125477977</a></p><h1 id="关于session"><a href="#关于session" class="headerlink" title="关于session"></a>关于session</h1><p><img src="http://picture.daoxuan.cc/image/202301301241600.webp" alt=""></p><p><a href="https://blog.csdn.net/RikkaTakanashi/article/details/82595804">网址</a></p><h1 id="页面的跳转"><a href="#页面的跳转" class="headerlink" title="页面的跳转"></a>页面的跳转</h1><h2 id="在新页面中打开"><a href="#在新页面中打开" class="headerlink" title="在新页面中打开"></a>在新页面中打开</h2><p>可以在URL的后面加上_target=”blank”</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;django的使用&quot;&gt;&lt;a href=&quot;#django的使用&quot; class=&quot;headerlink&quot; title=&quot;django的使用&quot;&gt;&lt;/a&gt;django的使用&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="django" scheme="https://daoxuan.cc/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>how to use ChatGPT in your browser</title>
    <link href="https://daoxuan.cc/posts/24059/"/>
    <id>https://daoxuan.cc/posts/24059/</id>
    <published>2022-12-10T06:27:36.000Z</published>
    <updated>2024-12-08T16:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<div id="postchat_postcontent"><p>[TOC]</p><blockquote><p>首先注意，应使用Microsoft Edge浏览器或者谷歌浏览器，使用Firefox的话需要自己探索。</p></blockquote><h1 id="如何在浏览器中布置自己的ChatGPT"><a href="#如何在浏览器中布置自己的ChatGPT" class="headerlink" title="如何在浏览器中布置自己的ChatGPT"></a>如何在浏览器中布置自己的ChatGPT</h1><h2 id="1-首先打开浏览器扩展页面"><a href="#1-首先打开浏览器扩展页面" class="headerlink" title="1. 首先打开浏览器扩展页面"></a>1. 首先打开浏览器扩展页面</h2><ol><li>点击管理扩展</li></ol><p><img src="http://picture.daoxuan.cc/image/202301301242928.webp" alt=""></p><ol><li>点击开发者模式</li></ol><h2 id="2-下载扩展"><a href="#2-下载扩展" class="headerlink" title="2. 下载扩展"></a>2. 下载扩展</h2><p>通过以下方式自主选择下载</p><ol><li>github: <a href="https://github.com/josStorer/chat-gpt-search-engine-extension/releases/tag/v1.2.0">https://github.com/josStorer/chat-gpt-search-engine-extension/releases/tag/v1.2.0</a></li><li><a href="https://pan.baidu.com/s/1MnFJTDIatyIIPr5kUMWsAw?pwd=1111">https://pan.baidu.com/s/1MnFJTDIatyIIPr5kUMWsAw?pwd=1111</a><br>提取码：1111</li></ol><blockquote><p>注意：我们这里下载的版本如果是1.2.0则符合要求，如果是1.1.0的话只能在Google上使用。</p></blockquote><h2 id="3-安装扩展"><a href="#3-安装扩展" class="headerlink" title="3. 安装扩展"></a>3. 安装扩展</h2><ol><li>下载时候有提示，根据提示直接安装至浏览器（用浏览器自带的扩展商店）</li><li>如果直接下载的压缩包，无需解压，直接拖拽至这个界面，即可完成。</li></ol><blockquote><p>记得关闭开发者模式，更加安全。</p></blockquote><h2 id="最后看看效果"><a href="#最后看看效果" class="headerlink" title="最后看看效果"></a>最后看看效果</h2><p><img src="http://picture.daoxuan.cc/image/202301301242902.webp" alt=""></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div id=&quot;postchat_postcontent&quot;&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先注意，应使用Microsoft Edge浏览器或者谷歌浏览器，使用Firefox的话需要自己探索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;如何</summary>
      
    
    
    
    
    <category term="ChatGPT" scheme="https://daoxuan.cc/tags/ChatGPT/"/>
    
  </entry>
  
</feed>
